{"ast":null,"code":"import axios from 'axios'; // para crear las peticiones de axios\n// process.env.NODE_ENV === 'production'\n// ? (const baseURL = 'here should be your production endpoint')\n// : ();\n\nconst baseURL = 'http://localhost:3000/api';\nconst service = axios.create({\n  baseURL\n});\nconst MY_SERVICE = {\n  test: async () => {\n    return await service.get('/');\n  },\n  signup: async user => {\n    return await service.post('/signup', user);\n  },\n  login: async user => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  },\n  addCenter: async center => {\n    return await service.post('/create-new', center);\n  }\n};\nexport default MY_SERVICE;","map":{"version":3,"sources":["/home/nicte/ironhack/Proyecto-Modulo-3/frontend/src/services/index.js"],"names":["axios","baseURL","service","create","MY_SERVICE","test","get","signup","user","post","login","logOut","addCenter","center"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACE;AACA;;AACF,MAAMC,OAAO,GAAG,2BAAhB;AAEA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAAEF,EAAAA;AAAF,CAAb,CAAhB;AAEA,MAAMG,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE,YAAY;AAChB,WAAO,MAAMH,OAAO,CAACI,GAAR,CAAY,GAAZ,CAAb;AACD,GAHgB;AAIjBC,EAAAA,MAAM,EAAE,MAAOC,IAAP,IAAgB;AACtB,WAAO,MAAMN,OAAO,CAACO,IAAR,CAAa,SAAb,EAAwBD,IAAxB,CAAb;AACD,GANgB;AAOjBE,EAAAA,KAAK,EAAE,MAAOF,IAAP,IAAgB;AACrB,WAAO,MAAMN,OAAO,CAACO,IAAR,CAAa,QAAb,EAAuBD,IAAvB,CAAb;AACD,GATgB;AAUjBG,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,MAAMT,OAAO,CAACI,GAAR,CAAY,SAAZ,CAAb;AACD,GAZgB;AAcjBM,EAAAA,SAAS,EAAE,MAAMC,MAAN,IAAgB;AACzB,WAAO,MAAMX,OAAO,CAACO,IAAR,CAAa,aAAb,EAA4BI,MAA5B,CAAb;AACD;AAhBgB,CAAnB;AAqBA,eAAeT,UAAf","sourcesContent":["import axios from 'axios';\n\n// para crear las peticiones de axios\n\n// process.env.NODE_ENV === 'production'\n  // ? (const baseURL = 'here should be your production endpoint')\n  // : ();\nconst baseURL = 'http://localhost:3000/api'\n\nconst service = axios.create({ baseURL });\n\nconst MY_SERVICE = {\n  test: async () => {\n    return await service.get('/');\n  },\n  signup: async (user) => {\n    return await service.post('/signup', user);\n  },\n  login: async (user) => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  },\n\n  addCenter: async center => {\n    return await service.post('/create-new', center)\n  }\n\n\n};\n\nexport default MY_SERVICE;\n"]},"metadata":{},"sourceType":"module"}