{"ast":null,"code":"var _jsxFileName = \"/home/nicte/ironhack/Proyecto-Modulo-3/frontend/src/components/Centers/Center.js\";\n// import React, { Component } from 'react'\n// // import { Link } from 'react-router-dom'\n// import axios from 'axios'\n// export default class Center extends Component {\n//     state = {\n//         center: {}\n//     }\n//     getCenter = async () => {\n//         console.log(this.props.match.params.id)\n//         const response = await axios.get(`http://localhost:3000/api/center/${this.props.match.params.id}`)        \n//         this.setState({\n//             center: response.data.place\n//         })\n//     }\n//     componentDidMount() {\n//         this.getCenter()\n//     }\n//     render() {\n//         const { center } = this.state\n//        console.log(center);\n//         return (\n//             <div className=\"columns\">\n//                 <div  className=\"column is -7 map\">\n//                     <head>\n//                         <title>Localizacion</title>\n//                         <script src='https://api.mapbox.com/mapbox-gl-js/v1.4.0/mapbox-gl.js'></script>\n//                         <link href='https://api.mapbox.com/mapbox-gl-js/v1.4.0/mapbox-gl.css' rel='stylesheet' />\n//                     </head>\n//                     <body>\n//                         <h3>Localizacion</h3>                        \n//                         <div id='map' style='width: 300px; height: 200px;'></div>\n//                         <script>\n//                             mapboxgl.accessToken = 'pk.eyJ1IjoidGFubWFyMjMiLCJhIjoiY2swZHhvbnJpMGJ4bDNubXFqNGdybDlkYiJ9.va1kadS3r0r_3NprttZ3YA';\n//                             var map = new mapboxgl.Map({\n//                             container: 'map',\n//                             style: 'mapbox://styles/mapbox/streets-v11',\n//                             center: [-99.1711, 19.399],\n//                             zoom: 15\n//                             });\n//                         </script>\n//                     </body>\n//                 </div>\n//                 <div  className=\"column is-5 data\">\n//                     <p>Categoria: {this.state.center.tipoResiduo}</p>\n//                     <p>Nombre: {this.state.center.empresa}</p>\n//                     <p>Como llegar?</p>\n//                     <p>Direccion: {this.state.center.address}</p>\n//                     <p>Contacto</p>\n//                     <p>Email: {this.state.center.email ? this.state.center.email : 'No disponible'}</p>\n//                     <p>Numero: {this.state.center.contactNumber ? this.state.center.contactNumber : 'No disponible'}</p>\n//                     <p>Website: {this.state.center.website ? this.state.center.website : 'No disponible'}</p>\n//                     <p>Horario: {this.state.center.horario ? this.state.center.horario : 'No disponible'}</p>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\nimport React, { Component } from \"react\";\nimport MapboxDirections from \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions\";\nimport mapboxgl from \"mapbox-gl\";\nmapboxgl.accessToken = \"pk.eyJ1IjoibWx6eiIsImEiOiJjandrNmVzNzUwNWZjNGFqdGcwNmJ2ZWhpIn0.ybY6wnAtJwj-Tq0c46sW6A\";\n\nclass Center extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: {}\n    };\n\n    this.getCenter = async () => {\n      console.log(this.props.match.params.id);\n      const response = await axios.get(\"http://localhost:3000/api/center/\".concat(this.props.match.params.id));\n      this.setState({\n        center: response.data.place\n      });\n    };\n  }\n\n  componentDidMount() {\n    g;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/mapbox/streets-v9\"\n    });\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        const user_location = [position.coords.longitude, position.coords.latitude];\n        map.setZoom(15).setCenter(user_location);\n        new mapboxgl.Marker({\n          color: \"red\"\n        }).setLngLat(user_location).setPopup(new mapboxgl.Popup().setHTML(\"<h3>Usted está aquí</h3>\")).addTo(map);\n      });\n    }\n\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true,\n      showUserLocation: true\n    }));\n    map.addControl(new MapboxDirections({\n      accessToken: mapboxgl.accessToken,\n      unit: \"metric\",\n      language: \"es\",\n      placeholderOrigin: \"Seleccione su lugar de origen\",\n      placeholderDestination: \"Seleccione su destino\"\n    }), \"top-left\");\n    map.addControl(new mapboxgl.NavigationControl());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: \"50vw\",\n        height: \"90vh\"\n      },\n      ref: e => this.mapContainer = e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Center;","map":{"version":3,"sources":["/home/nicte/ironhack/Proyecto-Modulo-3/frontend/src/components/Centers/Center.js"],"names":["React","Component","MapboxDirections","mapboxgl","accessToken","Center","state","center","getCenter","console","log","props","match","params","id","response","axios","get","setState","data","place","componentDidMount","g","map","Map","container","mapContainer","style","navigator","geolocation","getCurrentPosition","position","user_location","coords","longitude","latitude","setZoom","setCenter","Marker","color","setLngLat","setPopup","Popup","setHTML","addTo","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","unit","language","placeholderOrigin","placeholderDestination","NavigationControl","render","width","height","e"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\n// // import { Link } from 'react-router-dom'\n// import axios from 'axios'\n\n\n// export default class Center extends Component {\n//     state = {\n//         center: {}\n//     }\n\n//     getCenter = async () => {\n//         console.log(this.props.match.params.id)\n//         const response = await axios.get(`http://localhost:3000/api/center/${this.props.match.params.id}`)        \n//         this.setState({\n//             center: response.data.place\n//         })\n//     }\n\n//     componentDidMount() {\n//         this.getCenter()\n//     }\n\n\n//     render() {\n//         const { center } = this.state\n//        console.log(center);\n//         return (\n//             <div className=\"columns\">\n//                 <div  className=\"column is -7 map\">\n//                     <head>\n//                         <title>Localizacion</title>\n//                         <script src='https://api.mapbox.com/mapbox-gl-js/v1.4.0/mapbox-gl.js'></script>\n//                         <link href='https://api.mapbox.com/mapbox-gl-js/v1.4.0/mapbox-gl.css' rel='stylesheet' />\n//                     </head>\n//                     <body>\n//                         <h3>Localizacion</h3>                        \n//                         <div id='map' style='width: 300px; height: 200px;'></div>\n//                         <script>\n//                             mapboxgl.accessToken = 'pk.eyJ1IjoidGFubWFyMjMiLCJhIjoiY2swZHhvbnJpMGJ4bDNubXFqNGdybDlkYiJ9.va1kadS3r0r_3NprttZ3YA';\n\n//                             var map = new mapboxgl.Map({\n//                             container: 'map',\n//                             style: 'mapbox://styles/mapbox/streets-v11',\n//                             center: [-99.1711, 19.399],\n//                             zoom: 15\n//                             });\n//                         </script>\n//                     </body>\n        \t\t\n//                 </div>\n//                 <div  className=\"column is-5 data\">\n//                     <p>Categoria: {this.state.center.tipoResiduo}</p>\n//                     <p>Nombre: {this.state.center.empresa}</p>\n//                     <p>Como llegar?</p>\n//                     <p>Direccion: {this.state.center.address}</p>\n//                     <p>Contacto</p>\n//                     <p>Email: {this.state.center.email ? this.state.center.email : 'No disponible'}</p>\n//                     <p>Numero: {this.state.center.contactNumber ? this.state.center.contactNumber : 'No disponible'}</p>\n//                     <p>Website: {this.state.center.website ? this.state.center.website : 'No disponible'}</p>\n//                     <p>Horario: {this.state.center.horario ? this.state.center.horario : 'No disponible'}</p>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n\nimport React, { Component } from \"react\";\nimport MapboxDirections from \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions\";\nimport mapboxgl from \"mapbox-gl\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoibWx6eiIsImEiOiJjandrNmVzNzUwNWZjNGFqdGcwNmJ2ZWhpIn0.ybY6wnAtJwj-Tq0c46sW6A\";\n\nclass Center extends Component {\n    state = {\n                center: {}\n            }\n        \n            getCenter = async () => {\n                console.log(this.props.match.params.id)\n                const response = await axios.get(`http://localhost:3000/api/center/${this.props.match.params.id}`)        \n                this.setState({\n                    center: response.data.place\n                })\n            }\n\n\n  componentDidMount() {\n\n    g\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/mapbox/streets-v9\"\n    });\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        const user_location = [\n          position.coords.longitude,\n          position.coords.latitude\n        ];\n        map.setZoom(15).setCenter(user_location);\n        new mapboxgl.Marker({ color: \"red\" })\n          .setLngLat(user_location)\n          .setPopup(new mapboxgl.Popup().setHTML(\"<h3>Usted está aquí</h3>\"))\n          .addTo(map);\n      });\n    }\n\n\n\n\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true\n      })\n    );\n\n    map.addControl(\n      new MapboxDirections({\n        accessToken: mapboxgl.accessToken,\n        unit: \"metric\",\n        language: \"es\",\n        placeholderOrigin: \"Seleccione su lugar de origen\",\n        placeholderDestination: \"Seleccione su destino\"\n      }),\n      \"top-left\"\n    );\n\n    map.addControl(new mapboxgl.NavigationControl());\n\n  }\n  render() {\n    return (\n      <div\n        style={{ width: \"50vw\", height: \"90vh\" }}\n        ref={e => (this.mapContainer = e)}\n      />\n    );\n  }\n}\n\nexport default Center;"]},"metadata":{},"sourceType":"module"}