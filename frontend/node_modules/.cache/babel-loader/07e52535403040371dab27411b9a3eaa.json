{"ast":null,"code":"var _jsxFileName = \"/home/nicte/ironhack/Proyecto-Modulo-3/frontend/src/components/Centers/Center.js\";\nimport React, { Component } from \"react\";\nimport MapboxDirections from \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from 'axios';\nmapboxgl.accessToken = \"pk.eyJ1IjoibWx6eiIsImEiOiJjandrNmVzNzUwNWZjNGFqdGcwNmJ2ZWhpIn0.ybY6wnAtJwj-Tq0c46sW6A\";\n\nclass Center extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3000/api/center/\".concat(this.props.match.params.id)).then(res => {\n      this.setState({\n        center: res.data.place\n      });\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: \"mapbox://styles/mapbox/streets-v9\"\n      });\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          const user_location = [position.coords.longitude, position.coords.latitude];\n          map.setZoom(12).setCenter(user_location);\n          new mapboxgl.Marker({\n            color: \"red\"\n          }).setLngLat(user_location).setPopup(new mapboxgl.Popup().setHTML(\"<h3>Usted está aquí</h3>\")).addTo(map);\n        });\n      }\n\n      if (this.state.center.longitud && this.state.center.latitud) {\n        const center_location = [this.state.center.longitud, this.state.center.latitud];\n        new mapboxgl.Marker({\n          color: \"green\"\n        }).setLngLat(center_location).setPopup(new mapboxgl.Popup().setHTML(\"<h3>Destino</h3>\")).addTo(map);\n      }\n\n      map.addControl(new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true\n      }));\n      map.addControl(new MapboxDirections({\n        accessToken: mapboxgl.accessToken,\n        unit: \"metric\",\n        language: \"es\",\n        placeholderOrigin: \"Seleccione su lugar de origen\",\n        placeholderDestination: \"Seleccione su destino\"\n      }), \"top-left\");\n      map.addControl(new mapboxgl.NavigationControl());\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"50vw\",\n        height: \"90vh\"\n      },\n      ref: e => this.mapContainer = e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.center.empresa)));\n  }\n\n}\n\nexport default Center;","map":{"version":3,"sources":["/home/nicte/ironhack/Proyecto-Modulo-3/frontend/src/components/Centers/Center.js"],"names":["React","Component","MapboxDirections","mapboxgl","axios","accessToken","Center","state","center","componentDidMount","get","props","match","params","id","then","res","setState","data","place","map","Map","container","mapContainer","style","navigator","geolocation","getCurrentPosition","position","user_location","coords","longitude","latitude","setZoom","setCenter","Marker","color","setLngLat","setPopup","Popup","setHTML","addTo","longitud","latitud","center_location","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","unit","language","placeholderOrigin","placeholderDestination","NavigationControl","render","width","height","e","empresa"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport MapboxDirections from \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from 'axios'\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoibWx6eiIsImEiOiJjandrNmVzNzUwNWZjNGFqdGcwNmJ2ZWhpIn0.ybY6wnAtJwj-Tq0c46sW6A\";\n\nclass Center extends Component {\n    state = {\n                center: {}\n            }\n        \n\n\n  componentDidMount() {\n    axios.get(`http://localhost:3000/api/center/${this.props.match.params.id}`).then( res =>{\n    this.setState({center: res.data.place})\n    const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: \"mapbox://styles/mapbox/streets-v9\"\n      });\n  \n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          const user_location = [\n            position.coords.longitude,\n            position.coords.latitude\n          ];\n          map.setZoom(12).setCenter(user_location);\n          new mapboxgl.Marker({ color: \"red\" })\n            .setLngLat(user_location)\n            .setPopup(new mapboxgl.Popup().setHTML(\"<h3>Usted está aquí</h3>\"))\n            .addTo(map);\n        });\n      }\n\n    if(this.state.center.longitud && this.state.center.latitud){\n        const center_location = [this.state.center.longitud, this.state.center.latitud]\n        new mapboxgl.Marker({ color: \"green\" })\n        .setLngLat(center_location)\n        .setPopup(new mapboxgl.Popup().setHTML(\"<h3>Destino</h3>\"))\n        .addTo(map);\n    }\n  \n      map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true\n          },\n          trackUserLocation: true,\n          showUserLocation: true\n        })\n      );\n  \n      map.addControl(\n        new MapboxDirections({\n          accessToken: mapboxgl.accessToken,\n          unit: \"metric\",\n          language: \"es\",\n          placeholderOrigin: \"Seleccione su lugar de origen\",\n          placeholderDestination: \"Seleccione su destino\"\n        }),\n        \"top-left\"\n      );\n  \n      map.addControl(new mapboxgl.NavigationControl());\n  \n    })\n  }\n  render() {\n    return (\n     <div>\n          <div\n        style={{ width: \"50vw\", height: \"90vh\" }}\n        ref={e => (this.mapContainer = e)}\n      />\n      <div>\n          <h1>{this.state.center.empresa}</h1>\n      </div>\n     </div>\n    );\n  }\n}\n\nexport default Center;"]},"metadata":{},"sourceType":"module"}