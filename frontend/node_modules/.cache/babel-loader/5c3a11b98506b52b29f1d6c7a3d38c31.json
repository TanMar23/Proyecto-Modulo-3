{"ast":null,"code":"(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.MapboxDirections = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function () {\n    function r(e, n, t) {\n      function o(i, f) {\n        if (!n[i]) {\n          if (!e[i]) {\n            var c = \"function\" == typeof require && require;\n            if (!f && c) return c(i, !0);\n            if (u) return u(i, !0);\n            var a = new Error(\"Cannot find module '\" + i + \"'\");\n            throw a.code = \"MODULE_NOT_FOUND\", a;\n          }\n\n          var p = n[i] = {\n            exports: {}\n          };\n          e[i][0].call(p.exports, function (r) {\n            var n = e[i][1][r];\n            return o(n || r);\n          }, p, p.exports, r, e, n, t);\n        }\n\n        return n[i].exports;\n      }\n\n      for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);\n\n      return o;\n    }\n\n    return r;\n  }()({\n    1: [function (require, module, exports) {\n      'use strict';\n      /**\n       * Based off of [the offical Google document](https://developers.google.com/maps/documentation/utilities/polylinealgorithm)\n       *\n       * Some parts from [this implementation](http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/PolylineEncoder.js)\n       * by [Mark McClure](http://facstaff.unca.edu/mcmcclur/)\n       *\n       * @module polyline\n       */\n\n      var polyline = {};\n\n      function py2_round(value) {\n        // Google's polyline algorithm uses the same rounding strategy as Python 2, which is different from JS for negative values\n        return Math.floor(Math.abs(value) + 0.5) * (value >= 0 ? 1 : -1);\n      }\n\n      function encode(current, previous, factor) {\n        current = py2_round(current * factor);\n        previous = py2_round(previous * factor);\n        var coordinate = current - previous;\n        coordinate <<= 1;\n\n        if (current - previous < 0) {\n          coordinate = ~coordinate;\n        }\n\n        var output = '';\n\n        while (coordinate >= 0x20) {\n          output += String.fromCharCode((0x20 | coordinate & 0x1f) + 63);\n          coordinate >>= 5;\n        }\n\n        output += String.fromCharCode(coordinate + 63);\n        return output;\n      }\n      /**\n       * Decodes to a [latitude, longitude] coordinates array.\n       *\n       * This is adapted from the implementation in Project-OSRM.\n       *\n       * @param {String} str\n       * @param {Number} precision\n       * @returns {Array}\n       *\n       * @see https://github.com/Project-OSRM/osrm-frontend/blob/master/WebContent/routing/OSRM.RoutingGeometry.js\n       */\n\n\n      polyline.decode = function (str, precision) {\n        var index = 0,\n            lat = 0,\n            lng = 0,\n            coordinates = [],\n            shift = 0,\n            result = 0,\n            byte = null,\n            latitude_change,\n            longitude_change,\n            factor = Math.pow(10, Number.isInteger(precision) ? precision : 5); // Coordinates have variable length when encoded, so just keep\n        // track of whether we've hit the end of the string. In each\n        // loop iteration, a single coordinate is decoded.\n\n        while (index < str.length) {\n          // Reset shift, result, and byte\n          byte = null;\n          shift = 0;\n          result = 0;\n\n          do {\n            byte = str.charCodeAt(index++) - 63;\n            result |= (byte & 0x1f) << shift;\n            shift += 5;\n          } while (byte >= 0x20);\n\n          latitude_change = result & 1 ? ~(result >> 1) : result >> 1;\n          shift = result = 0;\n\n          do {\n            byte = str.charCodeAt(index++) - 63;\n            result |= (byte & 0x1f) << shift;\n            shift += 5;\n          } while (byte >= 0x20);\n\n          longitude_change = result & 1 ? ~(result >> 1) : result >> 1;\n          lat += latitude_change;\n          lng += longitude_change;\n          coordinates.push([lat / factor, lng / factor]);\n        }\n\n        return coordinates;\n      };\n      /**\n       * Encodes the given [latitude, longitude] coordinates array.\n       *\n       * @param {Array.<Array.<Number>>} coordinates\n       * @param {Number} precision\n       * @returns {String}\n       */\n\n\n      polyline.encode = function (coordinates, precision) {\n        if (!coordinates.length) {\n          return '';\n        }\n\n        var factor = Math.pow(10, Number.isInteger(precision) ? precision : 5),\n            output = encode(coordinates[0][0], 0, factor) + encode(coordinates[0][1], 0, factor);\n\n        for (var i = 1; i < coordinates.length; i++) {\n          var a = coordinates[i],\n              b = coordinates[i - 1];\n          output += encode(a[0], b[0], factor);\n          output += encode(a[1], b[1], factor);\n        }\n\n        return output;\n      };\n\n      function flipped(coords) {\n        var flipped = [];\n\n        for (var i = 0; i < coords.length; i++) {\n          flipped.push(coords[i].slice().reverse());\n        }\n\n        return flipped;\n      }\n      /**\n       * Encodes a GeoJSON LineString feature/geometry.\n       *\n       * @param {Object} geojson\n       * @param {Number} precision\n       * @returns {String}\n       */\n\n\n      polyline.fromGeoJSON = function (geojson, precision) {\n        if (geojson && geojson.type === 'Feature') {\n          geojson = geojson.geometry;\n        }\n\n        if (!geojson || geojson.type !== 'LineString') {\n          throw new Error('Input must be a GeoJSON LineString');\n        }\n\n        return polyline.encode(flipped(geojson.coordinates), precision);\n      };\n      /**\n       * Decodes to a GeoJSON LineString geometry.\n       *\n       * @param {String} str\n       * @param {Number} precision\n       * @returns {Object}\n       */\n\n\n      polyline.toGeoJSON = function (str, precision) {\n        var coords = polyline.decode(str, precision);\n        return {\n          type: 'LineString',\n          coordinates: flipped(coords)\n        };\n      };\n\n      if (typeof module === 'object' && module.exports) {\n        module.exports = polyline;\n      }\n    }, {}],\n    2: [function (require, module, exports) {\n      'use strict';\n\n      var isObj = require('is-obj');\n\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n      var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n      function toObject(val) {\n        if (val === null || val === undefined) {\n          throw new TypeError('Sources cannot be null or undefined');\n        }\n\n        return Object(val);\n      }\n\n      function assignKey(to, from, key) {\n        var val = from[key];\n\n        if (val === undefined || val === null) {\n          return;\n        }\n\n        if (hasOwnProperty.call(to, key)) {\n          if (to[key] === undefined || to[key] === null) {\n            throw new TypeError('Cannot convert undefined or null to object (' + key + ')');\n          }\n        }\n\n        if (!hasOwnProperty.call(to, key) || !isObj(val)) {\n          to[key] = val;\n        } else {\n          to[key] = assign(Object(to[key]), from[key]);\n        }\n      }\n\n      function assign(to, from) {\n        if (to === from) {\n          return to;\n        }\n\n        from = Object(from);\n\n        for (var key in from) {\n          if (hasOwnProperty.call(from, key)) {\n            assignKey(to, from, key);\n          }\n        }\n\n        if (Object.getOwnPropertySymbols) {\n          var symbols = Object.getOwnPropertySymbols(from);\n\n          for (var i = 0; i < symbols.length; i++) {\n            if (propIsEnumerable.call(from, symbols[i])) {\n              assignKey(to, from, symbols[i]);\n            }\n          }\n        }\n\n        return to;\n      }\n\n      module.exports = function deepAssign(target) {\n        target = toObject(target);\n\n        for (var s = 1; s < arguments.length; s++) {\n          assign(target, arguments[s]);\n        }\n\n        return target;\n      };\n    }, {\n      \"is-obj\": 5\n    }],\n    3: [function (require, module, exports) {\n      // Copyright Joyent, Inc. and other Node contributors.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a\n      // copy of this software and associated documentation files (the\n      // \"Software\"), to deal in the Software without restriction, including\n      // without limitation the rights to use, copy, modify, merge, publish,\n      // distribute, sublicense, and/or sell copies of the Software, and to permit\n      // persons to whom the Software is furnished to do so, subject to the\n      // following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included\n      // in all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n      // USE OR OTHER DEALINGS IN THE SOFTWARE.\n      function EventEmitter() {\n        this._events = this._events || {};\n        this._maxListeners = this._maxListeners || undefined;\n      }\n\n      module.exports = EventEmitter; // Backwards-compat with node 0.10.x\n\n      EventEmitter.EventEmitter = EventEmitter;\n      EventEmitter.prototype._events = undefined;\n      EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n      // added to it. This is a useful default which helps finding memory leaks.\n\n      EventEmitter.defaultMaxListeners = 10; // Obviously not all Emitters should be limited to 10. This function allows\n      // that to be increased. Set to zero for unlimited.\n\n      EventEmitter.prototype.setMaxListeners = function (n) {\n        if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');\n        this._maxListeners = n;\n        return this;\n      };\n\n      EventEmitter.prototype.emit = function (type) {\n        var er, handler, len, args, i, listeners;\n        if (!this._events) this._events = {}; // If there is no 'error' event listener then throw.\n\n        if (type === 'error') {\n          if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {\n            er = arguments[1];\n\n            if (er instanceof Error) {\n              throw er; // Unhandled 'error' event\n            } else {\n              // At least give some kind of context to the user\n              var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n              err.context = er;\n              throw err;\n            }\n          }\n        }\n\n        handler = this._events[type];\n        if (isUndefined(handler)) return false;\n\n        if (isFunction(handler)) {\n          switch (arguments.length) {\n            // fast cases\n            case 1:\n              handler.call(this);\n              break;\n\n            case 2:\n              handler.call(this, arguments[1]);\n              break;\n\n            case 3:\n              handler.call(this, arguments[1], arguments[2]);\n              break;\n            // slower\n\n            default:\n              args = Array.prototype.slice.call(arguments, 1);\n              handler.apply(this, args);\n          }\n        } else if (isObject(handler)) {\n          args = Array.prototype.slice.call(arguments, 1);\n          listeners = handler.slice();\n          len = listeners.length;\n\n          for (i = 0; i < len; i++) listeners[i].apply(this, args);\n        }\n\n        return true;\n      };\n\n      EventEmitter.prototype.addListener = function (type, listener) {\n        var m;\n        if (!isFunction(listener)) throw TypeError('listener must be a function');\n        if (!this._events) this._events = {}; // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n\n        if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);\n        if (!this._events[type]) // Optimize the case of one listener. Don't need the extra array object.\n          this._events[type] = listener;else if (isObject(this._events[type])) // If we've already got an array, just append.\n          this._events[type].push(listener);else // Adding the second element, need to change to array.\n          this._events[type] = [this._events[type], listener]; // Check for listener leak\n\n        if (isObject(this._events[type]) && !this._events[type].warned) {\n          if (!isUndefined(this._maxListeners)) {\n            m = this._maxListeners;\n          } else {\n            m = EventEmitter.defaultMaxListeners;\n          }\n\n          if (m && m > 0 && this._events[type].length > m) {\n            this._events[type].warned = true;\n            console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);\n\n            if (typeof console.trace === 'function') {\n              // not supported in IE 10\n              console.trace();\n            }\n          }\n        }\n\n        return this;\n      };\n\n      EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n      EventEmitter.prototype.once = function (type, listener) {\n        if (!isFunction(listener)) throw TypeError('listener must be a function');\n        var fired = false;\n\n        function g() {\n          this.removeListener(type, g);\n\n          if (!fired) {\n            fired = true;\n            listener.apply(this, arguments);\n          }\n        }\n\n        g.listener = listener;\n        this.on(type, g);\n        return this;\n      }; // emits a 'removeListener' event iff the listener was removed\n\n\n      EventEmitter.prototype.removeListener = function (type, listener) {\n        var list, position, length, i;\n        if (!isFunction(listener)) throw TypeError('listener must be a function');\n        if (!this._events || !this._events[type]) return this;\n        list = this._events[type];\n        length = list.length;\n        position = -1;\n\n        if (list === listener || isFunction(list.listener) && list.listener === listener) {\n          delete this._events[type];\n          if (this._events.removeListener) this.emit('removeListener', type, listener);\n        } else if (isObject(list)) {\n          for (i = length; i-- > 0;) {\n            if (list[i] === listener || list[i].listener && list[i].listener === listener) {\n              position = i;\n              break;\n            }\n          }\n\n          if (position < 0) return this;\n\n          if (list.length === 1) {\n            list.length = 0;\n            delete this._events[type];\n          } else {\n            list.splice(position, 1);\n          }\n\n          if (this._events.removeListener) this.emit('removeListener', type, listener);\n        }\n\n        return this;\n      };\n\n      EventEmitter.prototype.removeAllListeners = function (type) {\n        var key, listeners;\n        if (!this._events) return this; // not listening for removeListener, no need to emit\n\n        if (!this._events.removeListener) {\n          if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];\n          return this;\n        } // emit removeListener for all listeners on all events\n\n\n        if (arguments.length === 0) {\n          for (key in this._events) {\n            if (key === 'removeListener') continue;\n            this.removeAllListeners(key);\n          }\n\n          this.removeAllListeners('removeListener');\n          this._events = {};\n          return this;\n        }\n\n        listeners = this._events[type];\n\n        if (isFunction(listeners)) {\n          this.removeListener(type, listeners);\n        } else if (listeners) {\n          // LIFO order\n          while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);\n        }\n\n        delete this._events[type];\n        return this;\n      };\n\n      EventEmitter.prototype.listeners = function (type) {\n        var ret;\n        if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();\n        return ret;\n      };\n\n      EventEmitter.prototype.listenerCount = function (type) {\n        if (this._events) {\n          var evlistener = this._events[type];\n          if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;\n        }\n\n        return 0;\n      };\n\n      EventEmitter.listenerCount = function (emitter, type) {\n        return emitter.listenerCount(type);\n      };\n\n      function isFunction(arg) {\n        return typeof arg === 'function';\n      }\n\n      function isNumber(arg) {\n        return typeof arg === 'number';\n      }\n\n      function isObject(arg) {\n        return typeof arg === 'object' && arg !== null;\n      }\n\n      function isUndefined(arg) {\n        return arg === void 0;\n      }\n    }, {}],\n    4: [function (require, module, exports) {\n      /*\n       * Fuzzy\n       * https://github.com/myork/fuzzy\n       *\n       * Copyright (c) 2012 Matt York\n       * Licensed under the MIT license.\n       */\n      (function () {\n        var root = this;\n        var fuzzy = {}; // Use in node or in browser\n\n        if (typeof exports !== 'undefined') {\n          module.exports = fuzzy;\n        } else {\n          root.fuzzy = fuzzy;\n        } // Return all elements of `array` that have a fuzzy\n        // match against `pattern`.\n\n\n        fuzzy.simpleFilter = function (pattern, array) {\n          return array.filter(function (str) {\n            return fuzzy.test(pattern, str);\n          });\n        }; // Does `pattern` fuzzy match `str`?\n\n\n        fuzzy.test = function (pattern, str) {\n          return fuzzy.match(pattern, str) !== null;\n        }; // If `pattern` matches `str`, wrap each matching character\n        // in `opts.pre` and `opts.post`. If no match, return null\n\n\n        fuzzy.match = function (pattern, str, opts) {\n          opts = opts || {};\n          var patternIdx = 0,\n              result = [],\n              len = str.length,\n              totalScore = 0,\n              currScore = 0 // prefix\n          ,\n              pre = opts.pre || '' // suffix\n          ,\n              post = opts.post || '' // String to compare against. This might be a lowercase version of the\n          // raw string\n          ,\n              compareString = opts.caseSensitive && str || str.toLowerCase(),\n              ch;\n          pattern = opts.caseSensitive && pattern || pattern.toLowerCase(); // For each character in the string, either add it to the result\n          // or wrap in template if it's the next string in the pattern\n\n          for (var idx = 0; idx < len; idx++) {\n            ch = str[idx];\n\n            if (compareString[idx] === pattern[patternIdx]) {\n              ch = pre + ch + post;\n              patternIdx += 1; // consecutive characters should increase the score more than linearly\n\n              currScore += 1 + currScore;\n            } else {\n              currScore = 0;\n            }\n\n            totalScore += currScore;\n            result[result.length] = ch;\n          } // return rendered string if we have a match for every char\n\n\n          if (patternIdx === pattern.length) {\n            // if the string is an exact match with pattern, totalScore should be maxed\n            totalScore = compareString === pattern ? Infinity : totalScore;\n            return {\n              rendered: result.join(''),\n              score: totalScore\n            };\n          }\n\n          return null;\n        }; // The normal entry point. Filters `arr` for matches against `pattern`.\n        // It returns an array with matching values of the type:\n        //\n        //     [{\n        //         string:   '<b>lah' // The rendered string\n        //       , index:    2        // The index of the element in `arr`\n        //       , original: 'blah'   // The original element in `arr`\n        //     }]\n        //\n        // `opts` is an optional argument bag. Details:\n        //\n        //    opts = {\n        //        // string to put before a matching character\n        //        pre:     '<b>'\n        //\n        //        // string to put after matching character\n        //      , post:    '</b>'\n        //\n        //        // Optional function. Input is an entry in the given arr`,\n        //        // output should be the string to test `pattern` against.\n        //        // In this example, if `arr = [{crying: 'koala'}]` we would return\n        //        // 'koala'.\n        //      , extract: function(arg) { return arg.crying; }\n        //    }\n\n\n        fuzzy.filter = function (pattern, arr, opts) {\n          if (!arr || arr.length === 0) {\n            return [];\n          }\n\n          if (typeof pattern !== 'string') {\n            return arr;\n          }\n\n          opts = opts || {};\n          return arr.reduce(function (prev, element, idx, arr) {\n            var str = element;\n\n            if (opts.extract) {\n              str = opts.extract(element);\n            }\n\n            var rendered = fuzzy.match(pattern, str, opts);\n\n            if (rendered != null) {\n              prev[prev.length] = {\n                string: rendered.rendered,\n                score: rendered.score,\n                index: idx,\n                original: element\n              };\n            }\n\n            return prev;\n          }, []) // Sort by score. Browsers are inconsistent wrt stable/unstable\n          // sorting, so force stable by using the index in the case of tie.\n          // See http://ofb.net/~sethml/is-sort-stable.html\n          .sort(function (a, b) {\n            var compare = b.score - a.score;\n            if (compare) return compare;\n            return a.index - b.index;\n          });\n        };\n      })();\n    }, {}],\n    5: [function (require, module, exports) {\n      'use strict';\n\n      module.exports = function (x) {\n        var type = typeof x;\n        return x !== null && (type === 'object' || type === 'function');\n      };\n    }, {}],\n    6: [function (require, module, exports) {\n      /**\n       * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n       * Build: `lodash modern modularize exports=\"npm\" -o ./`\n       * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n       * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n       * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n       * Available under MIT license <https://lodash.com/license>\n       */\n\n      /** Used to match template delimiters. */\n      var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n      module.exports = reInterpolate;\n    }, {}],\n    7: [function (require, module, exports) {\n      (function (global) {\n        /**\n         * lodash (Custom Build) <https://lodash.com/>\n         * Build: `lodash modularize exports=\"npm\" -o ./`\n         * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n         * Released under MIT license <https://lodash.com/license>\n         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n         */\n\n        /** Used as the `TypeError` message for \"Functions\" methods. */\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        /** Used as references for various `Number` constants. */\n\n        var NAN = 0 / 0;\n        /** `Object#toString` result references. */\n\n        var symbolTag = '[object Symbol]';\n        /** Used to match leading and trailing whitespace. */\n\n        var reTrim = /^\\s+|\\s+$/g;\n        /** Used to detect bad signed hexadecimal string values. */\n\n        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n        /** Used to detect binary string values. */\n\n        var reIsBinary = /^0b[01]+$/i;\n        /** Used to detect octal string values. */\n\n        var reIsOctal = /^0o[0-7]+$/i;\n        /** Built-in method references without a dependency on `root`. */\n\n        var freeParseInt = parseInt;\n        /** Detect free variable `global` from Node.js. */\n\n        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n        /** Detect free variable `self`. */\n\n        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n        /** Used as a reference to the global object. */\n\n        var root = freeGlobal || freeSelf || Function('return this')();\n        /** Used for built-in method references. */\n\n        var objectProto = Object.prototype;\n        /**\n         * Used to resolve the\n         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n         * of values.\n         */\n\n        var objectToString = objectProto.toString;\n        /* Built-in method references for those with the same name as other `lodash` methods. */\n\n        var nativeMax = Math.max,\n            nativeMin = Math.min;\n        /**\n         * Gets the timestamp of the number of milliseconds that have elapsed since\n         * the Unix epoch (1 January 1970 00:00:00 UTC).\n         *\n         * @static\n         * @memberOf _\n         * @since 2.4.0\n         * @category Date\n         * @returns {number} Returns the timestamp.\n         * @example\n         *\n         * _.defer(function(stamp) {\n         *   console.log(_.now() - stamp);\n         * }, _.now());\n         * // => Logs the number of milliseconds it took for the deferred invocation.\n         */\n\n        var now = function () {\n          return root.Date.now();\n        };\n        /**\n         * Creates a debounced function that delays invoking `func` until after `wait`\n         * milliseconds have elapsed since the last time the debounced function was\n         * invoked. The debounced function comes with a `cancel` method to cancel\n         * delayed `func` invocations and a `flush` method to immediately invoke them.\n         * Provide `options` to indicate whether `func` should be invoked on the\n         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n         * with the last arguments provided to the debounced function. Subsequent\n         * calls to the debounced function return the result of the last `func`\n         * invocation.\n         *\n         * **Note:** If `leading` and `trailing` options are `true`, `func` is\n         * invoked on the trailing edge of the timeout only if the debounced function\n         * is invoked more than once during the `wait` timeout.\n         *\n         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n         * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n         *\n         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n         * for details over the differences between `_.debounce` and `_.throttle`.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Function\n         * @param {Function} func The function to debounce.\n         * @param {number} [wait=0] The number of milliseconds to delay.\n         * @param {Object} [options={}] The options object.\n         * @param {boolean} [options.leading=false]\n         *  Specify invoking on the leading edge of the timeout.\n         * @param {number} [options.maxWait]\n         *  The maximum time `func` is allowed to be delayed before it's invoked.\n         * @param {boolean} [options.trailing=true]\n         *  Specify invoking on the trailing edge of the timeout.\n         * @returns {Function} Returns the new debounced function.\n         * @example\n         *\n         * // Avoid costly calculations while the window size is in flux.\n         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n         *\n         * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n         * jQuery(element).on('click', _.debounce(sendMail, 300, {\n         *   'leading': true,\n         *   'trailing': false\n         * }));\n         *\n         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n         * var source = new EventSource('/stream');\n         * jQuery(source).on('message', debounced);\n         *\n         * // Cancel the trailing debounced invocation.\n         * jQuery(window).on('popstate', debounced.cancel);\n         */\n\n\n        function debounce(func, wait, options) {\n          var lastArgs,\n              lastThis,\n              maxWait,\n              result,\n              timerId,\n              lastCallTime,\n              lastInvokeTime = 0,\n              leading = false,\n              maxing = false,\n              trailing = true;\n\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n\n          wait = toNumber(wait) || 0;\n\n          if (isObject(options)) {\n            leading = !!options.leading;\n            maxing = 'maxWait' in options;\n            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n            trailing = 'trailing' in options ? !!options.trailing : trailing;\n          }\n\n          function invokeFunc(time) {\n            var args = lastArgs,\n                thisArg = lastThis;\n            lastArgs = lastThis = undefined;\n            lastInvokeTime = time;\n            result = func.apply(thisArg, args);\n            return result;\n          }\n\n          function leadingEdge(time) {\n            // Reset any `maxWait` timer.\n            lastInvokeTime = time; // Start the timer for the trailing edge.\n\n            timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n            return leading ? invokeFunc(time) : result;\n          }\n\n          function remainingWait(time) {\n            var timeSinceLastCall = time - lastCallTime,\n                timeSinceLastInvoke = time - lastInvokeTime,\n                result = wait - timeSinceLastCall;\n            return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n          }\n\n          function shouldInvoke(time) {\n            var timeSinceLastCall = time - lastCallTime,\n                timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n            // trailing edge, the system time has gone backwards and we're treating\n            // it as the trailing edge, or we've hit the `maxWait` limit.\n\n            return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n          }\n\n          function timerExpired() {\n            var time = now();\n\n            if (shouldInvoke(time)) {\n              return trailingEdge(time);\n            } // Restart the timer.\n\n\n            timerId = setTimeout(timerExpired, remainingWait(time));\n          }\n\n          function trailingEdge(time) {\n            timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n            // debounced at least once.\n\n            if (trailing && lastArgs) {\n              return invokeFunc(time);\n            }\n\n            lastArgs = lastThis = undefined;\n            return result;\n          }\n\n          function cancel() {\n            if (timerId !== undefined) {\n              clearTimeout(timerId);\n            }\n\n            lastInvokeTime = 0;\n            lastArgs = lastCallTime = lastThis = timerId = undefined;\n          }\n\n          function flush() {\n            return timerId === undefined ? result : trailingEdge(now());\n          }\n\n          function debounced() {\n            var time = now(),\n                isInvoking = shouldInvoke(time);\n            lastArgs = arguments;\n            lastThis = this;\n            lastCallTime = time;\n\n            if (isInvoking) {\n              if (timerId === undefined) {\n                return leadingEdge(lastCallTime);\n              }\n\n              if (maxing) {\n                // Handle invocations in a tight loop.\n                timerId = setTimeout(timerExpired, wait);\n                return invokeFunc(lastCallTime);\n              }\n            }\n\n            if (timerId === undefined) {\n              timerId = setTimeout(timerExpired, wait);\n            }\n\n            return result;\n          }\n\n          debounced.cancel = cancel;\n          debounced.flush = flush;\n          return debounced;\n        }\n        /**\n         * Checks if `value` is the\n         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n         * @example\n         *\n         * _.isObject({});\n         * // => true\n         *\n         * _.isObject([1, 2, 3]);\n         * // => true\n         *\n         * _.isObject(_.noop);\n         * // => true\n         *\n         * _.isObject(null);\n         * // => false\n         */\n\n\n        function isObject(value) {\n          var type = typeof value;\n          return !!value && (type == 'object' || type == 'function');\n        }\n        /**\n         * Checks if `value` is object-like. A value is object-like if it's not `null`\n         * and has a `typeof` result of \"object\".\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n         * @example\n         *\n         * _.isObjectLike({});\n         * // => true\n         *\n         * _.isObjectLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isObjectLike(_.noop);\n         * // => false\n         *\n         * _.isObjectLike(null);\n         * // => false\n         */\n\n\n        function isObjectLike(value) {\n          return !!value && typeof value == 'object';\n        }\n        /**\n         * Checks if `value` is classified as a `Symbol` primitive or object.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n         * @example\n         *\n         * _.isSymbol(Symbol.iterator);\n         * // => true\n         *\n         * _.isSymbol('abc');\n         * // => false\n         */\n\n\n        function isSymbol(value) {\n          return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n        }\n        /**\n         * Converts `value` to a number.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to process.\n         * @returns {number} Returns the number.\n         * @example\n         *\n         * _.toNumber(3.2);\n         * // => 3.2\n         *\n         * _.toNumber(Number.MIN_VALUE);\n         * // => 5e-324\n         *\n         * _.toNumber(Infinity);\n         * // => Infinity\n         *\n         * _.toNumber('3.2');\n         * // => 3.2\n         */\n\n\n        function toNumber(value) {\n          if (typeof value == 'number') {\n            return value;\n          }\n\n          if (isSymbol(value)) {\n            return NAN;\n          }\n\n          if (isObject(value)) {\n            var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n            value = isObject(other) ? other + '' : other;\n          }\n\n          if (typeof value != 'string') {\n            return value === 0 ? value : +value;\n          }\n\n          value = value.replace(reTrim, '');\n          var isBinary = reIsBinary.test(value);\n          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n        }\n\n        module.exports = debounce;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    8: [function (require, module, exports) {\n      (function (global) {\n        /**\n         * Lodash (Custom Build) <https://lodash.com/>\n         * Build: `lodash modularize exports=\"npm\" -o ./`\n         * Copyright JS Foundation and other contributors <https://js.foundation/>\n         * Released under MIT license <https://lodash.com/license>\n         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n         */\n\n        /** Used as the size to enable large array optimizations. */\n        var LARGE_ARRAY_SIZE = 200;\n        /** Used to stand-in for `undefined` hash values. */\n\n        var HASH_UNDEFINED = '__lodash_hash_undefined__';\n        /** Used to compose bitmasks for value comparisons. */\n\n        var COMPARE_PARTIAL_FLAG = 1,\n            COMPARE_UNORDERED_FLAG = 2;\n        /** Used as references for various `Number` constants. */\n\n        var MAX_SAFE_INTEGER = 9007199254740991;\n        /** `Object#toString` result references. */\n\n        var argsTag = '[object Arguments]',\n            arrayTag = '[object Array]',\n            asyncTag = '[object AsyncFunction]',\n            boolTag = '[object Boolean]',\n            dateTag = '[object Date]',\n            errorTag = '[object Error]',\n            funcTag = '[object Function]',\n            genTag = '[object GeneratorFunction]',\n            mapTag = '[object Map]',\n            numberTag = '[object Number]',\n            nullTag = '[object Null]',\n            objectTag = '[object Object]',\n            promiseTag = '[object Promise]',\n            proxyTag = '[object Proxy]',\n            regexpTag = '[object RegExp]',\n            setTag = '[object Set]',\n            stringTag = '[object String]',\n            symbolTag = '[object Symbol]',\n            undefinedTag = '[object Undefined]',\n            weakMapTag = '[object WeakMap]';\n        var arrayBufferTag = '[object ArrayBuffer]',\n            dataViewTag = '[object DataView]',\n            float32Tag = '[object Float32Array]',\n            float64Tag = '[object Float64Array]',\n            int8Tag = '[object Int8Array]',\n            int16Tag = '[object Int16Array]',\n            int32Tag = '[object Int32Array]',\n            uint8Tag = '[object Uint8Array]',\n            uint8ClampedTag = '[object Uint8ClampedArray]',\n            uint16Tag = '[object Uint16Array]',\n            uint32Tag = '[object Uint32Array]';\n        /**\n         * Used to match `RegExp`\n         * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n         */\n\n        var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n        /** Used to detect host constructors (Safari). */\n\n        var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n        /** Used to detect unsigned integer values. */\n\n        var reIsUint = /^(?:0|[1-9]\\d*)$/;\n        /** Used to identify `toStringTag` values of typed arrays. */\n\n        var typedArrayTags = {};\n        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n        /** Detect free variable `global` from Node.js. */\n\n        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n        /** Detect free variable `self`. */\n\n        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n        /** Used as a reference to the global object. */\n\n        var root = freeGlobal || freeSelf || Function('return this')();\n        /** Detect free variable `exports`. */\n\n        var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n        /** Detect free variable `module`. */\n\n        var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n        /** Detect the popular CommonJS extension `module.exports`. */\n\n        var moduleExports = freeModule && freeModule.exports === freeExports;\n        /** Detect free variable `process` from Node.js. */\n\n        var freeProcess = moduleExports && freeGlobal.process;\n        /** Used to access faster Node.js helpers. */\n\n        var nodeUtil = function () {\n          try {\n            return freeProcess && freeProcess.binding && freeProcess.binding('util');\n          } catch (e) {}\n        }();\n        /* Node.js helper references. */\n\n\n        var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n        /**\n         * A specialized version of `_.filter` for arrays without support for\n         * iteratee shorthands.\n         *\n         * @private\n         * @param {Array} [array] The array to iterate over.\n         * @param {Function} predicate The function invoked per iteration.\n         * @returns {Array} Returns the new filtered array.\n         */\n\n        function arrayFilter(array, predicate) {\n          var index = -1,\n              length = array == null ? 0 : array.length,\n              resIndex = 0,\n              result = [];\n\n          while (++index < length) {\n            var value = array[index];\n\n            if (predicate(value, index, array)) {\n              result[resIndex++] = value;\n            }\n          }\n\n          return result;\n        }\n        /**\n         * Appends the elements of `values` to `array`.\n         *\n         * @private\n         * @param {Array} array The array to modify.\n         * @param {Array} values The values to append.\n         * @returns {Array} Returns `array`.\n         */\n\n\n        function arrayPush(array, values) {\n          var index = -1,\n              length = values.length,\n              offset = array.length;\n\n          while (++index < length) {\n            array[offset + index] = values[index];\n          }\n\n          return array;\n        }\n        /**\n         * A specialized version of `_.some` for arrays without support for iteratee\n         * shorthands.\n         *\n         * @private\n         * @param {Array} [array] The array to iterate over.\n         * @param {Function} predicate The function invoked per iteration.\n         * @returns {boolean} Returns `true` if any element passes the predicate check,\n         *  else `false`.\n         */\n\n\n        function arraySome(array, predicate) {\n          var index = -1,\n              length = array == null ? 0 : array.length;\n\n          while (++index < length) {\n            if (predicate(array[index], index, array)) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n        /**\n         * The base implementation of `_.times` without support for iteratee shorthands\n         * or max array length checks.\n         *\n         * @private\n         * @param {number} n The number of times to invoke `iteratee`.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @returns {Array} Returns the array of results.\n         */\n\n\n        function baseTimes(n, iteratee) {\n          var index = -1,\n              result = Array(n);\n\n          while (++index < n) {\n            result[index] = iteratee(index);\n          }\n\n          return result;\n        }\n        /**\n         * The base implementation of `_.unary` without support for storing metadata.\n         *\n         * @private\n         * @param {Function} func The function to cap arguments for.\n         * @returns {Function} Returns the new capped function.\n         */\n\n\n        function baseUnary(func) {\n          return function (value) {\n            return func(value);\n          };\n        }\n        /**\n         * Checks if a `cache` value for `key` exists.\n         *\n         * @private\n         * @param {Object} cache The cache to query.\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function cacheHas(cache, key) {\n          return cache.has(key);\n        }\n        /**\n         * Gets the value at `key` of `object`.\n         *\n         * @private\n         * @param {Object} [object] The object to query.\n         * @param {string} key The key of the property to get.\n         * @returns {*} Returns the property value.\n         */\n\n\n        function getValue(object, key) {\n          return object == null ? undefined : object[key];\n        }\n        /**\n         * Converts `map` to its key-value pairs.\n         *\n         * @private\n         * @param {Object} map The map to convert.\n         * @returns {Array} Returns the key-value pairs.\n         */\n\n\n        function mapToArray(map) {\n          var index = -1,\n              result = Array(map.size);\n          map.forEach(function (value, key) {\n            result[++index] = [key, value];\n          });\n          return result;\n        }\n        /**\n         * Creates a unary function that invokes `func` with its argument transformed.\n         *\n         * @private\n         * @param {Function} func The function to wrap.\n         * @param {Function} transform The argument transform.\n         * @returns {Function} Returns the new function.\n         */\n\n\n        function overArg(func, transform) {\n          return function (arg) {\n            return func(transform(arg));\n          };\n        }\n        /**\n         * Converts `set` to an array of its values.\n         *\n         * @private\n         * @param {Object} set The set to convert.\n         * @returns {Array} Returns the values.\n         */\n\n\n        function setToArray(set) {\n          var index = -1,\n              result = Array(set.size);\n          set.forEach(function (value) {\n            result[++index] = value;\n          });\n          return result;\n        }\n        /** Used for built-in method references. */\n\n\n        var arrayProto = Array.prototype,\n            funcProto = Function.prototype,\n            objectProto = Object.prototype;\n        /** Used to detect overreaching core-js shims. */\n\n        var coreJsData = root['__core-js_shared__'];\n        /** Used to resolve the decompiled source of functions. */\n\n        var funcToString = funcProto.toString;\n        /** Used to check objects for own properties. */\n\n        var hasOwnProperty = objectProto.hasOwnProperty;\n        /** Used to detect methods masquerading as native. */\n\n        var maskSrcKey = function () {\n          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n          return uid ? 'Symbol(src)_1.' + uid : '';\n        }();\n        /**\n         * Used to resolve the\n         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n         * of values.\n         */\n\n\n        var nativeObjectToString = objectProto.toString;\n        /** Used to detect if a method is native. */\n\n        var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n        /** Built-in value references. */\n\n        var Buffer = moduleExports ? root.Buffer : undefined,\n            Symbol = root.Symbol,\n            Uint8Array = root.Uint8Array,\n            propertyIsEnumerable = objectProto.propertyIsEnumerable,\n            splice = arrayProto.splice,\n            symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n        /* Built-in method references for those with the same name as other `lodash` methods. */\n\n        var nativeGetSymbols = Object.getOwnPropertySymbols,\n            nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n            nativeKeys = overArg(Object.keys, Object);\n        /* Built-in method references that are verified to be native. */\n\n        var DataView = getNative(root, 'DataView'),\n            Map = getNative(root, 'Map'),\n            Promise = getNative(root, 'Promise'),\n            Set = getNative(root, 'Set'),\n            WeakMap = getNative(root, 'WeakMap'),\n            nativeCreate = getNative(Object, 'create');\n        /** Used to detect maps, sets, and weakmaps. */\n\n        var dataViewCtorString = toSource(DataView),\n            mapCtorString = toSource(Map),\n            promiseCtorString = toSource(Promise),\n            setCtorString = toSource(Set),\n            weakMapCtorString = toSource(WeakMap);\n        /** Used to convert symbols to primitives and strings. */\n\n        var symbolProto = Symbol ? Symbol.prototype : undefined,\n            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n        /**\n         * Creates a hash object.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function Hash(entries) {\n          var index = -1,\n              length = entries == null ? 0 : entries.length;\n          this.clear();\n\n          while (++index < length) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        /**\n         * Removes all key-value entries from the hash.\n         *\n         * @private\n         * @name clear\n         * @memberOf Hash\n         */\n\n\n        function hashClear() {\n          this.__data__ = nativeCreate ? nativeCreate(null) : {};\n          this.size = 0;\n        }\n        /**\n         * Removes `key` and its value from the hash.\n         *\n         * @private\n         * @name delete\n         * @memberOf Hash\n         * @param {Object} hash The hash to modify.\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function hashDelete(key) {\n          var result = this.has(key) && delete this.__data__[key];\n          this.size -= result ? 1 : 0;\n          return result;\n        }\n        /**\n         * Gets the hash value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf Hash\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function hashGet(key) {\n          var data = this.__data__;\n\n          if (nativeCreate) {\n            var result = data[key];\n            return result === HASH_UNDEFINED ? undefined : result;\n          }\n\n          return hasOwnProperty.call(data, key) ? data[key] : undefined;\n        }\n        /**\n         * Checks if a hash value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf Hash\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function hashHas(key) {\n          var data = this.__data__;\n          return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n        }\n        /**\n         * Sets the hash `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf Hash\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the hash instance.\n         */\n\n\n        function hashSet(key, value) {\n          var data = this.__data__;\n          this.size += this.has(key) ? 0 : 1;\n          data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n          return this;\n        } // Add methods to `Hash`.\n\n\n        Hash.prototype.clear = hashClear;\n        Hash.prototype['delete'] = hashDelete;\n        Hash.prototype.get = hashGet;\n        Hash.prototype.has = hashHas;\n        Hash.prototype.set = hashSet;\n        /**\n         * Creates an list cache object.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function ListCache(entries) {\n          var index = -1,\n              length = entries == null ? 0 : entries.length;\n          this.clear();\n\n          while (++index < length) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        /**\n         * Removes all key-value entries from the list cache.\n         *\n         * @private\n         * @name clear\n         * @memberOf ListCache\n         */\n\n\n        function listCacheClear() {\n          this.__data__ = [];\n          this.size = 0;\n        }\n        /**\n         * Removes `key` and its value from the list cache.\n         *\n         * @private\n         * @name delete\n         * @memberOf ListCache\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function listCacheDelete(key) {\n          var data = this.__data__,\n              index = assocIndexOf(data, key);\n\n          if (index < 0) {\n            return false;\n          }\n\n          var lastIndex = data.length - 1;\n\n          if (index == lastIndex) {\n            data.pop();\n          } else {\n            splice.call(data, index, 1);\n          }\n\n          --this.size;\n          return true;\n        }\n        /**\n         * Gets the list cache value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf ListCache\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function listCacheGet(key) {\n          var data = this.__data__,\n              index = assocIndexOf(data, key);\n          return index < 0 ? undefined : data[index][1];\n        }\n        /**\n         * Checks if a list cache value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf ListCache\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function listCacheHas(key) {\n          return assocIndexOf(this.__data__, key) > -1;\n        }\n        /**\n         * Sets the list cache `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf ListCache\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the list cache instance.\n         */\n\n\n        function listCacheSet(key, value) {\n          var data = this.__data__,\n              index = assocIndexOf(data, key);\n\n          if (index < 0) {\n            ++this.size;\n            data.push([key, value]);\n          } else {\n            data[index][1] = value;\n          }\n\n          return this;\n        } // Add methods to `ListCache`.\n\n\n        ListCache.prototype.clear = listCacheClear;\n        ListCache.prototype['delete'] = listCacheDelete;\n        ListCache.prototype.get = listCacheGet;\n        ListCache.prototype.has = listCacheHas;\n        ListCache.prototype.set = listCacheSet;\n        /**\n         * Creates a map cache object to store key-value pairs.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function MapCache(entries) {\n          var index = -1,\n              length = entries == null ? 0 : entries.length;\n          this.clear();\n\n          while (++index < length) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        /**\n         * Removes all key-value entries from the map.\n         *\n         * @private\n         * @name clear\n         * @memberOf MapCache\n         */\n\n\n        function mapCacheClear() {\n          this.size = 0;\n          this.__data__ = {\n            'hash': new Hash(),\n            'map': new (Map || ListCache)(),\n            'string': new Hash()\n          };\n        }\n        /**\n         * Removes `key` and its value from the map.\n         *\n         * @private\n         * @name delete\n         * @memberOf MapCache\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function mapCacheDelete(key) {\n          var result = getMapData(this, key)['delete'](key);\n          this.size -= result ? 1 : 0;\n          return result;\n        }\n        /**\n         * Gets the map value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf MapCache\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function mapCacheGet(key) {\n          return getMapData(this, key).get(key);\n        }\n        /**\n         * Checks if a map value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf MapCache\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function mapCacheHas(key) {\n          return getMapData(this, key).has(key);\n        }\n        /**\n         * Sets the map `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf MapCache\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the map cache instance.\n         */\n\n\n        function mapCacheSet(key, value) {\n          var data = getMapData(this, key),\n              size = data.size;\n          data.set(key, value);\n          this.size += data.size == size ? 0 : 1;\n          return this;\n        } // Add methods to `MapCache`.\n\n\n        MapCache.prototype.clear = mapCacheClear;\n        MapCache.prototype['delete'] = mapCacheDelete;\n        MapCache.prototype.get = mapCacheGet;\n        MapCache.prototype.has = mapCacheHas;\n        MapCache.prototype.set = mapCacheSet;\n        /**\n         *\n         * Creates an array cache object to store unique values.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [values] The values to cache.\n         */\n\n        function SetCache(values) {\n          var index = -1,\n              length = values == null ? 0 : values.length;\n          this.__data__ = new MapCache();\n\n          while (++index < length) {\n            this.add(values[index]);\n          }\n        }\n        /**\n         * Adds `value` to the array cache.\n         *\n         * @private\n         * @name add\n         * @memberOf SetCache\n         * @alias push\n         * @param {*} value The value to cache.\n         * @returns {Object} Returns the cache instance.\n         */\n\n\n        function setCacheAdd(value) {\n          this.__data__.set(value, HASH_UNDEFINED);\n\n          return this;\n        }\n        /**\n         * Checks if `value` is in the array cache.\n         *\n         * @private\n         * @name has\n         * @memberOf SetCache\n         * @param {*} value The value to search for.\n         * @returns {number} Returns `true` if `value` is found, else `false`.\n         */\n\n\n        function setCacheHas(value) {\n          return this.__data__.has(value);\n        } // Add methods to `SetCache`.\n\n\n        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n        SetCache.prototype.has = setCacheHas;\n        /**\n         * Creates a stack cache object to store key-value pairs.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function Stack(entries) {\n          var data = this.__data__ = new ListCache(entries);\n          this.size = data.size;\n        }\n        /**\n         * Removes all key-value entries from the stack.\n         *\n         * @private\n         * @name clear\n         * @memberOf Stack\n         */\n\n\n        function stackClear() {\n          this.__data__ = new ListCache();\n          this.size = 0;\n        }\n        /**\n         * Removes `key` and its value from the stack.\n         *\n         * @private\n         * @name delete\n         * @memberOf Stack\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function stackDelete(key) {\n          var data = this.__data__,\n              result = data['delete'](key);\n          this.size = data.size;\n          return result;\n        }\n        /**\n         * Gets the stack value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf Stack\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function stackGet(key) {\n          return this.__data__.get(key);\n        }\n        /**\n         * Checks if a stack value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf Stack\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function stackHas(key) {\n          return this.__data__.has(key);\n        }\n        /**\n         * Sets the stack `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf Stack\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the stack cache instance.\n         */\n\n\n        function stackSet(key, value) {\n          var data = this.__data__;\n\n          if (data instanceof ListCache) {\n            var pairs = data.__data__;\n\n            if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n              pairs.push([key, value]);\n              this.size = ++data.size;\n              return this;\n            }\n\n            data = this.__data__ = new MapCache(pairs);\n          }\n\n          data.set(key, value);\n          this.size = data.size;\n          return this;\n        } // Add methods to `Stack`.\n\n\n        Stack.prototype.clear = stackClear;\n        Stack.prototype['delete'] = stackDelete;\n        Stack.prototype.get = stackGet;\n        Stack.prototype.has = stackHas;\n        Stack.prototype.set = stackSet;\n        /**\n         * Creates an array of the enumerable property names of the array-like `value`.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @param {boolean} inherited Specify returning inherited property names.\n         * @returns {Array} Returns the array of property names.\n         */\n\n        function arrayLikeKeys(value, inherited) {\n          var isArr = isArray(value),\n              isArg = !isArr && isArguments(value),\n              isBuff = !isArr && !isArg && isBuffer(value),\n              isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n              skipIndexes = isArr || isArg || isBuff || isType,\n              result = skipIndexes ? baseTimes(value.length, String) : [],\n              length = result.length;\n\n          for (var key in value) {\n            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n            key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n            isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n            isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n            isIndex(key, length)))) {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * Gets the index at which the `key` is found in `array` of key-value pairs.\n         *\n         * @private\n         * @param {Array} array The array to inspect.\n         * @param {*} key The key to search for.\n         * @returns {number} Returns the index of the matched value, else `-1`.\n         */\n\n\n        function assocIndexOf(array, key) {\n          var length = array.length;\n\n          while (length--) {\n            if (eq(array[length][0], key)) {\n              return length;\n            }\n          }\n\n          return -1;\n        }\n        /**\n         * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n         * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n         * symbols of `object`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @param {Function} keysFunc The function to get the keys of `object`.\n         * @param {Function} symbolsFunc The function to get the symbols of `object`.\n         * @returns {Array} Returns the array of property names and symbols.\n         */\n\n\n        function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n          var result = keysFunc(object);\n          return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n        }\n        /**\n         * The base implementation of `getTag` without fallbacks for buggy environments.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @returns {string} Returns the `toStringTag`.\n         */\n\n\n        function baseGetTag(value) {\n          if (value == null) {\n            return value === undefined ? undefinedTag : nullTag;\n          }\n\n          return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n        }\n        /**\n         * The base implementation of `_.isArguments`.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n         */\n\n\n        function baseIsArguments(value) {\n          return isObjectLike(value) && baseGetTag(value) == argsTag;\n        }\n        /**\n         * The base implementation of `_.isEqual` which supports partial comparisons\n         * and tracks traversed objects.\n         *\n         * @private\n         * @param {*} value The value to compare.\n         * @param {*} other The other value to compare.\n         * @param {boolean} bitmask The bitmask flags.\n         *  1 - Unordered comparison\n         *  2 - Partial comparison\n         * @param {Function} [customizer] The function to customize comparisons.\n         * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n         */\n\n\n        function baseIsEqual(value, other, bitmask, customizer, stack) {\n          if (value === other) {\n            return true;\n          }\n\n          if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n            return value !== value && other !== other;\n          }\n\n          return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n        }\n        /**\n         * A specialized version of `baseIsEqual` for arrays and objects which performs\n         * deep comparisons and tracks traversed objects enabling objects with circular\n         * references to be compared.\n         *\n         * @private\n         * @param {Object} object The object to compare.\n         * @param {Object} other The other object to compare.\n         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n         * @param {Function} customizer The function to customize comparisons.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n         */\n\n\n        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n          var objIsArr = isArray(object),\n              othIsArr = isArray(other),\n              objTag = objIsArr ? arrayTag : getTag(object),\n              othTag = othIsArr ? arrayTag : getTag(other);\n          objTag = objTag == argsTag ? objectTag : objTag;\n          othTag = othTag == argsTag ? objectTag : othTag;\n          var objIsObj = objTag == objectTag,\n              othIsObj = othTag == objectTag,\n              isSameTag = objTag == othTag;\n\n          if (isSameTag && isBuffer(object)) {\n            if (!isBuffer(other)) {\n              return false;\n            }\n\n            objIsArr = true;\n            objIsObj = false;\n          }\n\n          if (isSameTag && !objIsObj) {\n            stack || (stack = new Stack());\n            return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n          }\n\n          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n            var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n                othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n            if (objIsWrapped || othIsWrapped) {\n              var objUnwrapped = objIsWrapped ? object.value() : object,\n                  othUnwrapped = othIsWrapped ? other.value() : other;\n              stack || (stack = new Stack());\n              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n            }\n          }\n\n          if (!isSameTag) {\n            return false;\n          }\n\n          stack || (stack = new Stack());\n          return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n        }\n        /**\n         * The base implementation of `_.isNative` without bad shim checks.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a native function,\n         *  else `false`.\n         */\n\n\n        function baseIsNative(value) {\n          if (!isObject(value) || isMasked(value)) {\n            return false;\n          }\n\n          var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n          return pattern.test(toSource(value));\n        }\n        /**\n         * The base implementation of `_.isTypedArray` without Node.js optimizations.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n         */\n\n\n        function baseIsTypedArray(value) {\n          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n        }\n        /**\n         * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         */\n\n\n        function baseKeys(object) {\n          if (!isPrototype(object)) {\n            return nativeKeys(object);\n          }\n\n          var result = [];\n\n          for (var key in Object(object)) {\n            if (hasOwnProperty.call(object, key) && key != 'constructor') {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * A specialized version of `baseIsEqualDeep` for arrays with support for\n         * partial deep comparisons.\n         *\n         * @private\n         * @param {Array} array The array to compare.\n         * @param {Array} other The other array to compare.\n         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n         * @param {Function} customizer The function to customize comparisons.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Object} stack Tracks traversed `array` and `other` objects.\n         * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n         */\n\n\n        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n              arrLength = array.length,\n              othLength = other.length;\n\n          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n            return false;\n          } // Assume cyclic values are equal.\n\n\n          var stacked = stack.get(array);\n\n          if (stacked && stack.get(other)) {\n            return stacked == other;\n          }\n\n          var index = -1,\n              result = true,\n              seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n          stack.set(array, other);\n          stack.set(other, array); // Ignore non-index properties.\n\n          while (++index < arrLength) {\n            var arrValue = array[index],\n                othValue = other[index];\n\n            if (customizer) {\n              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n            }\n\n            if (compared !== undefined) {\n              if (compared) {\n                continue;\n              }\n\n              result = false;\n              break;\n            } // Recursively compare arrays (susceptible to call stack limits).\n\n\n            if (seen) {\n              if (!arraySome(other, function (othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n                result = false;\n                break;\n              }\n            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              result = false;\n              break;\n            }\n          }\n\n          stack['delete'](array);\n          stack['delete'](other);\n          return result;\n        }\n        /**\n         * A specialized version of `baseIsEqualDeep` for comparing objects of\n         * the same `toStringTag`.\n         *\n         * **Note:** This function only supports comparing values with tags of\n         * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n         *\n         * @private\n         * @param {Object} object The object to compare.\n         * @param {Object} other The other object to compare.\n         * @param {string} tag The `toStringTag` of the objects to compare.\n         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n         * @param {Function} customizer The function to customize comparisons.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Object} stack Tracks traversed `object` and `other` objects.\n         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n         */\n\n\n        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n          switch (tag) {\n            case dataViewTag:\n              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n                return false;\n              }\n\n              object = object.buffer;\n              other = other.buffer;\n\n            case arrayBufferTag:\n              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n                return false;\n              }\n\n              return true;\n\n            case boolTag:\n            case dateTag:\n            case numberTag:\n              // Coerce booleans to `1` or `0` and dates to milliseconds.\n              // Invalid dates are coerced to `NaN`.\n              return eq(+object, +other);\n\n            case errorTag:\n              return object.name == other.name && object.message == other.message;\n\n            case regexpTag:\n            case stringTag:\n              // Coerce regexes to strings and treat strings, primitives and objects,\n              // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n              // for more details.\n              return object == other + '';\n\n            case mapTag:\n              var convert = mapToArray;\n\n            case setTag:\n              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n              convert || (convert = setToArray);\n\n              if (object.size != other.size && !isPartial) {\n                return false;\n              } // Assume cyclic values are equal.\n\n\n              var stacked = stack.get(object);\n\n              if (stacked) {\n                return stacked == other;\n              }\n\n              bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n              stack.set(object, other);\n              var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n              stack['delete'](object);\n              return result;\n\n            case symbolTag:\n              if (symbolValueOf) {\n                return symbolValueOf.call(object) == symbolValueOf.call(other);\n              }\n\n          }\n\n          return false;\n        }\n        /**\n         * A specialized version of `baseIsEqualDeep` for objects with support for\n         * partial deep comparisons.\n         *\n         * @private\n         * @param {Object} object The object to compare.\n         * @param {Object} other The other object to compare.\n         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n         * @param {Function} customizer The function to customize comparisons.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Object} stack Tracks traversed `object` and `other` objects.\n         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n         */\n\n\n        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n              objProps = getAllKeys(object),\n              objLength = objProps.length,\n              othProps = getAllKeys(other),\n              othLength = othProps.length;\n\n          if (objLength != othLength && !isPartial) {\n            return false;\n          }\n\n          var index = objLength;\n\n          while (index--) {\n            var key = objProps[index];\n\n            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n              return false;\n            }\n          } // Assume cyclic values are equal.\n\n\n          var stacked = stack.get(object);\n\n          if (stacked && stack.get(other)) {\n            return stacked == other;\n          }\n\n          var result = true;\n          stack.set(object, other);\n          stack.set(other, object);\n          var skipCtor = isPartial;\n\n          while (++index < objLength) {\n            key = objProps[index];\n            var objValue = object[key],\n                othValue = other[key];\n\n            if (customizer) {\n              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n            } // Recursively compare objects (susceptible to call stack limits).\n\n\n            if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n              result = false;\n              break;\n            }\n\n            skipCtor || (skipCtor = key == 'constructor');\n          }\n\n          if (result && !skipCtor) {\n            var objCtor = object.constructor,\n                othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n            if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n              result = false;\n            }\n          }\n\n          stack['delete'](object);\n          stack['delete'](other);\n          return result;\n        }\n        /**\n         * Creates an array of own enumerable property names and symbols of `object`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names and symbols.\n         */\n\n\n        function getAllKeys(object) {\n          return baseGetAllKeys(object, keys, getSymbols);\n        }\n        /**\n         * Gets the data for `map`.\n         *\n         * @private\n         * @param {Object} map The map to query.\n         * @param {string} key The reference key.\n         * @returns {*} Returns the map data.\n         */\n\n\n        function getMapData(map, key) {\n          var data = map.__data__;\n          return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n        }\n        /**\n         * Gets the native function at `key` of `object`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @param {string} key The key of the method to get.\n         * @returns {*} Returns the function if it's native, else `undefined`.\n         */\n\n\n        function getNative(object, key) {\n          var value = getValue(object, key);\n          return baseIsNative(value) ? value : undefined;\n        }\n        /**\n         * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @returns {string} Returns the raw `toStringTag`.\n         */\n\n\n        function getRawTag(value) {\n          var isOwn = hasOwnProperty.call(value, symToStringTag),\n              tag = value[symToStringTag];\n\n          try {\n            value[symToStringTag] = undefined;\n            var unmasked = true;\n          } catch (e) {}\n\n          var result = nativeObjectToString.call(value);\n\n          if (unmasked) {\n            if (isOwn) {\n              value[symToStringTag] = tag;\n            } else {\n              delete value[symToStringTag];\n            }\n          }\n\n          return result;\n        }\n        /**\n         * Creates an array of the own enumerable symbols of `object`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of symbols.\n         */\n\n\n        var getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n          if (object == null) {\n            return [];\n          }\n\n          object = Object(object);\n          return arrayFilter(nativeGetSymbols(object), function (symbol) {\n            return propertyIsEnumerable.call(object, symbol);\n          });\n        };\n        /**\n         * Gets the `toStringTag` of `value`.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @returns {string} Returns the `toStringTag`.\n         */\n\n        var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\n        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n          getTag = function (value) {\n            var result = baseGetTag(value),\n                Ctor = result == objectTag ? value.constructor : undefined,\n                ctorString = Ctor ? toSource(Ctor) : '';\n\n            if (ctorString) {\n              switch (ctorString) {\n                case dataViewCtorString:\n                  return dataViewTag;\n\n                case mapCtorString:\n                  return mapTag;\n\n                case promiseCtorString:\n                  return promiseTag;\n\n                case setCtorString:\n                  return setTag;\n\n                case weakMapCtorString:\n                  return weakMapTag;\n              }\n            }\n\n            return result;\n          };\n        }\n        /**\n         * Checks if `value` is a valid array-like index.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n         * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n         */\n\n\n        function isIndex(value, length) {\n          length = length == null ? MAX_SAFE_INTEGER : length;\n          return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n        }\n        /**\n         * Checks if `value` is suitable for use as unique object key.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n         */\n\n\n        function isKeyable(value) {\n          var type = typeof value;\n          return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n        }\n        /**\n         * Checks if `func` has its source masked.\n         *\n         * @private\n         * @param {Function} func The function to check.\n         * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n         */\n\n\n        function isMasked(func) {\n          return !!maskSrcKey && maskSrcKey in func;\n        }\n        /**\n         * Checks if `value` is likely a prototype object.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n         */\n\n\n        function isPrototype(value) {\n          var Ctor = value && value.constructor,\n              proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n          return value === proto;\n        }\n        /**\n         * Converts `value` to a string using `Object.prototype.toString`.\n         *\n         * @private\n         * @param {*} value The value to convert.\n         * @returns {string} Returns the converted string.\n         */\n\n\n        function objectToString(value) {\n          return nativeObjectToString.call(value);\n        }\n        /**\n         * Converts `func` to its source code.\n         *\n         * @private\n         * @param {Function} func The function to convert.\n         * @returns {string} Returns the source code.\n         */\n\n\n        function toSource(func) {\n          if (func != null) {\n            try {\n              return funcToString.call(func);\n            } catch (e) {}\n\n            try {\n              return func + '';\n            } catch (e) {}\n          }\n\n          return '';\n        }\n        /**\n         * Performs a\n         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n         * comparison between two values to determine if they are equivalent.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to compare.\n         * @param {*} other The other value to compare.\n         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n         * @example\n         *\n         * var object = { 'a': 1 };\n         * var other = { 'a': 1 };\n         *\n         * _.eq(object, object);\n         * // => true\n         *\n         * _.eq(object, other);\n         * // => false\n         *\n         * _.eq('a', 'a');\n         * // => true\n         *\n         * _.eq('a', Object('a'));\n         * // => false\n         *\n         * _.eq(NaN, NaN);\n         * // => true\n         */\n\n\n        function eq(value, other) {\n          return value === other || value !== value && other !== other;\n        }\n        /**\n         * Checks if `value` is likely an `arguments` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n         *  else `false`.\n         * @example\n         *\n         * _.isArguments(function() { return arguments; }());\n         * // => true\n         *\n         * _.isArguments([1, 2, 3]);\n         * // => false\n         */\n\n\n        var isArguments = baseIsArguments(function () {\n          return arguments;\n        }()) ? baseIsArguments : function (value) {\n          return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n        };\n        /**\n         * Checks if `value` is classified as an `Array` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n         * @example\n         *\n         * _.isArray([1, 2, 3]);\n         * // => true\n         *\n         * _.isArray(document.body.children);\n         * // => false\n         *\n         * _.isArray('abc');\n         * // => false\n         *\n         * _.isArray(_.noop);\n         * // => false\n         */\n\n        var isArray = Array.isArray;\n        /**\n         * Checks if `value` is array-like. A value is considered array-like if it's\n         * not a function and has a `value.length` that's an integer greater than or\n         * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n         * @example\n         *\n         * _.isArrayLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isArrayLike(document.body.children);\n         * // => true\n         *\n         * _.isArrayLike('abc');\n         * // => true\n         *\n         * _.isArrayLike(_.noop);\n         * // => false\n         */\n\n        function isArrayLike(value) {\n          return value != null && isLength(value.length) && !isFunction(value);\n        }\n        /**\n         * Checks if `value` is a buffer.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.3.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n         * @example\n         *\n         * _.isBuffer(new Buffer(2));\n         * // => true\n         *\n         * _.isBuffer(new Uint8Array(2));\n         * // => false\n         */\n\n\n        var isBuffer = nativeIsBuffer || stubFalse;\n        /**\n         * Performs a deep comparison between two values to determine if they are\n         * equivalent.\n         *\n         * **Note:** This method supports comparing arrays, array buffers, booleans,\n         * date objects, error objects, maps, numbers, `Object` objects, regexes,\n         * sets, strings, symbols, and typed arrays. `Object` objects are compared\n         * by their own, not inherited, enumerable properties. Functions and DOM\n         * nodes are compared by strict equality, i.e. `===`.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to compare.\n         * @param {*} other The other value to compare.\n         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n         * @example\n         *\n         * var object = { 'a': 1 };\n         * var other = { 'a': 1 };\n         *\n         * _.isEqual(object, other);\n         * // => true\n         *\n         * object === other;\n         * // => false\n         */\n\n        function isEqual(value, other) {\n          return baseIsEqual(value, other);\n        }\n        /**\n         * Checks if `value` is classified as a `Function` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n         * @example\n         *\n         * _.isFunction(_);\n         * // => true\n         *\n         * _.isFunction(/abc/);\n         * // => false\n         */\n\n\n        function isFunction(value) {\n          if (!isObject(value)) {\n            return false;\n          } // The use of `Object#toString` avoids issues with the `typeof` operator\n          // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n          var tag = baseGetTag(value);\n          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n        }\n        /**\n         * Checks if `value` is a valid array-like length.\n         *\n         * **Note:** This method is loosely based on\n         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n         * @example\n         *\n         * _.isLength(3);\n         * // => true\n         *\n         * _.isLength(Number.MIN_VALUE);\n         * // => false\n         *\n         * _.isLength(Infinity);\n         * // => false\n         *\n         * _.isLength('3');\n         * // => false\n         */\n\n\n        function isLength(value) {\n          return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n        }\n        /**\n         * Checks if `value` is the\n         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n         * @example\n         *\n         * _.isObject({});\n         * // => true\n         *\n         * _.isObject([1, 2, 3]);\n         * // => true\n         *\n         * _.isObject(_.noop);\n         * // => true\n         *\n         * _.isObject(null);\n         * // => false\n         */\n\n\n        function isObject(value) {\n          var type = typeof value;\n          return value != null && (type == 'object' || type == 'function');\n        }\n        /**\n         * Checks if `value` is object-like. A value is object-like if it's not `null`\n         * and has a `typeof` result of \"object\".\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n         * @example\n         *\n         * _.isObjectLike({});\n         * // => true\n         *\n         * _.isObjectLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isObjectLike(_.noop);\n         * // => false\n         *\n         * _.isObjectLike(null);\n         * // => false\n         */\n\n\n        function isObjectLike(value) {\n          return value != null && typeof value == 'object';\n        }\n        /**\n         * Checks if `value` is classified as a typed array.\n         *\n         * @static\n         * @memberOf _\n         * @since 3.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n         * @example\n         *\n         * _.isTypedArray(new Uint8Array);\n         * // => true\n         *\n         * _.isTypedArray([]);\n         * // => false\n         */\n\n\n        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n        /**\n         * Creates an array of the own enumerable property names of `object`.\n         *\n         * **Note:** Non-object values are coerced to objects. See the\n         * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n         * for more details.\n         *\n         * @static\n         * @since 0.1.0\n         * @memberOf _\n         * @category Object\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         * @example\n         *\n         * function Foo() {\n         *   this.a = 1;\n         *   this.b = 2;\n         * }\n         *\n         * Foo.prototype.c = 3;\n         *\n         * _.keys(new Foo);\n         * // => ['a', 'b'] (iteration order is not guaranteed)\n         *\n         * _.keys('hi');\n         * // => ['0', '1']\n         */\n\n        function keys(object) {\n          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n        }\n        /**\n         * This method returns a new empty array.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.13.0\n         * @category Util\n         * @returns {Array} Returns the new empty array.\n         * @example\n         *\n         * var arrays = _.times(2, _.stubArray);\n         *\n         * console.log(arrays);\n         * // => [[], []]\n         *\n         * console.log(arrays[0] === arrays[1]);\n         * // => false\n         */\n\n\n        function stubArray() {\n          return [];\n        }\n        /**\n         * This method returns `false`.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.13.0\n         * @category Util\n         * @returns {boolean} Returns `false`.\n         * @example\n         *\n         * _.times(2, _.stubFalse);\n         * // => [false, false]\n         */\n\n\n        function stubFalse() {\n          return false;\n        }\n\n        module.exports = isEqual;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    9: [function (require, module, exports) {\n      (function (global) {\n        /**\n         * lodash (Custom Build) <https://lodash.com/>\n         * Build: `lodash modularize exports=\"npm\" -o ./`\n         * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n         * Released under MIT license <https://lodash.com/license>\n         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n         */\n        var reInterpolate = require('lodash._reinterpolate'),\n            templateSettings = require('lodash.templatesettings');\n        /** Used as references for various `Number` constants. */\n\n\n        var INFINITY = 1 / 0,\n            MAX_SAFE_INTEGER = 9007199254740991;\n        /** `Object#toString` result references. */\n\n        var argsTag = '[object Arguments]',\n            errorTag = '[object Error]',\n            funcTag = '[object Function]',\n            genTag = '[object GeneratorFunction]',\n            symbolTag = '[object Symbol]';\n        /** Used to match empty string literals in compiled template source. */\n\n        var reEmptyStringLeading = /\\b__p \\+= '';/g,\n            reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n            reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n        /**\n         * Used to match\n         * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n         */\n\n        var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n        /** Used to detect unsigned integer values. */\n\n        var reIsUint = /^(?:0|[1-9]\\d*)$/;\n        /** Used to ensure capturing order of template delimiters. */\n\n        var reNoMatch = /($^)/;\n        /** Used to match unescaped characters in compiled string literals. */\n\n        var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n        /** Used to escape characters for inclusion in compiled string literals. */\n\n        var stringEscapes = {\n          '\\\\': '\\\\',\n          \"'\": \"'\",\n          '\\n': 'n',\n          '\\r': 'r',\n          '\\u2028': 'u2028',\n          '\\u2029': 'u2029'\n        };\n        /** Detect free variable `global` from Node.js. */\n\n        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n        /** Detect free variable `self`. */\n\n        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n        /** Used as a reference to the global object. */\n\n        var root = freeGlobal || freeSelf || Function('return this')();\n        /**\n         * A faster alternative to `Function#apply`, this function invokes `func`\n         * with the `this` binding of `thisArg` and the arguments of `args`.\n         *\n         * @private\n         * @param {Function} func The function to invoke.\n         * @param {*} thisArg The `this` binding of `func`.\n         * @param {Array} args The arguments to invoke `func` with.\n         * @returns {*} Returns the result of `func`.\n         */\n\n        function apply(func, thisArg, args) {\n          switch (args.length) {\n            case 0:\n              return func.call(thisArg);\n\n            case 1:\n              return func.call(thisArg, args[0]);\n\n            case 2:\n              return func.call(thisArg, args[0], args[1]);\n\n            case 3:\n              return func.call(thisArg, args[0], args[1], args[2]);\n          }\n\n          return func.apply(thisArg, args);\n        }\n        /**\n         * A specialized version of `_.map` for arrays without support for iteratee\n         * shorthands.\n         *\n         * @private\n         * @param {Array} [array] The array to iterate over.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @returns {Array} Returns the new mapped array.\n         */\n\n\n        function arrayMap(array, iteratee) {\n          var index = -1,\n              length = array ? array.length : 0,\n              result = Array(length);\n\n          while (++index < length) {\n            result[index] = iteratee(array[index], index, array);\n          }\n\n          return result;\n        }\n        /**\n         * The base implementation of `_.times` without support for iteratee shorthands\n         * or max array length checks.\n         *\n         * @private\n         * @param {number} n The number of times to invoke `iteratee`.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @returns {Array} Returns the array of results.\n         */\n\n\n        function baseTimes(n, iteratee) {\n          var index = -1,\n              result = Array(n);\n\n          while (++index < n) {\n            result[index] = iteratee(index);\n          }\n\n          return result;\n        }\n        /**\n         * The base implementation of `_.values` and `_.valuesIn` which creates an\n         * array of `object` property values corresponding to the property names\n         * of `props`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @param {Array} props The property names to get values for.\n         * @returns {Object} Returns the array of property values.\n         */\n\n\n        function baseValues(object, props) {\n          return arrayMap(props, function (key) {\n            return object[key];\n          });\n        }\n        /**\n         * Used by `_.template` to escape characters for inclusion in compiled string literals.\n         *\n         * @private\n         * @param {string} chr The matched character to escape.\n         * @returns {string} Returns the escaped character.\n         */\n\n\n        function escapeStringChar(chr) {\n          return '\\\\' + stringEscapes[chr];\n        }\n        /**\n         * Creates a unary function that invokes `func` with its argument transformed.\n         *\n         * @private\n         * @param {Function} func The function to wrap.\n         * @param {Function} transform The argument transform.\n         * @returns {Function} Returns the new function.\n         */\n\n\n        function overArg(func, transform) {\n          return function (arg) {\n            return func(transform(arg));\n          };\n        }\n        /** Used for built-in method references. */\n\n\n        var objectProto = Object.prototype;\n        /** Used to check objects for own properties. */\n\n        var hasOwnProperty = objectProto.hasOwnProperty;\n        /**\n         * Used to resolve the\n         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n         * of values.\n         */\n\n        var objectToString = objectProto.toString;\n        /** Built-in value references. */\n\n        var Symbol = root.Symbol,\n            propertyIsEnumerable = objectProto.propertyIsEnumerable;\n        /* Built-in method references for those with the same name as other `lodash` methods. */\n\n        var nativeKeys = overArg(Object.keys, Object),\n            nativeMax = Math.max;\n        /** Used to convert symbols to primitives and strings. */\n\n        var symbolProto = Symbol ? Symbol.prototype : undefined,\n            symbolToString = symbolProto ? symbolProto.toString : undefined;\n        /**\n         * Creates an array of the enumerable property names of the array-like `value`.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @param {boolean} inherited Specify returning inherited property names.\n         * @returns {Array} Returns the array of property names.\n         */\n\n        function arrayLikeKeys(value, inherited) {\n          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n          // Safari 9 makes `arguments.length` enumerable in strict mode.\n          var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n          var length = result.length,\n              skipIndexes = !!length;\n\n          for (var key in value) {\n            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * Used by `_.defaults` to customize its `_.assignIn` use.\n         *\n         * @private\n         * @param {*} objValue The destination value.\n         * @param {*} srcValue The source value.\n         * @param {string} key The key of the property to assign.\n         * @param {Object} object The parent object of `objValue`.\n         * @returns {*} Returns the value to assign.\n         */\n\n\n        function assignInDefaults(objValue, srcValue, key, object) {\n          if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {\n            return srcValue;\n          }\n\n          return objValue;\n        }\n        /**\n         * Assigns `value` to `key` of `object` if the existing value is not equivalent\n         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n         * for equality comparisons.\n         *\n         * @private\n         * @param {Object} object The object to modify.\n         * @param {string} key The key of the property to assign.\n         * @param {*} value The value to assign.\n         */\n\n\n        function assignValue(object, key, value) {\n          var objValue = object[key];\n\n          if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n            object[key] = value;\n          }\n        }\n        /**\n         * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         */\n\n\n        function baseKeys(object) {\n          if (!isPrototype(object)) {\n            return nativeKeys(object);\n          }\n\n          var result = [];\n\n          for (var key in Object(object)) {\n            if (hasOwnProperty.call(object, key) && key != 'constructor') {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         */\n\n\n        function baseKeysIn(object) {\n          if (!isObject(object)) {\n            return nativeKeysIn(object);\n          }\n\n          var isProto = isPrototype(object),\n              result = [];\n\n          for (var key in object) {\n            if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n         *\n         * @private\n         * @param {Function} func The function to apply a rest parameter to.\n         * @param {number} [start=func.length-1] The start position of the rest parameter.\n         * @returns {Function} Returns the new function.\n         */\n\n\n        function baseRest(func, start) {\n          start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n          return function () {\n            var args = arguments,\n                index = -1,\n                length = nativeMax(args.length - start, 0),\n                array = Array(length);\n\n            while (++index < length) {\n              array[index] = args[start + index];\n            }\n\n            index = -1;\n            var otherArgs = Array(start + 1);\n\n            while (++index < start) {\n              otherArgs[index] = args[index];\n            }\n\n            otherArgs[start] = array;\n            return apply(func, this, otherArgs);\n          };\n        }\n        /**\n         * The base implementation of `_.toString` which doesn't convert nullish\n         * values to empty strings.\n         *\n         * @private\n         * @param {*} value The value to process.\n         * @returns {string} Returns the string.\n         */\n\n\n        function baseToString(value) {\n          // Exit early for strings to avoid a performance hit in some environments.\n          if (typeof value == 'string') {\n            return value;\n          }\n\n          if (isSymbol(value)) {\n            return symbolToString ? symbolToString.call(value) : '';\n          }\n\n          var result = value + '';\n          return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n        }\n        /**\n         * Copies properties of `source` to `object`.\n         *\n         * @private\n         * @param {Object} source The object to copy properties from.\n         * @param {Array} props The property identifiers to copy.\n         * @param {Object} [object={}] The object to copy properties to.\n         * @param {Function} [customizer] The function to customize copied values.\n         * @returns {Object} Returns `object`.\n         */\n\n\n        function copyObject(source, props, object, customizer) {\n          object || (object = {});\n          var index = -1,\n              length = props.length;\n\n          while (++index < length) {\n            var key = props[index];\n            var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n            assignValue(object, key, newValue === undefined ? source[key] : newValue);\n          }\n\n          return object;\n        }\n        /**\n         * Creates a function like `_.assign`.\n         *\n         * @private\n         * @param {Function} assigner The function to assign values.\n         * @returns {Function} Returns the new assigner function.\n         */\n\n\n        function createAssigner(assigner) {\n          return baseRest(function (object, sources) {\n            var index = -1,\n                length = sources.length,\n                customizer = length > 1 ? sources[length - 1] : undefined,\n                guard = length > 2 ? sources[2] : undefined;\n            customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n            if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n              customizer = length < 3 ? undefined : customizer;\n              length = 1;\n            }\n\n            object = Object(object);\n\n            while (++index < length) {\n              var source = sources[index];\n\n              if (source) {\n                assigner(object, source, index, customizer);\n              }\n            }\n\n            return object;\n          });\n        }\n        /**\n         * Checks if `value` is a valid array-like index.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n         * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n         */\n\n\n        function isIndex(value, length) {\n          length = length == null ? MAX_SAFE_INTEGER : length;\n          return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n        }\n        /**\n         * Checks if the given arguments are from an iteratee call.\n         *\n         * @private\n         * @param {*} value The potential iteratee value argument.\n         * @param {*} index The potential iteratee index or key argument.\n         * @param {*} object The potential iteratee object argument.\n         * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n         *  else `false`.\n         */\n\n\n        function isIterateeCall(value, index, object) {\n          if (!isObject(object)) {\n            return false;\n          }\n\n          var type = typeof index;\n\n          if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n            return eq(object[index], value);\n          }\n\n          return false;\n        }\n        /**\n         * Checks if `value` is likely a prototype object.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n         */\n\n\n        function isPrototype(value) {\n          var Ctor = value && value.constructor,\n              proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n          return value === proto;\n        }\n        /**\n         * This function is like\n         * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n         * except that it includes inherited enumerable properties.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         */\n\n\n        function nativeKeysIn(object) {\n          var result = [];\n\n          if (object != null) {\n            for (var key in Object(object)) {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * Performs a\n         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n         * comparison between two values to determine if they are equivalent.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to compare.\n         * @param {*} other The other value to compare.\n         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n         * @example\n         *\n         * var object = { 'a': 1 };\n         * var other = { 'a': 1 };\n         *\n         * _.eq(object, object);\n         * // => true\n         *\n         * _.eq(object, other);\n         * // => false\n         *\n         * _.eq('a', 'a');\n         * // => true\n         *\n         * _.eq('a', Object('a'));\n         * // => false\n         *\n         * _.eq(NaN, NaN);\n         * // => true\n         */\n\n\n        function eq(value, other) {\n          return value === other || value !== value && other !== other;\n        }\n        /**\n         * Checks if `value` is likely an `arguments` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n         *  else `false`.\n         * @example\n         *\n         * _.isArguments(function() { return arguments; }());\n         * // => true\n         *\n         * _.isArguments([1, 2, 3]);\n         * // => false\n         */\n\n\n        function isArguments(value) {\n          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n          return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n        }\n        /**\n         * Checks if `value` is classified as an `Array` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n         * @example\n         *\n         * _.isArray([1, 2, 3]);\n         * // => true\n         *\n         * _.isArray(document.body.children);\n         * // => false\n         *\n         * _.isArray('abc');\n         * // => false\n         *\n         * _.isArray(_.noop);\n         * // => false\n         */\n\n\n        var isArray = Array.isArray;\n        /**\n         * Checks if `value` is array-like. A value is considered array-like if it's\n         * not a function and has a `value.length` that's an integer greater than or\n         * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n         * @example\n         *\n         * _.isArrayLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isArrayLike(document.body.children);\n         * // => true\n         *\n         * _.isArrayLike('abc');\n         * // => true\n         *\n         * _.isArrayLike(_.noop);\n         * // => false\n         */\n\n        function isArrayLike(value) {\n          return value != null && isLength(value.length) && !isFunction(value);\n        }\n        /**\n         * This method is like `_.isArrayLike` except that it also checks if `value`\n         * is an object.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an array-like object,\n         *  else `false`.\n         * @example\n         *\n         * _.isArrayLikeObject([1, 2, 3]);\n         * // => true\n         *\n         * _.isArrayLikeObject(document.body.children);\n         * // => true\n         *\n         * _.isArrayLikeObject('abc');\n         * // => false\n         *\n         * _.isArrayLikeObject(_.noop);\n         * // => false\n         */\n\n\n        function isArrayLikeObject(value) {\n          return isObjectLike(value) && isArrayLike(value);\n        }\n        /**\n         * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n         * `SyntaxError`, `TypeError`, or `URIError` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 3.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n         * @example\n         *\n         * _.isError(new Error);\n         * // => true\n         *\n         * _.isError(Error);\n         * // => false\n         */\n\n\n        function isError(value) {\n          if (!isObjectLike(value)) {\n            return false;\n          }\n\n          return objectToString.call(value) == errorTag || typeof value.message == 'string' && typeof value.name == 'string';\n        }\n        /**\n         * Checks if `value` is classified as a `Function` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n         * @example\n         *\n         * _.isFunction(_);\n         * // => true\n         *\n         * _.isFunction(/abc/);\n         * // => false\n         */\n\n\n        function isFunction(value) {\n          // The use of `Object#toString` avoids issues with the `typeof` operator\n          // in Safari 8-9 which returns 'object' for typed array and other constructors.\n          var tag = isObject(value) ? objectToString.call(value) : '';\n          return tag == funcTag || tag == genTag;\n        }\n        /**\n         * Checks if `value` is a valid array-like length.\n         *\n         * **Note:** This method is loosely based on\n         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n         * @example\n         *\n         * _.isLength(3);\n         * // => true\n         *\n         * _.isLength(Number.MIN_VALUE);\n         * // => false\n         *\n         * _.isLength(Infinity);\n         * // => false\n         *\n         * _.isLength('3');\n         * // => false\n         */\n\n\n        function isLength(value) {\n          return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n        }\n        /**\n         * Checks if `value` is the\n         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n         * @example\n         *\n         * _.isObject({});\n         * // => true\n         *\n         * _.isObject([1, 2, 3]);\n         * // => true\n         *\n         * _.isObject(_.noop);\n         * // => true\n         *\n         * _.isObject(null);\n         * // => false\n         */\n\n\n        function isObject(value) {\n          var type = typeof value;\n          return !!value && (type == 'object' || type == 'function');\n        }\n        /**\n         * Checks if `value` is object-like. A value is object-like if it's not `null`\n         * and has a `typeof` result of \"object\".\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n         * @example\n         *\n         * _.isObjectLike({});\n         * // => true\n         *\n         * _.isObjectLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isObjectLike(_.noop);\n         * // => false\n         *\n         * _.isObjectLike(null);\n         * // => false\n         */\n\n\n        function isObjectLike(value) {\n          return !!value && typeof value == 'object';\n        }\n        /**\n         * Checks if `value` is classified as a `Symbol` primitive or object.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n         * @example\n         *\n         * _.isSymbol(Symbol.iterator);\n         * // => true\n         *\n         * _.isSymbol('abc');\n         * // => false\n         */\n\n\n        function isSymbol(value) {\n          return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n        }\n        /**\n         * Converts `value` to a string. An empty string is returned for `null`\n         * and `undefined` values. The sign of `-0` is preserved.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to process.\n         * @returns {string} Returns the string.\n         * @example\n         *\n         * _.toString(null);\n         * // => ''\n         *\n         * _.toString(-0);\n         * // => '-0'\n         *\n         * _.toString([1, 2, 3]);\n         * // => '1,2,3'\n         */\n\n\n        function toString(value) {\n          return value == null ? '' : baseToString(value);\n        }\n        /**\n         * This method is like `_.assignIn` except that it accepts `customizer`\n         * which is invoked to produce the assigned values. If `customizer` returns\n         * `undefined`, assignment is handled by the method instead. The `customizer`\n         * is invoked with five arguments: (objValue, srcValue, key, object, source).\n         *\n         * **Note:** This method mutates `object`.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @alias extendWith\n         * @category Object\n         * @param {Object} object The destination object.\n         * @param {...Object} sources The source objects.\n         * @param {Function} [customizer] The function to customize assigned values.\n         * @returns {Object} Returns `object`.\n         * @see _.assignWith\n         * @example\n         *\n         * function customizer(objValue, srcValue) {\n         *   return _.isUndefined(objValue) ? srcValue : objValue;\n         * }\n         *\n         * var defaults = _.partialRight(_.assignInWith, customizer);\n         *\n         * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n         * // => { 'a': 1, 'b': 2 }\n         */\n\n\n        var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {\n          copyObject(source, keysIn(source), object, customizer);\n        });\n        /**\n         * Creates an array of the own enumerable property names of `object`.\n         *\n         * **Note:** Non-object values are coerced to objects. See the\n         * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n         * for more details.\n         *\n         * @static\n         * @since 0.1.0\n         * @memberOf _\n         * @category Object\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         * @example\n         *\n         * function Foo() {\n         *   this.a = 1;\n         *   this.b = 2;\n         * }\n         *\n         * Foo.prototype.c = 3;\n         *\n         * _.keys(new Foo);\n         * // => ['a', 'b'] (iteration order is not guaranteed)\n         *\n         * _.keys('hi');\n         * // => ['0', '1']\n         */\n\n        function keys(object) {\n          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n        }\n        /**\n         * Creates an array of the own and inherited enumerable property names of `object`.\n         *\n         * **Note:** Non-object values are coerced to objects.\n         *\n         * @static\n         * @memberOf _\n         * @since 3.0.0\n         * @category Object\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         * @example\n         *\n         * function Foo() {\n         *   this.a = 1;\n         *   this.b = 2;\n         * }\n         *\n         * Foo.prototype.c = 3;\n         *\n         * _.keysIn(new Foo);\n         * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n         */\n\n\n        function keysIn(object) {\n          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n        }\n        /**\n         * Creates a compiled template function that can interpolate data properties\n         * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n         * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n         * properties may be accessed as free variables in the template. If a setting\n         * object is given, it takes precedence over `_.templateSettings` values.\n         *\n         * **Note:** In the development build `_.template` utilizes\n         * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n         * for easier debugging.\n         *\n         * For more information on precompiling templates see\n         * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n         *\n         * For more information on Chrome extension sandboxes see\n         * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n         *\n         * @static\n         * @since 0.1.0\n         * @memberOf _\n         * @category String\n         * @param {string} [string=''] The template string.\n         * @param {Object} [options={}] The options object.\n         * @param {RegExp} [options.escape=_.templateSettings.escape]\n         *  The HTML \"escape\" delimiter.\n         * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n         *  The \"evaluate\" delimiter.\n         * @param {Object} [options.imports=_.templateSettings.imports]\n         *  An object to import into the template as free variables.\n         * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n         *  The \"interpolate\" delimiter.\n         * @param {string} [options.sourceURL='templateSources[n]']\n         *  The sourceURL of the compiled template.\n         * @param {string} [options.variable='obj']\n         *  The data object variable name.\n         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n         * @returns {Function} Returns the compiled template function.\n         * @example\n         *\n         * // Use the \"interpolate\" delimiter to create a compiled template.\n         * var compiled = _.template('hello <%= user %>!');\n         * compiled({ 'user': 'fred' });\n         * // => 'hello fred!'\n         *\n         * // Use the HTML \"escape\" delimiter to escape data property values.\n         * var compiled = _.template('<b><%- value %></b>');\n         * compiled({ 'value': '<script>' });\n         * // => '<b>&lt;script&gt;</b>'\n         *\n         * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n         * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n         * compiled({ 'users': ['fred', 'barney'] });\n         * // => '<li>fred</li><li>barney</li>'\n         *\n         * // Use the internal `print` function in \"evaluate\" delimiters.\n         * var compiled = _.template('<% print(\"hello \" + user); %>!');\n         * compiled({ 'user': 'barney' });\n         * // => 'hello barney!'\n         *\n         * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n         * var compiled = _.template('hello ${ user }!');\n         * compiled({ 'user': 'pebbles' });\n         * // => 'hello pebbles!'\n         *\n         * // Use backslashes to treat delimiters as plain text.\n         * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n         * compiled({ 'value': 'ignored' });\n         * // => '<%- value %>'\n         *\n         * // Use the `imports` option to import `jQuery` as `jq`.\n         * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n         * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n         * compiled({ 'users': ['fred', 'barney'] });\n         * // => '<li>fred</li><li>barney</li>'\n         *\n         * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n         * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n         * compiled(data);\n         * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n         *\n         * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n         * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n         * compiled.source;\n         * // => function(data) {\n         * //   var __t, __p = '';\n         * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n         * //   return __p;\n         * // }\n         *\n         * // Use custom template delimiters.\n         * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n         * var compiled = _.template('hello {{ user }}!');\n         * compiled({ 'user': 'mustache' });\n         * // => 'hello mustache!'\n         *\n         * // Use the `source` property to inline compiled templates for meaningful\n         * // line numbers in error messages and stack traces.\n         * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n         *   var JST = {\\\n         *     \"main\": ' + _.template(mainText).source + '\\\n         *   };\\\n         * ');\n         */\n\n\n        function template(string, options, guard) {\n          // Based on John Resig's `tmpl` implementation\n          // (http://ejohn.org/blog/javascript-micro-templating/)\n          // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n          var settings = templateSettings.imports._.templateSettings || templateSettings;\n\n          if (guard && isIterateeCall(string, options, guard)) {\n            options = undefined;\n          }\n\n          string = toString(string);\n          options = assignInWith({}, options, settings, assignInDefaults);\n          var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n              importsKeys = keys(imports),\n              importsValues = baseValues(imports, importsKeys);\n          var isEscaping,\n              isEvaluating,\n              index = 0,\n              interpolate = options.interpolate || reNoMatch,\n              source = \"__p += '\"; // Compile the regexp to match each delimiter.\n\n          var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g'); // Use a sourceURL for easier debugging.\n\n          var sourceURL = 'sourceURL' in options ? '//# sourceURL=' + options.sourceURL + '\\n' : '';\n          string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n            interpolateValue || (interpolateValue = esTemplateValue); // Escape characters that can't be included in string literals.\n\n            source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar); // Replace delimiters with snippets.\n\n            if (escapeValue) {\n              isEscaping = true;\n              source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n            }\n\n            if (evaluateValue) {\n              isEvaluating = true;\n              source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n            }\n\n            if (interpolateValue) {\n              source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n            }\n\n            index = offset + match.length; // The JS engine embedded in Adobe products needs `match` returned in\n            // order to produce the correct `offset` value.\n\n            return match;\n          });\n          source += \"';\\n\"; // If `variable` is not specified wrap a with-statement around the generated\n          // code to add the data object to the top of the scope chain.\n\n          var variable = options.variable;\n\n          if (!variable) {\n            source = 'with (obj) {\\n' + source + '\\n}\\n';\n          } // Cleanup code by stripping empty strings.\n\n\n          source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;'); // Frame code as the function body.\n\n          source = 'function(' + (variable || 'obj') + ') {\\n' + (variable ? '' : 'obj || (obj = {});\\n') + \"var __t, __p = ''\" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\\n' + \"function print() { __p += __j.call(arguments, '') }\\n\" : ';\\n') + source + 'return __p\\n}';\n          var result = attempt(function () {\n            return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n          }); // Provide the compiled function's source by its `toString` method or\n          // the `source` property as a convenience for inlining compiled templates.\n\n          result.source = source;\n\n          if (isError(result)) {\n            throw result;\n          }\n\n          return result;\n        }\n        /**\n         * Attempts to invoke `func`, returning either the result or the caught error\n         * object. Any additional arguments are provided to `func` when it's invoked.\n         *\n         * @static\n         * @memberOf _\n         * @since 3.0.0\n         * @category Util\n         * @param {Function} func The function to attempt.\n         * @param {...*} [args] The arguments to invoke `func` with.\n         * @returns {*} Returns the `func` result or error object.\n         * @example\n         *\n         * // Avoid throwing errors for invalid selectors.\n         * var elements = _.attempt(function(selector) {\n         *   return document.querySelectorAll(selector);\n         * }, '>_>');\n         *\n         * if (_.isError(elements)) {\n         *   elements = [];\n         * }\n         */\n\n\n        var attempt = baseRest(function (func, args) {\n          try {\n            return apply(func, undefined, args);\n          } catch (e) {\n            return isError(e) ? e : new Error(e);\n          }\n        });\n        module.exports = template;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"lodash._reinterpolate\": 6,\n      \"lodash.templatesettings\": 10\n    }],\n    10: [function (require, module, exports) {\n      (function (global) {\n        /**\n         * lodash (Custom Build) <https://lodash.com/>\n         * Build: `lodash modularize exports=\"npm\" -o ./`\n         * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n         * Released under MIT license <https://lodash.com/license>\n         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n         */\n        var reInterpolate = require('lodash._reinterpolate');\n        /** Used as references for various `Number` constants. */\n\n\n        var INFINITY = 1 / 0;\n        /** `Object#toString` result references. */\n\n        var symbolTag = '[object Symbol]';\n        /** Used to match HTML entities and HTML characters. */\n\n        var reUnescapedHtml = /[&<>\"'`]/g,\n            reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n        /** Used to match template delimiters. */\n\n        var reEscape = /<%-([\\s\\S]+?)%>/g,\n            reEvaluate = /<%([\\s\\S]+?)%>/g;\n        /** Used to map characters to HTML entities. */\n\n        var htmlEscapes = {\n          '&': '&amp;',\n          '<': '&lt;',\n          '>': '&gt;',\n          '\"': '&quot;',\n          \"'\": '&#39;',\n          '`': '&#96;'\n        };\n        /** Detect free variable `global` from Node.js. */\n\n        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n        /** Detect free variable `self`. */\n\n        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n        /** Used as a reference to the global object. */\n\n        var root = freeGlobal || freeSelf || Function('return this')();\n        /**\n         * The base implementation of `_.propertyOf` without support for deep paths.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Function} Returns the new accessor function.\n         */\n\n        function basePropertyOf(object) {\n          return function (key) {\n            return object == null ? undefined : object[key];\n          };\n        }\n        /**\n         * Used by `_.escape` to convert characters to HTML entities.\n         *\n         * @private\n         * @param {string} chr The matched character to escape.\n         * @returns {string} Returns the escaped character.\n         */\n\n\n        var escapeHtmlChar = basePropertyOf(htmlEscapes);\n        /** Used for built-in method references. */\n\n        var objectProto = Object.prototype;\n        /**\n         * Used to resolve the\n         * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n         * of values.\n         */\n\n        var objectToString = objectProto.toString;\n        /** Built-in value references. */\n\n        var Symbol = root.Symbol;\n        /** Used to convert symbols to primitives and strings. */\n\n        var symbolProto = Symbol ? Symbol.prototype : undefined,\n            symbolToString = symbolProto ? symbolProto.toString : undefined;\n        /**\n         * By default, the template delimiters used by lodash are like those in\n         * embedded Ruby (ERB). Change the following template settings to use\n         * alternative delimiters.\n         *\n         * @static\n         * @memberOf _\n         * @type {Object}\n         */\n\n        var templateSettings = {\n          /**\n           * Used to detect `data` property values to be HTML-escaped.\n           *\n           * @memberOf _.templateSettings\n           * @type {RegExp}\n           */\n          'escape': reEscape,\n\n          /**\n           * Used to detect code to be evaluated.\n           *\n           * @memberOf _.templateSettings\n           * @type {RegExp}\n           */\n          'evaluate': reEvaluate,\n\n          /**\n           * Used to detect `data` property values to inject.\n           *\n           * @memberOf _.templateSettings\n           * @type {RegExp}\n           */\n          'interpolate': reInterpolate,\n\n          /**\n           * Used to reference the data object in the template text.\n           *\n           * @memberOf _.templateSettings\n           * @type {string}\n           */\n          'variable': '',\n\n          /**\n           * Used to import variables into the compiled template.\n           *\n           * @memberOf _.templateSettings\n           * @type {Object}\n           */\n          'imports': {\n            /**\n             * A reference to the `lodash` function.\n             *\n             * @memberOf _.templateSettings.imports\n             * @type {Function}\n             */\n            '_': {\n              'escape': escape\n            }\n          }\n        };\n        /**\n         * The base implementation of `_.toString` which doesn't convert nullish\n         * values to empty strings.\n         *\n         * @private\n         * @param {*} value The value to process.\n         * @returns {string} Returns the string.\n         */\n\n        function baseToString(value) {\n          // Exit early for strings to avoid a performance hit in some environments.\n          if (typeof value == 'string') {\n            return value;\n          }\n\n          if (isSymbol(value)) {\n            return symbolToString ? symbolToString.call(value) : '';\n          }\n\n          var result = value + '';\n          return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n        }\n        /**\n         * Checks if `value` is object-like. A value is object-like if it's not `null`\n         * and has a `typeof` result of \"object\".\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n         * @example\n         *\n         * _.isObjectLike({});\n         * // => true\n         *\n         * _.isObjectLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isObjectLike(_.noop);\n         * // => false\n         *\n         * _.isObjectLike(null);\n         * // => false\n         */\n\n\n        function isObjectLike(value) {\n          return !!value && typeof value == 'object';\n        }\n        /**\n         * Checks if `value` is classified as a `Symbol` primitive or object.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n         * @example\n         *\n         * _.isSymbol(Symbol.iterator);\n         * // => true\n         *\n         * _.isSymbol('abc');\n         * // => false\n         */\n\n\n        function isSymbol(value) {\n          return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n        }\n        /**\n         * Converts `value` to a string. An empty string is returned for `null`\n         * and `undefined` values. The sign of `-0` is preserved.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to process.\n         * @returns {string} Returns the string.\n         * @example\n         *\n         * _.toString(null);\n         * // => ''\n         *\n         * _.toString(-0);\n         * // => '-0'\n         *\n         * _.toString([1, 2, 3]);\n         * // => '1,2,3'\n         */\n\n\n        function toString(value) {\n          return value == null ? '' : baseToString(value);\n        }\n        /**\n         * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n         * their corresponding HTML entities.\n         *\n         * **Note:** No other characters are escaped. To escape additional\n         * characters use a third-party library like [_he_](https://mths.be/he).\n         *\n         * Though the \">\" character is escaped for symmetry, characters like\n         * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n         * unless they're part of a tag or unquoted attribute value. See\n         * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n         * (under \"semi-related fun fact\") for more details.\n         *\n         * Backticks are escaped because in IE < 9, they can break out of\n         * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n         * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n         * [#133](https://html5sec.org/#133) of the\n         * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n         *\n         * When working with HTML you should always\n         * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n         * XSS vectors.\n         *\n         * @static\n         * @since 0.1.0\n         * @memberOf _\n         * @category String\n         * @param {string} [string=''] The string to escape.\n         * @returns {string} Returns the escaped string.\n         * @example\n         *\n         * _.escape('fred, barney, & pebbles');\n         * // => 'fred, barney, &amp; pebbles'\n         */\n\n\n        function escape(string) {\n          string = toString(string);\n          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;\n        }\n\n        module.exports = templateSettings;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"lodash._reinterpolate\": 6\n    }],\n    11: [function (require, module, exports) {\n      var root = require('./_root');\n      /** Built-in value references. */\n\n\n      var Symbol = root.Symbol;\n      module.exports = Symbol;\n    }, {\n      \"./_root\": 18\n    }],\n    12: [function (require, module, exports) {\n      var Symbol = require('./_Symbol'),\n          getRawTag = require('./_getRawTag'),\n          objectToString = require('./_objectToString');\n      /** `Object#toString` result references. */\n\n\n      var nullTag = '[object Null]',\n          undefinedTag = '[object Undefined]';\n      /** Built-in value references. */\n\n      var symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n      /**\n       * The base implementation of `getTag` without fallbacks for buggy environments.\n       *\n       * @private\n       * @param {*} value The value to query.\n       * @returns {string} Returns the `toStringTag`.\n       */\n\n      function baseGetTag(value) {\n        if (value == null) {\n          return value === undefined ? undefinedTag : nullTag;\n        }\n\n        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n      }\n\n      module.exports = baseGetTag;\n    }, {\n      \"./_Symbol\": 11,\n      \"./_getRawTag\": 15,\n      \"./_objectToString\": 16\n    }],\n    13: [function (require, module, exports) {\n      (function (global) {\n        /** Detect free variable `global` from Node.js. */\n        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n        module.exports = freeGlobal;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    14: [function (require, module, exports) {\n      var overArg = require('./_overArg');\n      /** Built-in value references. */\n\n\n      var getPrototype = overArg(Object.getPrototypeOf, Object);\n      module.exports = getPrototype;\n    }, {\n      \"./_overArg\": 17\n    }],\n    15: [function (require, module, exports) {\n      var Symbol = require('./_Symbol');\n      /** Used for built-in method references. */\n\n\n      var objectProto = Object.prototype;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /**\n       * Used to resolve the\n       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n       * of values.\n       */\n\n      var nativeObjectToString = objectProto.toString;\n      /** Built-in value references. */\n\n      var symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n      /**\n       * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n       *\n       * @private\n       * @param {*} value The value to query.\n       * @returns {string} Returns the raw `toStringTag`.\n       */\n\n      function getRawTag(value) {\n        var isOwn = hasOwnProperty.call(value, symToStringTag),\n            tag = value[symToStringTag];\n\n        try {\n          value[symToStringTag] = undefined;\n          var unmasked = true;\n        } catch (e) {}\n\n        var result = nativeObjectToString.call(value);\n\n        if (unmasked) {\n          if (isOwn) {\n            value[symToStringTag] = tag;\n          } else {\n            delete value[symToStringTag];\n          }\n        }\n\n        return result;\n      }\n\n      module.exports = getRawTag;\n    }, {\n      \"./_Symbol\": 11\n    }],\n    16: [function (require, module, exports) {\n      /** Used for built-in method references. */\n      var objectProto = Object.prototype;\n      /**\n       * Used to resolve the\n       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n       * of values.\n       */\n\n      var nativeObjectToString = objectProto.toString;\n      /**\n       * Converts `value` to a string using `Object.prototype.toString`.\n       *\n       * @private\n       * @param {*} value The value to convert.\n       * @returns {string} Returns the converted string.\n       */\n\n      function objectToString(value) {\n        return nativeObjectToString.call(value);\n      }\n\n      module.exports = objectToString;\n    }, {}],\n    17: [function (require, module, exports) {\n      /**\n       * Creates a unary function that invokes `func` with its argument transformed.\n       *\n       * @private\n       * @param {Function} func The function to wrap.\n       * @param {Function} transform The argument transform.\n       * @returns {Function} Returns the new function.\n       */\n      function overArg(func, transform) {\n        return function (arg) {\n          return func(transform(arg));\n        };\n      }\n\n      module.exports = overArg;\n    }, {}],\n    18: [function (require, module, exports) {\n      var freeGlobal = require('./_freeGlobal');\n      /** Detect free variable `self`. */\n\n\n      var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n      /** Used as a reference to the global object. */\n\n      var root = freeGlobal || freeSelf || Function('return this')();\n      module.exports = root;\n    }, {\n      \"./_freeGlobal\": 13\n    }],\n    19: [function (require, module, exports) {\n      /**\n       * Checks if `value` is object-like. A value is object-like if it's not `null`\n       * and has a `typeof` result of \"object\".\n       *\n       * @static\n       * @memberOf _\n       * @since 4.0.0\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n       * @example\n       *\n       * _.isObjectLike({});\n       * // => true\n       *\n       * _.isObjectLike([1, 2, 3]);\n       * // => true\n       *\n       * _.isObjectLike(_.noop);\n       * // => false\n       *\n       * _.isObjectLike(null);\n       * // => false\n       */\n      function isObjectLike(value) {\n        return value != null && typeof value == 'object';\n      }\n\n      module.exports = isObjectLike;\n    }, {}],\n    20: [function (require, module, exports) {\n      var baseGetTag = require('./_baseGetTag'),\n          getPrototype = require('./_getPrototype'),\n          isObjectLike = require('./isObjectLike');\n      /** `Object#toString` result references. */\n\n\n      var objectTag = '[object Object]';\n      /** Used for built-in method references. */\n\n      var funcProto = Function.prototype,\n          objectProto = Object.prototype;\n      /** Used to resolve the decompiled source of functions. */\n\n      var funcToString = funcProto.toString;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /** Used to infer the `Object` constructor. */\n\n      var objectCtorString = funcToString.call(Object);\n      /**\n       * Checks if `value` is a plain object, that is, an object created by the\n       * `Object` constructor or one with a `[[Prototype]]` of `null`.\n       *\n       * @static\n       * @memberOf _\n       * @since 0.8.0\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n       * @example\n       *\n       * function Foo() {\n       *   this.a = 1;\n       * }\n       *\n       * _.isPlainObject(new Foo);\n       * // => false\n       *\n       * _.isPlainObject([1, 2, 3]);\n       * // => false\n       *\n       * _.isPlainObject({ 'x': 0, 'y': 0 });\n       * // => true\n       *\n       * _.isPlainObject(Object.create(null));\n       * // => true\n       */\n\n      function isPlainObject(value) {\n        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n          return false;\n        }\n\n        var proto = getPrototype(value);\n\n        if (proto === null) {\n          return true;\n        }\n\n        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n        return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n      }\n\n      module.exports = isPlainObject;\n    }, {\n      \"./_baseGetTag\": 12,\n      \"./_getPrototype\": 14,\n      \"./isObjectLike\": 19\n    }],\n    21: [function (require, module, exports) {\n      // shim for using process in browser\n      var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n      // don't break things.  But we need to wrap it in a try catch in case it is\n      // wrapped in strict mode code which doesn't define any globals.  It's inside a\n      // function because try/catches deoptimize in certain engines.\n\n      var cachedSetTimeout;\n      var cachedClearTimeout;\n\n      function defaultSetTimout() {\n        throw new Error('setTimeout has not been defined');\n      }\n\n      function defaultClearTimeout() {\n        throw new Error('clearTimeout has not been defined');\n      }\n\n      (function () {\n        try {\n          if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n          } else {\n            cachedSetTimeout = defaultSetTimout;\n          }\n        } catch (e) {\n          cachedSetTimeout = defaultSetTimout;\n        }\n\n        try {\n          if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n          } else {\n            cachedClearTimeout = defaultClearTimeout;\n          }\n        } catch (e) {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      })();\n\n      function runTimeout(fun) {\n        if (cachedSetTimeout === setTimeout) {\n          //normal enviroments in sane situations\n          return setTimeout(fun, 0);\n        } // if setTimeout wasn't available but was latter defined\n\n\n        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n        }\n\n        try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedSetTimeout(fun, 0);\n        } catch (e) {\n          try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n          } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n          }\n        }\n      }\n\n      function runClearTimeout(marker) {\n        if (cachedClearTimeout === clearTimeout) {\n          //normal enviroments in sane situations\n          return clearTimeout(marker);\n        } // if clearTimeout wasn't available but was latter defined\n\n\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n        }\n\n        try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedClearTimeout(marker);\n        } catch (e) {\n          try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n          } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n          }\n        }\n      }\n\n      var queue = [];\n      var draining = false;\n      var currentQueue;\n      var queueIndex = -1;\n\n      function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n          return;\n        }\n\n        draining = false;\n\n        if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n        } else {\n          queueIndex = -1;\n        }\n\n        if (queue.length) {\n          drainQueue();\n        }\n      }\n\n      function drainQueue() {\n        if (draining) {\n          return;\n        }\n\n        var timeout = runTimeout(cleanUpNextTick);\n        draining = true;\n        var len = queue.length;\n\n        while (len) {\n          currentQueue = queue;\n          queue = [];\n\n          while (++queueIndex < len) {\n            if (currentQueue) {\n              currentQueue[queueIndex].run();\n            }\n          }\n\n          queueIndex = -1;\n          len = queue.length;\n        }\n\n        currentQueue = null;\n        draining = false;\n        runClearTimeout(timeout);\n      }\n\n      process.nextTick = function (fun) {\n        var args = new Array(arguments.length - 1);\n\n        if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n          }\n        }\n\n        queue.push(new Item(fun, args));\n\n        if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n        }\n      }; // v8 likes predictible objects\n\n\n      function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n      }\n\n      Item.prototype.run = function () {\n        this.fun.apply(null, this.array);\n      };\n\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      process.version = ''; // empty string to avoid regexp issues\n\n      process.versions = {};\n\n      function noop() {}\n\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n      process.prependListener = noop;\n      process.prependOnceListener = noop;\n\n      process.listeners = function (name) {\n        return [];\n      };\n\n      process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n      };\n\n      process.cwd = function () {\n        return '/';\n      };\n\n      process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n      };\n\n      process.umask = function () {\n        return 0;\n      };\n    }, {}],\n    22: [function (require, module, exports) {\n      'use strict';\n\n      exports.__esModule = true;\n\n      function createThunkMiddleware(extraArgument) {\n        return function (_ref) {\n          var dispatch = _ref.dispatch,\n              getState = _ref.getState;\n          return function (next) {\n            return function (action) {\n              if (typeof action === 'function') {\n                return action(dispatch, getState, extraArgument);\n              }\n\n              return next(action);\n            };\n          };\n        };\n      }\n\n      var thunk = createThunkMiddleware();\n      thunk.withExtraArgument = createThunkMiddleware;\n      exports['default'] = thunk;\n    }, {}],\n    23: [function (require, module, exports) {\n      'use strict';\n\n      exports.__esModule = true;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      exports['default'] = applyMiddleware;\n\n      var _compose = require('./compose');\n\n      var _compose2 = _interopRequireDefault(_compose);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          'default': obj\n        };\n      }\n      /**\n       * Creates a store enhancer that applies middleware to the dispatch method\n       * of the Redux store. This is handy for a variety of tasks, such as expressing\n       * asynchronous actions in a concise manner, or logging every action payload.\n       *\n       * See `redux-thunk` package as an example of the Redux middleware.\n       *\n       * Because middleware is potentially asynchronous, this should be the first\n       * store enhancer in the composition chain.\n       *\n       * Note that each middleware will be given the `dispatch` and `getState` functions\n       * as named arguments.\n       *\n       * @param {...Function} middlewares The middleware chain to be applied.\n       * @returns {Function} A store enhancer applying the middleware.\n       */\n\n\n      function applyMiddleware() {\n        for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n          middlewares[_key] = arguments[_key];\n        }\n\n        return function (createStore) {\n          return function (reducer, preloadedState, enhancer) {\n            var store = createStore(reducer, preloadedState, enhancer);\n            var _dispatch = store.dispatch;\n            var chain = [];\n            var middlewareAPI = {\n              getState: store.getState,\n              dispatch: function dispatch(action) {\n                return _dispatch(action);\n              }\n            };\n            chain = middlewares.map(function (middleware) {\n              return middleware(middlewareAPI);\n            });\n            _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);\n            return _extends({}, store, {\n              dispatch: _dispatch\n            });\n          };\n        };\n      }\n    }, {\n      \"./compose\": 26\n    }],\n    24: [function (require, module, exports) {\n      'use strict';\n\n      exports.__esModule = true;\n      exports['default'] = bindActionCreators;\n\n      function bindActionCreator(actionCreator, dispatch) {\n        return function () {\n          return dispatch(actionCreator.apply(undefined, arguments));\n        };\n      }\n      /**\n       * Turns an object whose values are action creators, into an object with the\n       * same keys, but with every function wrapped into a `dispatch` call so they\n       * may be invoked directly. This is just a convenience method, as you can call\n       * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n       *\n       * For convenience, you can also pass a single function as the first argument,\n       * and get a function in return.\n       *\n       * @param {Function|Object} actionCreators An object whose values are action\n       * creator functions. One handy way to obtain it is to use ES6 `import * as`\n       * syntax. You may also pass a single function.\n       *\n       * @param {Function} dispatch The `dispatch` function available on your Redux\n       * store.\n       *\n       * @returns {Function|Object} The object mimicking the original object, but with\n       * every action creator wrapped into the `dispatch` call. If you passed a\n       * function as `actionCreators`, the return value will also be a single\n       * function.\n       */\n\n\n      function bindActionCreators(actionCreators, dispatch) {\n        if (typeof actionCreators === 'function') {\n          return bindActionCreator(actionCreators, dispatch);\n        }\n\n        if (typeof actionCreators !== 'object' || actionCreators === null) {\n          throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n        }\n\n        var keys = Object.keys(actionCreators);\n        var boundActionCreators = {};\n\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          var actionCreator = actionCreators[key];\n\n          if (typeof actionCreator === 'function') {\n            boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n          }\n        }\n\n        return boundActionCreators;\n      }\n    }, {}],\n    25: [function (require, module, exports) {\n      (function (process) {\n        'use strict';\n\n        exports.__esModule = true;\n        exports['default'] = combineReducers;\n\n        var _createStore = require('./createStore');\n\n        var _isPlainObject = require('lodash/isPlainObject');\n\n        var _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\n        var _warning = require('./utils/warning');\n\n        var _warning2 = _interopRequireDefault(_warning);\n\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            'default': obj\n          };\n        }\n\n        function getUndefinedStateErrorMessage(key, action) {\n          var actionType = action && action.type;\n          var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n          return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n        }\n\n        function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n          var reducerKeys = Object.keys(reducers);\n          var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n          if (reducerKeys.length === 0) {\n            return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n          }\n\n          if (!(0, _isPlainObject2['default'])(inputState)) {\n            return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n          }\n\n          var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n            return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n          });\n          unexpectedKeys.forEach(function (key) {\n            unexpectedKeyCache[key] = true;\n          });\n\n          if (unexpectedKeys.length > 0) {\n            return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n          }\n        }\n\n        function assertReducerShape(reducers) {\n          Object.keys(reducers).forEach(function (key) {\n            var reducer = reducers[key];\n            var initialState = reducer(undefined, {\n              type: _createStore.ActionTypes.INIT\n            });\n\n            if (typeof initialState === 'undefined') {\n              throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n            }\n\n            var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n\n            if (typeof reducer(undefined, {\n              type: type\n            }) === 'undefined') {\n              throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n            }\n          });\n        }\n        /**\n         * Turns an object whose values are different reducer functions, into a single\n         * reducer function. It will call every child reducer, and gather their results\n         * into a single state object, whose keys correspond to the keys of the passed\n         * reducer functions.\n         *\n         * @param {Object} reducers An object whose values correspond to different\n         * reducer functions that need to be combined into one. One handy way to obtain\n         * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n         * undefined for any action. Instead, they should return their initial state\n         * if the state passed to them was undefined, and the current state for any\n         * unrecognized action.\n         *\n         * @returns {Function} A reducer function that invokes every reducer inside the\n         * passed object, and builds a state object with the same shape.\n         */\n\n\n        function combineReducers(reducers) {\n          var reducerKeys = Object.keys(reducers);\n          var finalReducers = {};\n\n          for (var i = 0; i < reducerKeys.length; i++) {\n            var key = reducerKeys[i];\n\n            if (process.env.NODE_ENV !== 'production') {\n              if (typeof reducers[key] === 'undefined') {\n                (0, _warning2['default'])('No reducer provided for key \"' + key + '\"');\n              }\n            }\n\n            if (typeof reducers[key] === 'function') {\n              finalReducers[key] = reducers[key];\n            }\n          }\n\n          var finalReducerKeys = Object.keys(finalReducers);\n          var unexpectedKeyCache = void 0;\n\n          if (process.env.NODE_ENV !== 'production') {\n            unexpectedKeyCache = {};\n          }\n\n          var shapeAssertionError = void 0;\n\n          try {\n            assertReducerShape(finalReducers);\n          } catch (e) {\n            shapeAssertionError = e;\n          }\n\n          return function combination() {\n            var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var action = arguments[1];\n\n            if (shapeAssertionError) {\n              throw shapeAssertionError;\n            }\n\n            if (process.env.NODE_ENV !== 'production') {\n              var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n              if (warningMessage) {\n                (0, _warning2['default'])(warningMessage);\n              }\n            }\n\n            var hasChanged = false;\n            var nextState = {};\n\n            for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n              var _key = finalReducerKeys[_i];\n              var reducer = finalReducers[_key];\n              var previousStateForKey = state[_key];\n              var nextStateForKey = reducer(previousStateForKey, action);\n\n              if (typeof nextStateForKey === 'undefined') {\n                var errorMessage = getUndefinedStateErrorMessage(_key, action);\n                throw new Error(errorMessage);\n              }\n\n              nextState[_key] = nextStateForKey;\n              hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n            }\n\n            return hasChanged ? nextState : state;\n          };\n        }\n      }).call(this, require('_process'));\n    }, {\n      \"./createStore\": 27,\n      \"./utils/warning\": 29,\n      \"_process\": 21,\n      \"lodash/isPlainObject\": 20\n    }],\n    26: [function (require, module, exports) {\n      \"use strict\";\n\n      exports.__esModule = true;\n      exports[\"default\"] = compose;\n      /**\n       * Composes single-argument functions from right to left. The rightmost\n       * function can take multiple arguments as it provides the signature for\n       * the resulting composite function.\n       *\n       * @param {...Function} funcs The functions to compose.\n       * @returns {Function} A function obtained by composing the argument functions\n       * from right to left. For example, compose(f, g, h) is identical to doing\n       * (...args) => f(g(h(...args))).\n       */\n\n      function compose() {\n        for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n          funcs[_key] = arguments[_key];\n        }\n\n        if (funcs.length === 0) {\n          return function (arg) {\n            return arg;\n          };\n        }\n\n        if (funcs.length === 1) {\n          return funcs[0];\n        }\n\n        return funcs.reduce(function (a, b) {\n          return function () {\n            return a(b.apply(undefined, arguments));\n          };\n        });\n      }\n    }, {}],\n    27: [function (require, module, exports) {\n      'use strict';\n\n      exports.__esModule = true;\n      exports.ActionTypes = undefined;\n      exports['default'] = createStore;\n\n      var _isPlainObject = require('lodash/isPlainObject');\n\n      var _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\n      var _symbolObservable = require('symbol-observable');\n\n      var _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          'default': obj\n        };\n      }\n      /**\n       * These are private action types reserved by Redux.\n       * For any unknown actions, you must return the current state.\n       * If the current state is undefined, you must return the initial state.\n       * Do not reference these action types directly in your code.\n       */\n\n\n      var ActionTypes = exports.ActionTypes = {\n        INIT: '@@redux/INIT'\n        /**\n         * Creates a Redux store that holds the state tree.\n         * The only way to change the data in the store is to call `dispatch()` on it.\n         *\n         * There should only be a single store in your app. To specify how different\n         * parts of the state tree respond to actions, you may combine several reducers\n         * into a single reducer function by using `combineReducers`.\n         *\n         * @param {Function} reducer A function that returns the next state tree, given\n         * the current state tree and the action to handle.\n         *\n         * @param {any} [preloadedState] The initial state. You may optionally specify it\n         * to hydrate the state from the server in universal apps, or to restore a\n         * previously serialized user session.\n         * If you use `combineReducers` to produce the root reducer function, this must be\n         * an object with the same shape as `combineReducers` keys.\n         *\n         * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n         * to enhance the store with third-party capabilities such as middleware,\n         * time travel, persistence, etc. The only store enhancer that ships with Redux\n         * is `applyMiddleware()`.\n         *\n         * @returns {Store} A Redux store that lets you read the state, dispatch actions\n         * and subscribe to changes.\n         */\n\n      };\n\n      function createStore(reducer, preloadedState, enhancer) {\n        var _ref2;\n\n        if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n          enhancer = preloadedState;\n          preloadedState = undefined;\n        }\n\n        if (typeof enhancer !== 'undefined') {\n          if (typeof enhancer !== 'function') {\n            throw new Error('Expected the enhancer to be a function.');\n          }\n\n          return enhancer(createStore)(reducer, preloadedState);\n        }\n\n        if (typeof reducer !== 'function') {\n          throw new Error('Expected the reducer to be a function.');\n        }\n\n        var currentReducer = reducer;\n        var currentState = preloadedState;\n        var currentListeners = [];\n        var nextListeners = currentListeners;\n        var isDispatching = false;\n\n        function ensureCanMutateNextListeners() {\n          if (nextListeners === currentListeners) {\n            nextListeners = currentListeners.slice();\n          }\n        }\n        /**\n         * Reads the state tree managed by the store.\n         *\n         * @returns {any} The current state tree of your application.\n         */\n\n\n        function getState() {\n          return currentState;\n        }\n        /**\n         * Adds a change listener. It will be called any time an action is dispatched,\n         * and some part of the state tree may potentially have changed. You may then\n         * call `getState()` to read the current state tree inside the callback.\n         *\n         * You may call `dispatch()` from a change listener, with the following\n         * caveats:\n         *\n         * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n         * If you subscribe or unsubscribe while the listeners are being invoked, this\n         * will not have any effect on the `dispatch()` that is currently in progress.\n         * However, the next `dispatch()` call, whether nested or not, will use a more\n         * recent snapshot of the subscription list.\n         *\n         * 2. The listener should not expect to see all state changes, as the state\n         * might have been updated multiple times during a nested `dispatch()` before\n         * the listener is called. It is, however, guaranteed that all subscribers\n         * registered before the `dispatch()` started will be called with the latest\n         * state by the time it exits.\n         *\n         * @param {Function} listener A callback to be invoked on every dispatch.\n         * @returns {Function} A function to remove this change listener.\n         */\n\n\n        function subscribe(listener) {\n          if (typeof listener !== 'function') {\n            throw new Error('Expected listener to be a function.');\n          }\n\n          var isSubscribed = true;\n          ensureCanMutateNextListeners();\n          nextListeners.push(listener);\n          return function unsubscribe() {\n            if (!isSubscribed) {\n              return;\n            }\n\n            isSubscribed = false;\n            ensureCanMutateNextListeners();\n            var index = nextListeners.indexOf(listener);\n            nextListeners.splice(index, 1);\n          };\n        }\n        /**\n         * Dispatches an action. It is the only way to trigger a state change.\n         *\n         * The `reducer` function, used to create the store, will be called with the\n         * current state tree and the given `action`. Its return value will\n         * be considered the **next** state of the tree, and the change listeners\n         * will be notified.\n         *\n         * The base implementation only supports plain object actions. If you want to\n         * dispatch a Promise, an Observable, a thunk, or something else, you need to\n         * wrap your store creating function into the corresponding middleware. For\n         * example, see the documentation for the `redux-thunk` package. Even the\n         * middleware will eventually dispatch plain object actions using this method.\n         *\n         * @param {Object} action A plain object representing “what changed”. It is\n         * a good idea to keep actions serializable so you can record and replay user\n         * sessions, or use the time travelling `redux-devtools`. An action must have\n         * a `type` property which may not be `undefined`. It is a good idea to use\n         * string constants for action types.\n         *\n         * @returns {Object} For convenience, the same action object you dispatched.\n         *\n         * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n         * return something else (for example, a Promise you can await).\n         */\n\n\n        function dispatch(action) {\n          if (!(0, _isPlainObject2['default'])(action)) {\n            throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n          }\n\n          if (typeof action.type === 'undefined') {\n            throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n          }\n\n          if (isDispatching) {\n            throw new Error('Reducers may not dispatch actions.');\n          }\n\n          try {\n            isDispatching = true;\n            currentState = currentReducer(currentState, action);\n          } finally {\n            isDispatching = false;\n          }\n\n          var listeners = currentListeners = nextListeners;\n\n          for (var i = 0; i < listeners.length; i++) {\n            var listener = listeners[i];\n            listener();\n          }\n\n          return action;\n        }\n        /**\n         * Replaces the reducer currently used by the store to calculate the state.\n         *\n         * You might need this if your app implements code splitting and you want to\n         * load some of the reducers dynamically. You might also need this if you\n         * implement a hot reloading mechanism for Redux.\n         *\n         * @param {Function} nextReducer The reducer for the store to use instead.\n         * @returns {void}\n         */\n\n\n        function replaceReducer(nextReducer) {\n          if (typeof nextReducer !== 'function') {\n            throw new Error('Expected the nextReducer to be a function.');\n          }\n\n          currentReducer = nextReducer;\n          dispatch({\n            type: ActionTypes.INIT\n          });\n        }\n        /**\n         * Interoperability point for observable/reactive libraries.\n         * @returns {observable} A minimal observable of state changes.\n         * For more information, see the observable proposal:\n         * https://github.com/tc39/proposal-observable\n         */\n\n\n        function observable() {\n          var _ref;\n\n          var outerSubscribe = subscribe;\n          return _ref = {\n            /**\n             * The minimal observable subscription method.\n             * @param {Object} observer Any object that can be used as an observer.\n             * The observer object should have a `next` method.\n             * @returns {subscription} An object with an `unsubscribe` method that can\n             * be used to unsubscribe the observable from the store, and prevent further\n             * emission of values from the observable.\n             */\n            subscribe: function subscribe(observer) {\n              if (typeof observer !== 'object') {\n                throw new TypeError('Expected the observer to be an object.');\n              }\n\n              function observeState() {\n                if (observer.next) {\n                  observer.next(getState());\n                }\n              }\n\n              observeState();\n              var unsubscribe = outerSubscribe(observeState);\n              return {\n                unsubscribe: unsubscribe\n              };\n            }\n          }, _ref[_symbolObservable2['default']] = function () {\n            return this;\n          }, _ref;\n        } // When a store is created, an \"INIT\" action is dispatched so that every\n        // reducer returns their initial state. This effectively populates\n        // the initial state tree.\n\n\n        dispatch({\n          type: ActionTypes.INIT\n        });\n        return _ref2 = {\n          dispatch: dispatch,\n          subscribe: subscribe,\n          getState: getState,\n          replaceReducer: replaceReducer\n        }, _ref2[_symbolObservable2['default']] = observable, _ref2;\n      }\n    }, {\n      \"lodash/isPlainObject\": 20,\n      \"symbol-observable\": 33\n    }],\n    28: [function (require, module, exports) {\n      (function (process) {\n        'use strict';\n\n        exports.__esModule = true;\n        exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\n        var _createStore = require('./createStore');\n\n        var _createStore2 = _interopRequireDefault(_createStore);\n\n        var _combineReducers = require('./combineReducers');\n\n        var _combineReducers2 = _interopRequireDefault(_combineReducers);\n\n        var _bindActionCreators = require('./bindActionCreators');\n\n        var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\n        var _applyMiddleware = require('./applyMiddleware');\n\n        var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\n        var _compose = require('./compose');\n\n        var _compose2 = _interopRequireDefault(_compose);\n\n        var _warning = require('./utils/warning');\n\n        var _warning2 = _interopRequireDefault(_warning);\n\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            'default': obj\n          };\n        }\n        /*\n        * This is a dummy function to check if the function name has been altered by minification.\n        * If the function has been minified and NODE_ENV !== 'production', warn the user.\n        */\n\n\n        function isCrushed() {}\n\n        if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n          (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n        }\n\n        exports.createStore = _createStore2['default'];\n        exports.combineReducers = _combineReducers2['default'];\n        exports.bindActionCreators = _bindActionCreators2['default'];\n        exports.applyMiddleware = _applyMiddleware2['default'];\n        exports.compose = _compose2['default'];\n      }).call(this, require('_process'));\n    }, {\n      \"./applyMiddleware\": 23,\n      \"./bindActionCreators\": 24,\n      \"./combineReducers\": 25,\n      \"./compose\": 26,\n      \"./createStore\": 27,\n      \"./utils/warning\": 29,\n      \"_process\": 21\n    }],\n    29: [function (require, module, exports) {\n      'use strict';\n\n      exports.__esModule = true;\n      exports['default'] = warning;\n      /**\n       * Prints a warning in the console if it exists.\n       *\n       * @param {String} message The warning message.\n       * @returns {void}\n       */\n\n      function warning(message) {\n        /* eslint-disable no-console */\n        if (typeof console !== 'undefined' && typeof console.error === 'function') {\n          console.error(message);\n        }\n        /* eslint-enable no-console */\n\n\n        try {\n          // This error was thrown as a convenience so that if you enable\n          // \"break on all exceptions\" in your console,\n          // it would pause the execution at this line.\n          throw new Error(message);\n          /* eslint-disable no-empty */\n        } catch (e) {}\n        /* eslint-enable no-empty */\n\n      }\n    }, {}],\n    30: [function (require, module, exports) {\n      'use strict';\n      /**\n       * A typeahead component for inputs\n       * @class Suggestions\n       *\n       * @param {HTMLInputElement} el A valid HTML input element\n       * @param {Array} data An array of data used for results\n       * @param {Object} options\n       * @param {Number} [options.limit=5] Max number of results to display in the auto suggest list.\n       * @param {Number} [options.minLength=2] Number of characters typed into an input to trigger suggestions.\n       * @return {Suggestions} `this`\n       * @example\n       * // in the browser\n       * var input = document.querySelector('input');\n       * var data = [\n       *   'Roy Eldridge',\n       *   'Roy Hargrove',\n       *   'Rex Stewart'\n       * ];\n       *\n       * new Suggestions(input, data);\n       *\n       * // with options\n       * var input = document.querySelector('input');\n       * var data = [{\n       *   name: 'Roy Eldridge',\n       *   year: 1911\n       * }, {\n       *   name: 'Roy Hargrove',\n       *   year: 1969\n       * }, {\n       *   name: 'Rex Stewart',\n       *   year: 1907\n       * }];\n       *\n       * var typeahead = new Suggestions(input, data, {\n       *   filter: false, // Disable filtering\n       *   minLength: 3, // Number of characters typed into an input to trigger suggestions.\n       *   limit: 3 //  Max number of results to display.\n       * });\n       *\n       * // As we're passing an object of an arrays as data, override\n       * // `getItemValue` by specifying the specific property to search on.\n       * typeahead.getItemValue = function(item) { return item.name };\n       *\n       * input.addEventListener('change', function() {\n       *   console.log(typeahead.selected); // Current selected item.\n       * });\n       *\n       * // With browserify\n       * var Suggestions = require('suggestions');\n       *\n       * new Suggestions(input, data);\n       */\n\n      var Suggestions = require('./src/suggestions');\n\n      window.Suggestions = module.exports = Suggestions;\n    }, {\n      \"./src/suggestions\": 32\n    }],\n    31: [function (require, module, exports) {\n      'Use strict';\n\n      var List = function (component) {\n        this.component = component;\n        this.items = [];\n        this.active = 0;\n        this.element = document.createElement('ul');\n        this.element.className = 'suggestions'; // selectingListItem is set to true in the time between the mousedown and mouseup when clicking an item in the list\n        // mousedown on a list item will cause the input to blur which normally hides the list, so this flag is used to keep\n        // the list open until the mouseup\n\n        this.selectingListItem = false;\n        component.el.parentNode.insertBefore(this.element, component.el.nextSibling);\n        return this;\n      };\n\n      List.prototype.show = function () {\n        this.element.style.display = 'block';\n      };\n\n      List.prototype.hide = function () {\n        this.element.style.display = 'none';\n      };\n\n      List.prototype.add = function (item) {\n        this.items.push(item);\n      };\n\n      List.prototype.clear = function () {\n        this.items = [];\n        this.active = 0;\n      };\n\n      List.prototype.isEmpty = function () {\n        return !this.items.length;\n      };\n\n      List.prototype.draw = function () {\n        this.element.innerHTML = '';\n\n        if (this.items.length === 0) {\n          this.hide();\n          return;\n        }\n\n        for (var i = 0; i < this.items.length; i++) {\n          this.drawItem(this.items[i], this.active === i);\n        }\n\n        this.show();\n      };\n\n      List.prototype.drawItem = function (item, active) {\n        var li = document.createElement('li'),\n            a = document.createElement('a');\n        if (active) li.className += ' active';\n        a.innerHTML = item.string;\n        li.appendChild(a);\n        this.element.appendChild(li);\n        li.addEventListener('mousedown', function () {\n          this.selectingListItem = true;\n        }.bind(this));\n        li.addEventListener('mouseup', function () {\n          this.handleMouseUp.call(this, item);\n        }.bind(this));\n      };\n\n      List.prototype.handleMouseUp = function (item) {\n        this.selectingListItem = false;\n        this.component.value(item.original);\n        this.clear();\n        this.draw();\n      };\n\n      List.prototype.move = function (index) {\n        this.active = index;\n        this.draw();\n      };\n\n      List.prototype.previous = function () {\n        this.move(this.active === 0 ? this.items.length - 1 : this.active - 1);\n      };\n\n      List.prototype.next = function () {\n        this.move(this.active === this.items.length - 1 ? 0 : this.active + 1);\n      };\n\n      module.exports = List;\n    }, {}],\n    32: [function (require, module, exports) {\n      'use strict';\n\n      var extend = require('xtend');\n\n      var fuzzy = require('fuzzy');\n\n      var List = require('./list');\n\n      var Suggestions = function (el, data, options) {\n        options = options || {};\n        this.options = extend({\n          minLength: 2,\n          limit: 5,\n          filter: true\n        }, options);\n        this.el = el;\n        this.data = data || [];\n        this.list = new List(this);\n        this.query = '';\n        this.selected = null;\n        this.list.draw();\n        this.el.addEventListener('keyup', function (e) {\n          this.handleKeyUp(e.keyCode);\n        }.bind(this), false);\n        this.el.addEventListener('keydown', function (e) {\n          this.handleKeyDown(e);\n        }.bind(this));\n        this.el.addEventListener('focus', function () {\n          this.handleFocus();\n        }.bind(this));\n        this.el.addEventListener('blur', function () {\n          this.handleBlur();\n        }.bind(this));\n        this.el.addEventListener('paste', function (e) {\n          this.handlePaste(e);\n        }.bind(this));\n        return this;\n      };\n\n      Suggestions.prototype.handleKeyUp = function (keyCode) {\n        // 40 - DOWN\n        // 38 - UP\n        // 27 - ESC\n        // 13 - ENTER\n        // 9 - TAB\n        if (keyCode === 40 || keyCode === 38 || keyCode === 27 || keyCode === 13 || keyCode === 9) return;\n        this.handleInputChange(this.el.value);\n      };\n\n      Suggestions.prototype.handleKeyDown = function (e) {\n        switch (e.keyCode) {\n          case 13: // ENTER\n\n          case 9:\n            // TAB\n            e.preventDefault();\n\n            if (!this.list.isEmpty()) {\n              this.value(this.list.items[this.list.active].original);\n              this.list.hide();\n            }\n\n            break;\n\n          case 27:\n            // ESC\n            if (!this.list.isEmpty()) this.list.hide();\n            break;\n\n          case 38:\n            // UP\n            this.list.previous();\n            break;\n\n          case 40:\n            // DOWN\n            this.list.next();\n            break;\n        }\n      };\n\n      Suggestions.prototype.handleBlur = function () {\n        if (!this.list.selectingListItem) {\n          this.list.hide();\n        }\n      };\n\n      Suggestions.prototype.handlePaste = function (e) {\n        if (e.clipboardData) {\n          this.handleInputChange(e.clipboardData.getData('Text'));\n        } else {\n          var self = this;\n          setTimeout(function () {\n            self.handleInputChange(e.target.value);\n          }, 100);\n        }\n      };\n\n      Suggestions.prototype.handleInputChange = function (query) {\n        this.query = this.normalize(query);\n        this.list.clear();\n\n        if (this.query.length < this.options.minLength) {\n          this.list.draw();\n          return;\n        }\n\n        this.getCandidates(function (data) {\n          for (var i = 0; i < data.length; i++) {\n            this.list.add(data[i]);\n            if (i === this.options.limit - 1) break;\n          }\n\n          this.list.draw();\n        }.bind(this));\n      };\n\n      Suggestions.prototype.handleFocus = function () {\n        if (!this.list.isEmpty()) this.list.show();\n        this.list.selectingListItem = false;\n      };\n      /**\n       * Update data previously passed\n       *\n       * @param {Array} revisedData\n       */\n\n\n      Suggestions.prototype.update = function (revisedData) {\n        this.data = revisedData;\n        this.handleKeyUp();\n      };\n      /**\n       * Clears data\n       */\n\n\n      Suggestions.prototype.clear = function () {\n        this.data = [];\n        this.list.clear();\n      };\n      /**\n       * Normalize the results list and input value for matching\n       *\n       * @param {String} value\n       * @return {String}\n       */\n\n\n      Suggestions.prototype.normalize = function (value) {\n        value = value.toLowerCase();\n        return value;\n      };\n      /**\n       * Evaluates whether an array item qualifies as a match with the current query\n       *\n       * @param {String} candidate a possible item from the array passed\n       * @param {String} query the current query\n       * @return {Boolean}\n       */\n\n\n      Suggestions.prototype.match = function (candidate, query) {\n        return candidate.indexOf(query) > -1;\n      };\n\n      Suggestions.prototype.value = function (value) {\n        this.selected = value;\n        this.el.value = this.getItemValue(value);\n\n        if (document.createEvent) {\n          var e = document.createEvent('HTMLEvents');\n          e.initEvent('change', true, false);\n          this.el.dispatchEvent(e);\n        } else {\n          this.el.fireEvent('onchange');\n        }\n      };\n\n      Suggestions.prototype.getCandidates = function (callback) {\n        var options = {\n          pre: '<strong>',\n          post: '</strong>',\n          extract: function (d) {\n            return this.getItemValue(d);\n          }.bind(this)\n        };\n        var results = this.options.filter ? fuzzy.filter(this.query, this.data, options) : this.data.map(function (d) {\n          var boldString = this.getItemValue(d);\n          var indexString = this.normalize(boldString);\n          var indexOfQuery = indexString.lastIndexOf(this.query);\n\n          while (indexOfQuery > -1) {\n            var endIndexOfQuery = indexOfQuery + this.query.length;\n            boldString = boldString.slice(0, indexOfQuery) + '<strong>' + boldString.slice(indexOfQuery, endIndexOfQuery) + '</strong>' + boldString.slice(endIndexOfQuery);\n            indexOfQuery = indexString.slice(0, indexOfQuery).lastIndexOf(this.query);\n          }\n\n          return {\n            original: d,\n            string: boldString\n          };\n        }.bind(this));\n        callback(results);\n      };\n      /**\n       * For a given item in the data array, return what should be used as the candidate string\n       *\n       * @param {Object|String} item an item from the data array\n       * @return {String} item\n       */\n\n\n      Suggestions.prototype.getItemValue = function (item) {\n        return item;\n      };\n\n      module.exports = Suggestions;\n    }, {\n      \"./list\": 31,\n      \"fuzzy\": 4,\n      \"xtend\": 37\n    }],\n    33: [function (require, module, exports) {\n      (function (global) {\n        'use strict';\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        var _ponyfill = require('./ponyfill.js');\n\n        var _ponyfill2 = _interopRequireDefault(_ponyfill);\n\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            'default': obj\n          };\n        }\n\n        var root;\n        /* global window */\n\n        if (typeof self !== 'undefined') {\n          root = self;\n        } else if (typeof window !== 'undefined') {\n          root = window;\n        } else if (typeof global !== 'undefined') {\n          root = global;\n        } else if (typeof module !== 'undefined') {\n          root = module;\n        } else {\n          root = Function('return this')();\n        }\n\n        var result = (0, _ponyfill2['default'])(root);\n        exports['default'] = result;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"./ponyfill.js\": 34\n    }],\n    34: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports['default'] = symbolObservablePonyfill;\n\n      function symbolObservablePonyfill(root) {\n        var result;\n        var _Symbol = root.Symbol;\n\n        if (typeof _Symbol === 'function') {\n          if (_Symbol.observable) {\n            result = _Symbol.observable;\n          } else {\n            result = _Symbol('observable');\n            _Symbol.observable = result;\n          }\n        } else {\n          result = '@@observable';\n        }\n\n        return result;\n      }\n\n      ;\n    }, {}],\n    35: [function (require, module, exports) {\n      var each = require('turf-meta').coordEach;\n      /**\n       * Takes any {@link GeoJSON} object, calculates the extent of all input features, and returns a bounding box.\n       *\n       * @module turf/extent\n       * @category measurement\n       * @param {GeoJSON} input any valid GeoJSON Object\n       * @return {Array<number>} the bounding box of `input` given\n       * as an array in WSEN order (west, south, east, north)\n       * @example\n       * var input = {\n       *   \"type\": \"FeatureCollection\",\n       *   \"features\": [\n       *     {\n       *       \"type\": \"Feature\",\n       *       \"properties\": {},\n       *       \"geometry\": {\n       *         \"type\": \"Point\",\n       *         \"coordinates\": [114.175329, 22.2524]\n       *       }\n       *     }, {\n       *       \"type\": \"Feature\",\n       *       \"properties\": {},\n       *       \"geometry\": {\n       *         \"type\": \"Point\",\n       *         \"coordinates\": [114.170007, 22.267969]\n       *       }\n       *     }, {\n       *       \"type\": \"Feature\",\n       *       \"properties\": {},\n       *       \"geometry\": {\n       *         \"type\": \"Point\",\n       *         \"coordinates\": [114.200649, 22.274641]\n       *       }\n       *     }, {\n       *       \"type\": \"Feature\",\n       *       \"properties\": {},\n       *       \"geometry\": {\n       *         \"type\": \"Point\",\n       *         \"coordinates\": [114.186744, 22.265745]\n       *       }\n       *     }\n       *   ]\n       * };\n       *\n       * var bbox = turf.extent(input);\n       *\n       * var bboxPolygon = turf.bboxPolygon(bbox);\n       *\n       * var resultFeatures = input.features.concat(bboxPolygon);\n       * var result = {\n       *   \"type\": \"FeatureCollection\",\n       *   \"features\": resultFeatures\n       * };\n       *\n       * //=result\n       */\n\n\n      module.exports = function (layer) {\n        var extent = [Infinity, Infinity, -Infinity, -Infinity];\n        each(layer, function (coord) {\n          if (extent[0] > coord[0]) extent[0] = coord[0];\n          if (extent[1] > coord[1]) extent[1] = coord[1];\n          if (extent[2] < coord[0]) extent[2] = coord[0];\n          if (extent[3] < coord[1]) extent[3] = coord[1];\n        });\n        return extent;\n      };\n    }, {\n      \"turf-meta\": 36\n    }],\n    36: [function (require, module, exports) {\n      /**\n       * Lazily iterate over coordinates in any GeoJSON object, similar to\n       * Array.forEach.\n       *\n       * @param {Object} layer any GeoJSON object\n       * @param {Function} callback a method that takes (value)\n       * @param {boolean=} excludeWrapCoord whether or not to include\n       * the final coordinate of LinearRings that wraps the ring in its iteration.\n       * @example\n       * var point = { type: 'Point', coordinates: [0, 0] };\n       * coordEach(point, function(coords) {\n       *   // coords is equal to [0, 0]\n       * });\n       */\n      function coordEach(layer, callback, excludeWrapCoord) {\n        var i,\n            j,\n            k,\n            g,\n            geometry,\n            stopG,\n            coords,\n            geometryMaybeCollection,\n            wrapShrink = 0,\n            isGeometryCollection,\n            isFeatureCollection = layer.type === 'FeatureCollection',\n            isFeature = layer.type === 'Feature',\n            stop = isFeatureCollection ? layer.features.length : 1; // This logic may look a little weird. The reason why it is that way\n        // is because it's trying to be fast. GeoJSON supports multiple kinds\n        // of objects at its root: FeatureCollection, Features, Geometries.\n        // This function has the responsibility of handling all of them, and that\n        // means that some of the `for` loops you see below actually just don't apply\n        // to certain inputs. For instance, if you give this just a\n        // Point geometry, then both loops are short-circuited and all we do\n        // is gradually rename the input until it's called 'geometry'.\n        //\n        // This also aims to allocate as few resources as possible: just a\n        // few numbers and booleans, rather than any temporary arrays as would\n        // be required with the normalization approach.\n\n        for (i = 0; i < stop; i++) {\n          geometryMaybeCollection = isFeatureCollection ? layer.features[i].geometry : isFeature ? layer.geometry : layer;\n          isGeometryCollection = geometryMaybeCollection.type === 'GeometryCollection';\n          stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n          for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n            coords = geometry.coordinates;\n            wrapShrink = excludeWrapCoord && (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') ? 1 : 0;\n\n            if (geometry.type === 'Point') {\n              callback(coords);\n            } else if (geometry.type === 'LineString' || geometry.type === 'MultiPoint') {\n              for (j = 0; j < coords.length; j++) callback(coords[j]);\n            } else if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n              for (j = 0; j < coords.length; j++) for (k = 0; k < coords[j].length - wrapShrink; k++) callback(coords[j][k]);\n            } else if (geometry.type === 'MultiPolygon') {\n              for (j = 0; j < coords.length; j++) for (k = 0; k < coords[j].length; k++) for (l = 0; l < coords[j][k].length - wrapShrink; l++) callback(coords[j][k][l]);\n            } else {\n              throw new Error('Unknown Geometry Type');\n            }\n          }\n        }\n      }\n\n      module.exports.coordEach = coordEach;\n      /**\n       * Lazily reduce coordinates in any GeoJSON object into a single value,\n       * similar to how Array.reduce works. However, in this case we lazily run\n       * the reduction, so an array of all coordinates is unnecessary.\n       *\n       * @param {Object} layer any GeoJSON object\n       * @param {Function} callback a method that takes (memo, value) and returns\n       * a new memo\n       * @param {boolean=} excludeWrapCoord whether or not to include\n       * the final coordinate of LinearRings that wraps the ring in its iteration.\n       * @param {*} memo the starting value of memo: can be any type.\n       */\n\n      function coordReduce(layer, callback, memo, excludeWrapCoord) {\n        coordEach(layer, function (coord) {\n          memo = callback(memo, coord);\n        }, excludeWrapCoord);\n        return memo;\n      }\n\n      module.exports.coordReduce = coordReduce;\n      /**\n       * Lazily iterate over property objects in any GeoJSON object, similar to\n       * Array.forEach.\n       *\n       * @param {Object} layer any GeoJSON object\n       * @param {Function} callback a method that takes (value)\n       * @example\n       * var point = { type: 'Feature', geometry: null, properties: { foo: 1 } };\n       * propEach(point, function(props) {\n       *   // props is equal to { foo: 1}\n       * });\n       */\n\n      function propEach(layer, callback) {\n        var i;\n\n        switch (layer.type) {\n          case 'FeatureCollection':\n            features = layer.features;\n\n            for (i = 0; i < layer.features.length; i++) {\n              callback(layer.features[i].properties);\n            }\n\n            break;\n\n          case 'Feature':\n            callback(layer.properties);\n            break;\n        }\n      }\n\n      module.exports.propEach = propEach;\n      /**\n       * Lazily reduce properties in any GeoJSON object into a single value,\n       * similar to how Array.reduce works. However, in this case we lazily run\n       * the reduction, so an array of all properties is unnecessary.\n       *\n       * @param {Object} layer any GeoJSON object\n       * @param {Function} callback a method that takes (memo, coord) and returns\n       * a new memo\n       * @param {*} memo the starting value of memo: can be any type.\n       */\n\n      function propReduce(layer, callback, memo) {\n        propEach(layer, function (prop) {\n          memo = callback(memo, prop);\n        });\n        return memo;\n      }\n\n      module.exports.propReduce = propReduce;\n    }, {}],\n    37: [function (require, module, exports) {\n      module.exports = extend;\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n      function extend() {\n        var target = {};\n\n        for (var i = 0; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      }\n    }, {}],\n    38: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.queryOrigin = queryOrigin;\n      exports.queryDestination = queryDestination;\n      exports.queryOriginCoordinates = queryOriginCoordinates;\n      exports.queryDestinationCoordinates = queryDestinationCoordinates;\n      exports.clearOrigin = clearOrigin;\n      exports.clearDestination = clearDestination;\n      exports.setOptions = setOptions;\n      exports.hoverMarker = hoverMarker;\n      exports.setRouteIndex = setRouteIndex;\n      exports.createOrigin = createOrigin;\n      exports.createDestination = createDestination;\n      exports.setProfile = setProfile;\n      exports.reverse = reverse;\n      exports.setOriginFromCoordinates = setOriginFromCoordinates;\n      exports.setDestinationFromCoordinates = setDestinationFromCoordinates;\n      exports.addWaypoint = addWaypoint;\n      exports.setWaypoint = setWaypoint;\n      exports.removeWaypoint = removeWaypoint;\n      exports.eventSubscribe = eventSubscribe;\n      exports.eventEmit = eventEmit;\n\n      var _action_types = require('../constants/action_types');\n\n      var types = _interopRequireWildcard(_action_types);\n\n      var _utils = require('../utils');\n\n      var _utils2 = _interopRequireDefault(_utils);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n          return obj;\n        } else {\n          var newObj = {};\n\n          if (obj != null) {\n            for (var key in obj) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n          }\n\n          newObj.default = obj;\n          return newObj;\n        }\n      }\n\n      var request = new XMLHttpRequest();\n\n      function originPoint(coordinates) {\n        return function (dispatch) {\n          var origin = _utils2.default.createPoint(coordinates, {\n            id: 'origin',\n            'marker-symbol': 'A'\n          });\n\n          dispatch({\n            type: types.ORIGIN,\n            origin: origin\n          });\n          dispatch(eventEmit('origin', {\n            feature: origin\n          }));\n        };\n      }\n\n      function destinationPoint(coordinates) {\n        return function (dispatch) {\n          var destination = _utils2.default.createPoint(coordinates, {\n            id: 'destination',\n            'marker-symbol': 'B'\n          });\n\n          dispatch({\n            type: types.DESTINATION,\n            destination: destination\n          });\n          dispatch(eventEmit('destination', {\n            feature: destination\n          }));\n        };\n      }\n\n      function setDirections(directions) {\n        return function (dispatch) {\n          dispatch({\n            type: types.DIRECTIONS,\n            directions: directions\n          });\n          dispatch(eventEmit('route', {\n            route: directions\n          }));\n        };\n      }\n\n      function updateWaypoints(waypoints) {\n        return {\n          type: types.WAYPOINTS,\n          waypoints: waypoints\n        };\n      }\n\n      function setHoverMarker(feature) {\n        return {\n          type: types.HOVER_MARKER,\n          hoverMarker: feature\n        };\n      }\n\n      function fetchDirections() {\n        return function (dispatch, getState) {\n          var _getState = getState(),\n              api = _getState.api,\n              accessToken = _getState.accessToken,\n              routeIndex = _getState.routeIndex,\n              profile = _getState.profile,\n              alternatives = _getState.alternatives,\n              congestion = _getState.congestion,\n              destination = _getState.destination,\n              language = _getState.language; // if there is no destination set, do not make request because it will fail\n\n\n          if (!(destination && destination.geometry)) return;\n          var query = buildDirectionsQuery(getState); // Request params\n\n          var options = [];\n          options.push('geometries=polyline');\n          if (alternatives) options.push('alternatives=true');\n          if (congestion) options.push('annotations=congestion');\n          options.push('steps=true');\n          options.push('overview=full');\n          if (language) options.push('language=' + language);\n          if (accessToken) options.push('access_token=' + accessToken);\n          request.abort();\n          request.open('GET', '' + api + profile + '/' + query + '.json?' + options.join('&'), true);\n\n          request.onload = function () {\n            if (request.status >= 200 && request.status < 400) {\n              var data = JSON.parse(request.responseText);\n\n              if (data.error) {\n                dispatch(setDirections([]));\n                return dispatch(setError(data.error));\n              }\n\n              dispatch(setError(null));\n              if (!data.routes[routeIndex]) dispatch(setRouteIndex(0));\n              dispatch(setDirections(data.routes)); // Revise origin / destination points\n\n              dispatch(originPoint(data.waypoints[0].location));\n              dispatch(destinationPoint(data.waypoints[data.waypoints.length - 1].location));\n            } else {\n              dispatch(setDirections([]));\n              return dispatch(setError(JSON.parse(request.responseText).message));\n            }\n          };\n\n          request.onerror = function () {\n            dispatch(setDirections([]));\n            return dispatch(setError(JSON.parse(request.responseText).message));\n          };\n\n          request.send();\n        };\n      }\n      /*\n       * Build query used to fetch directions\n       *\n       * @param {Function} state\n       */\n\n\n      function buildDirectionsQuery(state) {\n        var _state = state(),\n            origin = _state.origin,\n            destination = _state.destination,\n            waypoints = _state.waypoints;\n\n        var query = [];\n        query.push(origin.geometry.coordinates.join(','));\n        query.push(';'); // Add any waypoints.\n\n        if (waypoints.length) {\n          waypoints.forEach(function (waypoint) {\n            query.push(waypoint.geometry.coordinates.join(','));\n            query.push(';');\n          });\n        }\n\n        query.push(destination.geometry.coordinates.join(','));\n        return encodeURIComponent(query.join(''));\n      }\n\n      function normalizeWaypoint(waypoint) {\n        var properties = {\n          id: 'waypoint'\n        };\n        return Object.assign(waypoint, {\n          properties: waypoint.properties ? Object.assign(waypoint.properties, properties) : properties\n        });\n      }\n\n      function setError(error) {\n        return function (dispatch) {\n          dispatch({\n            type: 'ERROR',\n            error: error\n          });\n          if (error) dispatch(eventEmit('error', {\n            error: error\n          }));\n        };\n      }\n\n      function queryOrigin(query) {\n        return {\n          type: types.ORIGIN_QUERY,\n          query: query\n        };\n      }\n\n      function queryDestination(query) {\n        return {\n          type: types.DESTINATION_QUERY,\n          query: query\n        };\n      }\n\n      function queryOriginCoordinates(coords) {\n        return {\n          type: types.ORIGIN_FROM_COORDINATES,\n          coordinates: coords\n        };\n      }\n\n      function queryDestinationCoordinates(coords) {\n        return {\n          type: types.DESTINATION_FROM_COORDINATES,\n          coordinates: coords\n        };\n      }\n\n      function clearOrigin() {\n        return function (dispatch) {\n          dispatch({\n            type: types.ORIGIN_CLEAR\n          });\n          dispatch(eventEmit('clear', {\n            type: 'origin'\n          }));\n          dispatch(setError(null));\n        };\n      }\n\n      function clearDestination() {\n        return function (dispatch) {\n          dispatch({\n            type: types.DESTINATION_CLEAR\n          });\n          dispatch(eventEmit('clear', {\n            type: 'destination'\n          }));\n          dispatch(setError(null));\n        };\n      }\n\n      function setOptions(options) {\n        return {\n          type: types.SET_OPTIONS,\n          options: options\n        };\n      }\n\n      function hoverMarker(coordinates) {\n        return function (dispatch) {\n          var feature = coordinates ? _utils2.default.createPoint(coordinates, {\n            id: 'hover'\n          }) : {};\n          dispatch(setHoverMarker(feature));\n        };\n      }\n\n      function setRouteIndex(routeIndex) {\n        return {\n          type: types.ROUTE_INDEX,\n          routeIndex: routeIndex\n        };\n      }\n\n      function createOrigin(coordinates) {\n        return function (dispatch, getState) {\n          var _getState2 = getState(),\n              destination = _getState2.destination;\n\n          dispatch(originPoint(coordinates));\n          if (destination.geometry) dispatch(fetchDirections());\n        };\n      }\n\n      function createDestination(coordinates) {\n        return function (dispatch, getState) {\n          var _getState3 = getState(),\n              origin = _getState3.origin;\n\n          dispatch(destinationPoint(coordinates));\n          if (origin.geometry) dispatch(fetchDirections());\n        };\n      }\n\n      function setProfile(profile) {\n        return function (dispatch, getState) {\n          var _getState4 = getState(),\n              origin = _getState4.origin,\n              destination = _getState4.destination;\n\n          dispatch({\n            type: types.DIRECTIONS_PROFILE,\n            profile: profile\n          });\n          dispatch(eventEmit('profile', {\n            profile: profile\n          }));\n          if (origin.geometry && destination.geometry) dispatch(fetchDirections());\n        };\n      }\n\n      function reverse() {\n        return function (dispatch, getState) {\n          var state = getState();\n          if (state.destination.geometry) dispatch(originPoint(state.destination.geometry.coordinates));\n          if (state.origin.geometry) dispatch(destinationPoint(state.origin.geometry.coordinates));\n          if (state.origin.geometry && state.destination.geometry) dispatch(fetchDirections());\n        };\n      }\n      /*\n       * Set origin from coordinates\n       *\n       * @param {Array<number>} coordinates [lng, lat] array.\n       */\n\n\n      function setOriginFromCoordinates(coords) {\n        return function (dispatch) {\n          if (!_utils2.default.validCoords(coords)) coords = [_utils2.default.wrap(coords[0]), _utils2.default.wrap(coords[1])];\n          if (isNaN(coords[0]) && isNaN(coords[1])) return dispatch(setError(new Error('Coordinates are not valid')));\n          dispatch(queryOriginCoordinates(coords));\n          dispatch(createOrigin(coords));\n        };\n      }\n      /*\n       * Set destination from coordinates\n       *\n       * @param {Array<number>} coords [lng, lat] array.\n       */\n\n\n      function setDestinationFromCoordinates(coords) {\n        return function (dispatch) {\n          if (!_utils2.default.validCoords(coords)) coords = [_utils2.default.wrap(coords[0]), _utils2.default.wrap(coords[1])];\n          if (isNaN(coords[0]) && isNaN(coords[1])) return dispatch(setError(new Error('Coordinates are not valid')));\n          dispatch(createDestination(coords));\n          dispatch(queryDestinationCoordinates(coords));\n        };\n      }\n\n      function addWaypoint(index, waypoint) {\n        return function (dispatch, getState) {\n          var _getState5 = getState(),\n              destination = _getState5.destination,\n              waypoints = _getState5.waypoints;\n\n          waypoints.splice(index, 0, normalizeWaypoint(waypoint));\n          dispatch(updateWaypoints(waypoints));\n          if (destination.geometry) dispatch(fetchDirections());\n        };\n      }\n\n      function setWaypoint(index, waypoint) {\n        return function (dispatch, getState) {\n          var _getState6 = getState(),\n              destination = _getState6.destination,\n              waypoints = _getState6.waypoints;\n\n          waypoints[index] = normalizeWaypoint(waypoint);\n          dispatch(updateWaypoints(waypoints));\n          if (destination.geometry) dispatch(fetchDirections());\n        };\n      }\n\n      function removeWaypoint(waypoint) {\n        return function (dispatch, getState) {\n          var _getState7 = getState(),\n              destination = _getState7.destination,\n              waypoints = _getState7.waypoints;\n\n          waypoints = waypoints.filter(function (way) {\n            return !_utils2.default.coordinateMatch(way, waypoint);\n          });\n          dispatch(updateWaypoints(waypoints));\n          if (destination.geometry) dispatch(fetchDirections());\n        };\n      }\n\n      function eventSubscribe(type, fn) {\n        return function (dispatch, getState) {\n          var _getState8 = getState(),\n              events = _getState8.events;\n\n          events[type] = events[type] || [];\n          events[type].push(fn);\n          return {\n            type: types.EVENTS,\n            events: events\n          };\n        };\n      }\n\n      function eventEmit(type, data) {\n        var _this = this;\n\n        return function (dispatch, getState) {\n          var _getState9 = getState(),\n              events = _getState9.events;\n\n          if (!events[type]) {\n            return {\n              type: types.EVENTS,\n              events: events\n            };\n          }\n\n          var listeners = events[type].slice();\n\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].call(_this, data);\n          }\n        };\n      }\n    }, {\n      \"../constants/action_types\": 39,\n      \"../utils\": 47\n    }],\n    39: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var DESTINATION = exports.DESTINATION = 'DESTINATION';\n      var DESTINATION_CLEAR = exports.DESTINATION_CLEAR = 'DESTINATION_CLEAR';\n      var DESTINATION_QUERY = exports.DESTINATION_QUERY = 'DESTINATION_QUERY';\n      var DESTINATION_FROM_COORDINATES = exports.DESTINATION_FROM_COORDINATES = 'DESTINATION_FROM_COORDINATES';\n      var DIRECTIONS = exports.DIRECTIONS = 'DIRECTIONS';\n      var DIRECTIONS_PROFILE = exports.DIRECTIONS_PROFILE = 'DIRECTIONS_PROFILE';\n      var EVENTS = exports.EVENTS = 'EVENTS';\n      var ERROR = exports.ERROR = 'ERROR';\n      var HOVER_MARKER = exports.HOVER_MARKER = 'HOVER_MARKER';\n      var ORIGIN = exports.ORIGIN = 'ORIGIN';\n      var ORIGIN_CLEAR = exports.ORIGIN_CLEAR = 'ORIGIN_CLEAR';\n      var ORIGIN_QUERY = exports.ORIGIN_QUERY = 'ORIGIN_QUERY';\n      var ORIGIN_FROM_COORDINATES = exports.ORIGIN_FROM_COORDINATES = 'ORIGIN_FROM_COORDINATES';\n      var ROUTE_INDEX = exports.ROUTE_INDEX = 'ROUTE_INDEX';\n      var SET_OPTIONS = exports.SET_OPTIONS = 'SET_OPTIONS';\n      var WAYPOINTS = exports.WAYPOINTS = 'WAYPOINTS';\n    }, {}],\n    40: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _suggestions = require('suggestions');\n\n      var _suggestions2 = _interopRequireDefault(_suggestions);\n\n      var _lodash = require('lodash.debounce');\n\n      var _lodash2 = _interopRequireDefault(_lodash);\n\n      var _events = require('events');\n\n      var _utils = require('../utils');\n\n      var _utils2 = _interopRequireDefault(_utils);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      } // Geocoder - this slightly mimicks the mapboxl-gl-geocoder but isn't an exact replica.\n      // Once gl-js plugins can be added to custom divs, we should be able to require mapbox-gl-geocoder\n      // instead of including it here\n\n\n      var Geocoder = function () {\n        function Geocoder(options) {\n          _classCallCheck(this, Geocoder);\n\n          this._ev = new _events.EventEmitter();\n          this.options = options;\n          this.api = options && options.api || 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n        }\n\n        _createClass(Geocoder, [{\n          key: 'onAdd',\n          value: function onAdd(map) {\n            this._map = map;\n            this.request = new XMLHttpRequest(); // Template\n\n            var el = document.createElement('div');\n            el.className = 'mapboxgl-ctrl-geocoder';\n            var icon = document.createElement('span');\n            icon.className = 'geocoder-icon geocoder-icon-search';\n            var input = this._inputEl = document.createElement('input');\n            input.type = 'text';\n            input.placeholder = this.options.placeholder;\n            input.addEventListener('keydown', (0, _lodash2.default)(function (e) {\n              if (!e.target.value) return this._clearEl.classList.remove('active'); // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n\n              if (e.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n              this._queryFromInput(e.target.value);\n            }.bind(this)), 200);\n            input.addEventListener('change', function (e) {\n              if (e.target.value) this._clearEl.classList.add('active');\n              var selected = this._typeahead.selected;\n\n              if (selected) {\n                if (this.options.flyTo) {\n                  if (selected.bbox && selected.context && selected.context.length <= 3 || selected.bbox && !selected.context) {\n                    var bbox = selected.bbox;\n                    map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]]);\n                  } else {\n                    map.flyTo({\n                      center: selected.center,\n                      zoom: this.options.zoom\n                    });\n                  }\n                }\n\n                this._input = selected;\n                this.fire('result', {\n                  result: selected\n                });\n              }\n            }.bind(this));\n            var actions = document.createElement('div');\n            actions.classList.add('geocoder-pin-right');\n            var clear = this._clearEl = document.createElement('button');\n            clear.className = 'geocoder-icon geocoder-icon-close';\n            clear.addEventListener('click', this._clear.bind(this));\n            var loading = this._loadingEl = document.createElement('span');\n            loading.className = 'geocoder-icon geocoder-icon-loading';\n            actions.appendChild(clear);\n            actions.appendChild(loading);\n            el.appendChild(icon);\n            el.appendChild(input);\n            el.appendChild(actions); // Override the control being added to control containers\n\n            if (this.options.container) this.options.position = false;\n            this._typeahead = new _suggestions2.default(input, [], {\n              filter: false\n            });\n\n            this._typeahead.getItemValue = function (item) {\n              return item.place_name;\n            };\n\n            return el;\n          }\n        }, {\n          key: '_geocode',\n          value: function _geocode(q, callback) {\n            this._loadingEl.classList.add('active');\n\n            this.fire('loading');\n            var geocodingOptions = this.options;\n            var exclude = ['placeholder', 'zoom', 'flyTo', 'accessToken'];\n            var options = Object.keys(this.options).filter(function (key) {\n              return exclude.indexOf(key) === -1;\n            }).map(function (key) {\n              return key + '=' + geocodingOptions[key];\n            });\n            var accessToken = this.options.accessToken ? this.options.accessToken : mapboxgl.accessToken;\n            options.push('access_token=' + accessToken);\n            this.request.abort();\n            this.request.open('GET', this.api + encodeURIComponent(q.trim()) + '.json?' + options.join('&'), true);\n\n            this.request.onload = function () {\n              this._loadingEl.classList.remove('active');\n\n              if (this.request.status >= 200 && this.request.status < 400) {\n                var data = JSON.parse(this.request.responseText);\n\n                if (data.features.length) {\n                  this._clearEl.classList.add('active');\n                } else {\n                  this._clearEl.classList.remove('active');\n\n                  this._typeahead.selected = null;\n                }\n\n                this.fire('results', {\n                  results: data.features\n                });\n\n                this._typeahead.update(data.features);\n\n                return callback(data.features);\n              } else {\n                this.fire('error', {\n                  error: JSON.parse(this.request.responseText).message\n                });\n              }\n            }.bind(this);\n\n            this.request.onerror = function () {\n              this._loadingEl.classList.remove('active');\n\n              this.fire('error', {\n                error: JSON.parse(this.request.responseText).message\n              });\n            }.bind(this);\n\n            this.request.send();\n          }\n        }, {\n          key: '_queryFromInput',\n          value: function _queryFromInput(q) {\n            q = q.trim();\n            if (!q) this._clear();\n\n            if (q.length > 2) {\n              this._geocode(q, function (results) {\n                this._results = results;\n              }.bind(this));\n            }\n          }\n        }, {\n          key: '_change',\n          value: function _change() {\n            var onChange = document.createEvent('HTMLEvents');\n            onChange.initEvent('change', true, false);\n\n            this._inputEl.dispatchEvent(onChange);\n          }\n        }, {\n          key: '_query',\n          value: function _query(input) {\n            if (!input) return;\n\n            if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.length) {\n              input = [_utils2.default.wrap(input[0]), _utils2.default.wrap(input[1])].join();\n            }\n\n            this._geocode(input, function (results) {\n              if (!results.length) return;\n              var result = results[0];\n              this._results = results;\n              this._typeahead.selected = result;\n              this._inputEl.value = result.place_name;\n\n              this._change();\n            }.bind(this));\n          }\n        }, {\n          key: '_setInput',\n          value: function _setInput(input) {\n            if (!input) return;\n\n            if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.length) {\n              input = [_utils2.default.roundWithOriginalPrecision(_utils2.default.wrap(input[0]), input[0]), _utils2.default.roundWithOriginalPrecision(_utils2.default.wrap(input[1]), input[1])].join();\n            } // Set input value to passed value and clear everything else.\n\n\n            this._inputEl.value = input;\n            this._input = null;\n            this._typeahead.selected = null;\n\n            this._typeahead.clear();\n\n            this._change();\n          }\n        }, {\n          key: '_clear',\n          value: function _clear() {\n            this._input = null;\n            this._inputEl.value = '';\n            this._typeahead.selected = null;\n\n            this._typeahead.clear();\n\n            this._change();\n\n            this._inputEl.focus();\n\n            this._clearEl.classList.remove('active');\n\n            this.fire('clear');\n          }\n        }, {\n          key: 'getResult',\n          value: function getResult() {\n            return this._input;\n          }\n          /**\n           * Set & query the input\n           * @param {Array|String} query An array of coordinates [lng, lat] or location name as a string.\n           * @returns {Geocoder} this\n           */\n\n        }, {\n          key: 'query',\n          value: function query(_query2) {\n            this._query(_query2);\n\n            return this;\n          }\n          /**\n           * Set input\n           * @param {Array|String} value An array of coordinates [lng, lat] or location name as a string. Calling this function just sets the input and does not trigger an API request.\n           * @returns {Geocoder} this\n           */\n\n        }, {\n          key: 'setInput',\n          value: function setInput(value) {\n            this._setInput(value);\n\n            return this;\n          }\n          /**\n           * Subscribe to events that happen within the plugin.\n           * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n           *\n           * - __clear__ `Emitted when the input is cleared`\n           * - __loading__ `Emitted when the geocoder is looking up a query`\n           * - __results__ `{ results } Fired when the geocoder returns a response`\n           * - __result__ `{ result } Fired when input is set`\n           * - __error__ `{ error } Error as string\n           * @param {Function} fn function that's called when the event is emitted.\n           * @returns {Geocoder} this;\n           */\n\n        }, {\n          key: 'on',\n          value: function on(type, fn) {\n            this._ev.on(type, fn);\n\n            return this;\n          }\n          /**\n           * Fire an event\n           * @param {String} type event name.\n           * @param {Object} data event data to pass to the function subscribed.\n           * @returns {Geocoder} this\n           */\n\n        }, {\n          key: 'fire',\n          value: function fire(type, data) {\n            this._ev.emit(type, data);\n\n            return this;\n          }\n          /**\n           * Remove an event\n           * @returns {Geocoder} this\n           * @param {String} type Event name.\n           * @param {Function} fn Function that should unsubscribe to the event emitted.\n           */\n\n        }, {\n          key: 'off',\n          value: function off(type, fn) {\n            this._ev.removeListener(type, fn);\n\n            return this;\n          }\n        }]);\n\n        return Geocoder;\n      }();\n\n      exports.default = Geocoder;\n      ;\n    }, {\n      \"../utils\": 47,\n      \"events\": 3,\n      \"lodash.debounce\": 7,\n      \"suggestions\": 30\n    }],\n    41: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _geocoder = require('./geocoder');\n\n      var _geocoder2 = _interopRequireDefault(_geocoder);\n\n      var _lodash = require('lodash.template');\n\n      var _lodash2 = _interopRequireDefault(_lodash);\n\n      var _lodash3 = require('lodash.isequal');\n\n      var _lodash4 = _interopRequireDefault(_lodash3);\n\n      var _turfExtent = require('turf-extent');\n\n      var _turfExtent2 = _interopRequireDefault(_turfExtent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      } // substack/brfs#39\n\n\n      var tmpl = (0, _lodash2.default)(\"<div class='mapbox-directions-component mapbox-directions-inputs'>\\n  <div class='mapbox-directions-component-keyline'>\\n    <div class='mapbox-directions-origin'>\\n      <label class='mapbox-form-label'>\\n        <span class='directions-icon directions-icon-depart'></span>\\n      </label>\\n      <div id='mapbox-directions-origin-input'></div>\\n    </div>\\n\\n    <button\\n      class='directions-icon directions-icon-reverse directions-reverse js-reverse-inputs'\\n      title='Reverse origin &amp; destination'>\\n    </button>\\n\\n    <div class='mapbox-directions-destination'>\\n      <label class='mapbox-form-label'>\\n        <span class='directions-icon directions-icon-arrive'></span>\\n      </label>\\n      <div id='mapbox-directions-destination-input'></div>\\n    </div>\\n  </div>\\n\\n  <% if (controls.profileSwitcher) { %>\\n  <div class='mapbox-directions-profile mapbox-directions-component-keyline mapbox-directions-clearfix'><input\\n      id='mapbox-directions-profile-driving-traffic'\\n      type='radio'\\n      name='profile'\\n      value='mapbox/driving-traffic'\\n      <% if (profile === 'mapbox/driving-traffic') { %>checked<% } %>\\n    />\\n    <label for='mapbox-directions-profile-driving-traffic'>Traffic</label>\\n    <input\\n      id='mapbox-directions-profile-driving'\\n      type='radio'\\n      name='profile'\\n      value='mapbox/driving'\\n      <% if (profile === 'mapbox/driving') { %>checked<% } %>\\n    />\\n    <label for='mapbox-directions-profile-driving'>Driving</label>\\n    <input\\n      id='mapbox-directions-profile-walking'\\n      type='radio'\\n      name='profile'\\n      value='mapbox/walking'\\n      <% if (profile === 'mapbox/walking') { %>checked<% } %>\\n    />\\n    <label for='mapbox-directions-profile-walking'>Walking</label>\\n    <input\\n      id='mapbox-directions-profile-cycling'\\n      type='radio'\\n      name='profile'\\n      value='mapbox/cycling'\\n      <% if (profile === 'mapbox/cycling') { %>checked<% } %>\\n    />\\n    <label for='mapbox-directions-profile-cycling'>Cycling</label>\\n  </div>\\n  <% } %>\\n</div>\\n\");\n      /**\n       * Inputs controller\n       *\n       * @param {HTMLElement} el Summary parent container\n       * @param {Object} store A redux store\n       * @param {Object} actions Actions an element can dispatch\n       * @param {Object} map The mapboxgl instance\n       * @private\n       */\n\n      var Inputs = function () {\n        function Inputs(el, store, actions, map) {\n          _classCallCheck(this, Inputs);\n\n          var _store$getState = store.getState(),\n              originQuery = _store$getState.originQuery,\n              destinationQuery = _store$getState.destinationQuery,\n              profile = _store$getState.profile,\n              controls = _store$getState.controls;\n\n          el.innerHTML = tmpl({\n            originQuery: originQuery,\n            destinationQuery: destinationQuery,\n            profile: profile,\n            controls: controls\n          });\n          this.container = el;\n          this.actions = actions;\n          this.store = store;\n          this._map = map;\n          this.onAdd();\n          this.render();\n        }\n\n        _createClass(Inputs, [{\n          key: 'animateToCoordinates',\n          value: function animateToCoordinates(mode, coords) {\n            var _store$getState2 = this.store.getState(),\n                origin = _store$getState2.origin,\n                destination = _store$getState2.destination;\n\n            if (origin.geometry && destination.geometry && !(0, _lodash4.default)(origin.geometry, destination.geometry)) {\n              // Animate map to fit bounds.\n              var bb = (0, _turfExtent2.default)({\n                type: 'FeatureCollection',\n                features: [origin, destination]\n              });\n\n              this._map.fitBounds([[bb[0], bb[1]], [bb[2], bb[3]]], {\n                padding: 80\n              });\n            } else {\n              this._map.flyTo({\n                center: coords\n              });\n            }\n          }\n        }, {\n          key: 'onAdd',\n          value: function onAdd() {\n            var _this = this;\n\n            var _actions = this.actions,\n                clearOrigin = _actions.clearOrigin,\n                clearDestination = _actions.clearDestination,\n                createOrigin = _actions.createOrigin,\n                createDestination = _actions.createDestination,\n                setProfile = _actions.setProfile,\n                reverse = _actions.reverse;\n\n            var _store$getState3 = this.store.getState(),\n                geocoder = _store$getState3.geocoder,\n                accessToken = _store$getState3.accessToken,\n                flyTo = _store$getState3.flyTo,\n                placeholderOrigin = _store$getState3.placeholderOrigin,\n                placeholderDestination = _store$getState3.placeholderDestination,\n                zoom = _store$getState3.zoom;\n\n            this.originInput = new _geocoder2.default(Object.assign({}, {\n              accessToken: accessToken\n            }, geocoder, {\n              flyTo: flyTo,\n              placeholder: placeholderOrigin,\n              zoom: zoom\n            }));\n            var originEl = this.originInput.onAdd(this._map);\n            var originContainerEl = this.container.querySelector('#mapbox-directions-origin-input');\n            originContainerEl.appendChild(originEl);\n            this.destinationInput = new _geocoder2.default(Object.assign({}, {\n              accessToken: accessToken\n            }, geocoder, {\n              flyTo: flyTo,\n              placeholder: placeholderDestination,\n              zoom: zoom\n            }));\n            var destinationEl = this.destinationInput.onAdd(this._map);\n            this.container.querySelector('#mapbox-directions-destination-input').appendChild(destinationEl);\n            this.originInput.on('result', function (e) {\n              var coords = e.result.center;\n              createOrigin(coords);\n\n              _this.animateToCoordinates('origin', coords);\n            });\n            this.originInput.on('clear', clearOrigin);\n            this.destinationInput.on('result', function (e) {\n              var coords = e.result.center;\n              createDestination(coords);\n\n              _this.animateToCoordinates('destination', coords);\n            });\n            this.destinationInput.on('clear', clearDestination); // Driving / Walking / Cycling profiles\n\n            var profiles = this.container.querySelectorAll('input[type=\"radio\"]');\n            Array.prototype.forEach.call(profiles, function (el) {\n              el.addEventListener('change', function () {\n                setProfile(el.value);\n              });\n            }); // Reversing Origin / Destination\n\n            this.container.querySelector('.js-reverse-inputs').addEventListener('click', function () {\n              var _store$getState4 = _this.store.getState(),\n                  origin = _store$getState4.origin,\n                  destination = _store$getState4.destination;\n\n              if (origin) _this.actions.queryDestination(origin.geometry.coordinates);\n              if (destination) _this.actions.queryOrigin(destination.geometry.coordinates);\n              reverse();\n            });\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var _this2 = this;\n\n            this.store.subscribe(function () {\n              var _store$getState5 = _this2.store.getState(),\n                  originQuery = _store$getState5.originQuery,\n                  destinationQuery = _store$getState5.destinationQuery,\n                  originQueryCoordinates = _store$getState5.originQueryCoordinates,\n                  destinationQueryCoordinates = _store$getState5.destinationQueryCoordinates;\n\n              if (originQuery) {\n                _this2.originInput.query(originQuery);\n\n                _this2.actions.queryOrigin(null);\n              }\n\n              if (destinationQuery) {\n                _this2.destinationInput.query(destinationQuery);\n\n                _this2.actions.queryDestination(null);\n              }\n\n              if (originQueryCoordinates) {\n                _this2.originInput.setInput(originQueryCoordinates);\n\n                _this2.animateToCoordinates('origin', originQueryCoordinates);\n\n                _this2.actions.queryOriginCoordinates(null);\n              }\n\n              if (destinationQueryCoordinates) {\n                _this2.destinationInput.setInput(destinationQueryCoordinates);\n\n                _this2.animateToCoordinates('destination', destinationQueryCoordinates);\n\n                _this2.actions.queryDestinationCoordinates(null);\n              }\n            });\n          }\n        }]);\n\n        return Inputs;\n      }();\n\n      exports.default = Inputs;\n    }, {\n      \"./geocoder\": 40,\n      \"lodash.isequal\": 8,\n      \"lodash.template\": 9,\n      \"turf-extent\": 35\n    }],\n    42: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _utils = require('../utils');\n\n      var _utils2 = _interopRequireDefault(_utils);\n\n      var _lodash = require('lodash.template');\n\n      var _lodash2 = _interopRequireDefault(_lodash);\n\n      var _lodash3 = require('lodash.isequal');\n\n      var _lodash4 = _interopRequireDefault(_lodash3);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      } // substack/brfs#39\n\n\n      var instructionsTemplate = (0, _lodash2.default)(\"<div class='directions-control directions-control-directions'>\\n  <div class='mapbox-directions-component mapbox-directions-route-summary<% if (routes > 1) { %> mapbox-directions-multiple<% } %>'>\\n    <% if (routes > 1) { %>\\n    <div class='mapbox-directions-routes mapbox-directions-clearfix'>\\n      <% for (var i = 0; i < routes; i++) { %>\\n        <input type='radio' name='routes' id='<%= i %>' <% if (i === routeIndex) { %>checked<% } %>>\\n        <label for='<%= i %>' class='mapbox-directions-route'><%= i + 1 %></label>\\n      <% } %>\\n    </div>\\n    <% } %>\\n    <h1><%- duration %></h1>\\n    <span><%- distance %></span>\\n  </div>\\n\\n  <div class='mapbox-directions-instructions'>\\n    <div class='mapbox-directions-instructions-wrapper'>\\n      <ol class='mapbox-directions-steps'>\\n        <% steps.forEach(function(step) { %>\\n          <%\\n            var distance = step.distance ? format(step.distance) : false;\\n            var icon = step.maneuver.modifier ? step.maneuver.modifier.replace(/\\\\s+/g, '-').toLowerCase() : step.maneuver.type.replace(/\\\\s+/g, '-').toLowerCase();\\n\\n            if (step.maneuver.type === 'arrive' || step.maneuver.type === 'depart') {\\n              icon = step.maneuver.type;\\n            }\\n\\n            if (step.maneuver.type === 'roundabout' || step.maneuver.type === 'rotary') {\\n              icon= 'roundabout';\\n            }\\n\\n            var lng = step.maneuver.location[0];\\n            var lat = step.maneuver.location[1];\\n          %>\\n          <li\\n            data-lat='<%= lat %>'\\n            data-lng='<%= lng %>'\\n            class='mapbox-directions-step'>\\n            <span class='directions-icon directions-icon-<%= icon %>'></span>\\n            <div class='mapbox-directions-step-maneuver'>\\n              <%= step.maneuver.instruction %>\\n            </div>\\n            <% if (distance) { %>\\n              <div class='mapbox-directions-step-distance'>\\n                <%= distance %>\\n              </div>\\n            <% } %>\\n          </li>\\n        <% }); %>\\n      </ol>\\n    </div>\\n  </div>\\n</div>\\n\");\n      var errorTemplate = (0, _lodash2.default)(\"<div class='directions-control directions-control-directions'>\\n  <div class='mapbox-directions-error'>\\n    <%= error %>\\n  </div>\\n</div>\\n\");\n      /**\n       * Summary/Instructions controller\n       *\n       * @param {HTMLElement} el Summary parent container\n       * @param {Object} store A redux store\n       * @param {Object} actions Actions an element can dispatch\n       * @param {Object} map The mapboxgl instance\n       * @private\n       */\n\n      var Instructions = function () {\n        function Instructions(el, store, actions, map) {\n          _classCallCheck(this, Instructions);\n\n          this.container = el;\n          this.actions = actions;\n          this.store = store;\n          this._map = map;\n          this.directions = {};\n          this.render();\n        }\n\n        _createClass(Instructions, [{\n          key: 'render',\n          value: function render() {\n            var _this = this;\n\n            this.store.subscribe(function () {\n              var _actions = _this.actions,\n                  hoverMarker = _actions.hoverMarker,\n                  setRouteIndex = _actions.setRouteIndex;\n\n              var _store$getState = _this.store.getState(),\n                  routeIndex = _store$getState.routeIndex,\n                  unit = _store$getState.unit,\n                  directions = _store$getState.directions,\n                  error = _store$getState.error,\n                  compile = _store$getState.compile;\n\n              var shouldRender = !(0, _lodash4.default)(directions[routeIndex], _this.directions);\n\n              if (error) {\n                _this.container.innerHTML = errorTemplate({\n                  error: error\n                });\n                return;\n              }\n\n              if (directions.length && shouldRender) {\n                var direction = _this.directions = directions[routeIndex];\n\n                if (compile) {\n                  direction.legs.forEach(function (leg) {\n                    leg.steps.forEach(function (step) {\n                      step.maneuver.instruction = compile('en', step);\n                    });\n                  });\n                }\n\n                _this.container.innerHTML = instructionsTemplate({\n                  routeIndex: routeIndex,\n                  routes: directions.length,\n                  steps: direction.legs[0].steps,\n                  // Todo: Respect all legs,\n                  format: _utils2.default.format[unit],\n                  duration: _utils2.default.format[unit](direction.distance),\n                  distance: _utils2.default.format.duration(direction.duration)\n                });\n\n                var steps = _this.container.querySelectorAll('.mapbox-directions-step');\n\n                Array.prototype.forEach.call(steps, function (el) {\n                  var lng = el.getAttribute('data-lng');\n                  var lat = el.getAttribute('data-lat');\n                  el.addEventListener('mouseover', function () {\n                    hoverMarker([lng, lat]);\n                  });\n                  el.addEventListener('mouseout', function () {\n                    hoverMarker(null);\n                  });\n                  el.addEventListener('click', function () {\n                    _this._map.flyTo({\n                      center: [lng, lat],\n                      zoom: 16\n                    });\n                  });\n                });\n\n                var routes = _this.container.querySelectorAll('input[type=\"radio\"]');\n\n                Array.prototype.forEach.call(routes, function (el) {\n                  el.addEventListener('change', function (e) {\n                    setRouteIndex(parseInt(e.target.id, 10));\n                  });\n                });\n              } else if (_this.container.innerHTML && shouldRender) {\n                _this.container.innerHTML = '';\n              }\n            });\n          }\n        }]);\n\n        return Instructions;\n      }();\n\n      exports.default = Instructions;\n    }, {\n      \"../utils\": 47,\n      \"lodash.isequal\": 8,\n      \"lodash.template\": 9\n    }],\n    43: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _redux = require('redux');\n\n      var _reduxThunk = require('redux-thunk');\n\n      var _reduxThunk2 = _interopRequireDefault(_reduxThunk);\n\n      var _polyline = require('@mapbox/polyline');\n\n      var _utils = require('./utils');\n\n      var _utils2 = _interopRequireDefault(_utils);\n\n      var _reducers = require('./reducers');\n\n      var _reducers2 = _interopRequireDefault(_reducers);\n\n      var _actions = require('./actions');\n\n      var actions = _interopRequireWildcard(_actions);\n\n      var _directions_style = require('./directions_style');\n\n      var _directions_style2 = _interopRequireDefault(_directions_style);\n\n      var _inputs = require('./controls/inputs');\n\n      var _inputs2 = _interopRequireDefault(_inputs);\n\n      var _instructions = require('./controls/instructions');\n\n      var _instructions2 = _interopRequireDefault(_instructions);\n\n      function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n          return obj;\n        } else {\n          var newObj = {};\n\n          if (obj != null) {\n            for (var key in obj) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n          }\n\n          newObj.default = obj;\n          return newObj;\n        }\n      }\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var storeWithMiddleware = (0, _redux.applyMiddleware)(_reduxThunk2.default)(_redux.createStore);\n      var store = storeWithMiddleware(_reducers2.default); // State object management via redux\n      // Controls\n\n      /**\n       * The Directions control\n       * @class MapboxDirections\n       *\n       * @param {Object} options\n       * @param {Array} [options.styles] Override default layer properties of the [directions source](https://github.com/mapbox/mapbox-gl-directions/blob/master/src/directions_style.js). Documentation for each property are specified in the [Mapbox GL Style Reference](https://www.mapbox.com/mapbox-gl-style-spec/).\n       * @param {String} [options.accessToken=null] Required unless `mapboxgl.accessToken` is set globally\n       * @param {String} [options.api=\"https://api.mapbox.com/directions/v5/\"] Override default routing endpoint url\n       * @param {Boolean} [options.interactive=true] Enable/Disable mouse or touch interactivity from the plugin\n       * @param {String} [options.profile=\"mapbox/driving-traffic\"] Routing profile to use. Options: `mapbox/driving-traffic`, `mapbox/driving`, `mapbox/walking`, `mapbox/cycling`\n       * @param {Boolean} [options.alternatives=false] Whether to enable alternatives.\n       * @param {Boolean} [options.congestion=false] Whether to enable congestion along the route line.\n       * @param {String} [options.unit=\"imperial\"] Measurement system to be used in navigation instructions. Options: `imperial`, `metric`\n       * @param {Function} [options.compile=null] Provide a custom function for generating instruction, compatible with osrm-text-instructions.\n       * @param {Object} [options.geocoder] Accepts an object containing the query parameters as [documented here](https://www.mapbox.com/api-documentation/#search-for-places).\n       * @param {Object} [options.controls]\n       * @param {Boolean} [options.controls.inputs=true] Hide or display the inputs control.\n       * @param {Boolean} [options.controls.instructions=true] Hide or display the instructions control.\n       * @param {Boolean} [options.controls.profileSwitcher=true] Hide or display the default profile switch with options for traffic, driving, walking and cycling.\n       * @param {Number} [options.zoom=16] If no bbox exists from the geocoder result, the zoom you set here will be used in the flyTo.\n       * @param {String} [options.language=\"en\"] The language of returned turn-by-turn text instructions. See supported languages : https://docs.mapbox.com/api/navigation/#instructions-languages\n       * @param {String} [options.placeholderOrigin=\"Choose a starting place\"] If set, this text will appear as the placeholder attribute for the origin input element.\n       * @param {String} [options.placeholderDestination=\"Choose destination\"] If set, this text will appear as the placeholder attribute for the destination input element.\n       * @param {Boolean} [options.flyTo=true] If false, animating the map to a selected result is disabled.\n       * @example\n       * var MapboxDirections = require('../src/index');\n       * var directions = new MapboxDirections({\n       *   accessToken: 'YOUR-MAPBOX-ACCESS-TOKEN',\n       *   unit: 'metric',\n       *   profile: 'mapbox/cycling'\n       * });\n       * // add to your mapboxgl map\n       * map.addControl(directions);\n       *\n       * @return {MapboxDirections} `this`\n       */\n\n      var MapboxDirections = function () {\n        function MapboxDirections(options) {\n          _classCallCheck(this, MapboxDirections);\n\n          this.actions = (0, _redux.bindActionCreators)(actions, store.dispatch);\n          this.actions.setOptions(options || {});\n          this.options = options || {};\n          this.onDragDown = this._onDragDown.bind(this);\n          this.onDragMove = this._onDragMove.bind(this);\n          this.onDragUp = this._onDragUp.bind(this);\n          this.move = this._move.bind(this);\n          this.onClick = this._clickHandler().bind(this);\n        }\n\n        _createClass(MapboxDirections, [{\n          key: 'onAdd',\n          value: function onAdd(map) {\n            var _this = this;\n\n            this._map = map;\n\n            var _store$getState = store.getState(),\n                controls = _store$getState.controls;\n\n            var el = this.container = document.createElement('div');\n            el.className = 'mapboxgl-ctrl-directions mapboxgl-ctrl'; // Add controls to the page\n\n            var inputEl = document.createElement('div');\n            inputEl.className = 'directions-control directions-control-inputs';\n            new _inputs2.default(inputEl, store, this.actions, this._map);\n            var directionsEl = document.createElement('div');\n            directionsEl.className = 'directions-control directions-control-instructions';\n            new _instructions2.default(directionsEl, store, {\n              hoverMarker: this.actions.hoverMarker,\n              setRouteIndex: this.actions.setRouteIndex\n            }, this._map);\n            if (controls.inputs) el.appendChild(inputEl);\n            if (controls.instructions) el.appendChild(directionsEl);\n            this.subscribedActions();\n            if (this._map.loaded()) this.mapState();else this._map.on('load', function () {\n              return _this.mapState();\n            });\n            return el;\n          }\n          /**\n           * Removes the control from the map it has been added to. This is called by `map.removeControl`,\n           * which is the recommended method to remove controls.\n           *\n           * @returns {Control} `this`\n           */\n\n        }, {\n          key: 'onRemove',\n          value: function onRemove(map) {\n            this.container.parentNode.removeChild(this.container);\n            this.removeRoutes();\n            map.off('mousedown', this.onDragDown);\n            map.off('mousemove', this.move);\n            map.off('touchstart', this.onDragDown);\n            map.off('touchstart', this.move);\n            map.off('click', this.onClick);\n\n            if (this.storeUnsubscribe) {\n              this.storeUnsubscribe();\n              delete this.storeUnsubscribe;\n            }\n\n            _directions_style2.default.forEach(function (layer) {\n              if (map.getLayer(layer.id)) map.removeLayer(layer.id);\n            });\n\n            if (map.getSource('directions')) map.removeSource('directions');\n            this._map = null;\n            return this;\n          }\n        }, {\n          key: 'mapState',\n          value: function mapState() {\n            var _this2 = this;\n\n            var _store$getState2 = store.getState(),\n                profile = _store$getState2.profile,\n                alternatives = _store$getState2.alternatives,\n                congestion = _store$getState2.congestion,\n                styles = _store$getState2.styles,\n                interactive = _store$getState2.interactive,\n                compile = _store$getState2.compile; // Emit any default or option set config\n\n\n            this.actions.eventEmit('profile', {\n              profile: profile\n            });\n            var geojson = {\n              type: 'geojson',\n              data: {\n                type: 'FeatureCollection',\n                features: []\n              }\n            }; // Add and set data theme layer/style\n\n            this._map.addSource('directions', geojson); // Add direction specific styles to the map\n\n\n            if (styles && styles.length) styles.forEach(function (style) {\n              return _this2._map.addLayer(style);\n            });\n\n            _directions_style2.default.forEach(function (style) {\n              // only add the default style layer if a custom layer wasn't provided\n              if (!_this2._map.getLayer(style.id)) _this2._map.addLayer(style);\n            });\n\n            if (interactive) {\n              this._map.on('mousedown', this.onDragDown);\n\n              this._map.on('mousemove', this.move);\n\n              this._map.on('click', this.onClick);\n\n              this._map.on('touchstart', this.move);\n\n              this._map.on('touchstart', this.onDragDown);\n            }\n          }\n        }, {\n          key: 'subscribedActions',\n          value: function subscribedActions() {\n            var _this3 = this;\n\n            this.storeUnsubscribe = store.subscribe(function () {\n              var _store$getState3 = store.getState(),\n                  origin = _store$getState3.origin,\n                  destination = _store$getState3.destination,\n                  hoverMarker = _store$getState3.hoverMarker,\n                  directions = _store$getState3.directions,\n                  routeIndex = _store$getState3.routeIndex;\n\n              var geojson = {\n                type: 'FeatureCollection',\n                features: [origin, destination, hoverMarker].filter(function (d) {\n                  return d.geometry;\n                })\n              };\n\n              if (directions.length) {\n                directions.forEach(function (feature, index) {\n                  var features = [];\n                  var decoded = (0, _polyline.decode)(feature.geometry, 5).map(function (c) {\n                    return c.reverse();\n                  });\n                  decoded.forEach(function (c, i) {\n                    var previous = features[features.length - 1];\n                    var congestion = feature.legs[0].annotation && feature.legs[0].annotation.congestion && feature.legs[0].annotation.congestion[i - 1];\n\n                    if (previous && (!congestion || previous.properties.congestion === congestion)) {\n                      previous.geometry.coordinates.push(c);\n                    } else {\n                      var segment = {\n                        geometry: {\n                          type: 'LineString',\n                          coordinates: []\n                        },\n                        properties: {\n                          'route-index': index,\n                          route: index === routeIndex ? 'selected' : 'alternate'\n                        }\n                      }; // New segment starts with previous segment's last coordinate.\n\n                      if (previous) segment.geometry.coordinates.push(previous.geometry.coordinates[previous.geometry.coordinates.length - 1]);\n                      segment.geometry.coordinates.push(c);\n\n                      if (congestion) {\n                        segment.properties.congestion = feature.legs[0].annotation.congestion[i - 1];\n                      }\n\n                      features.push(segment);\n                    }\n                  });\n                  geojson.features = geojson.features.concat(features);\n\n                  if (index === routeIndex) {\n                    // Collect any possible waypoints from steps\n                    feature.legs[0].steps.forEach(function (d) {\n                      if (d.maneuver.type === 'waypoint') {\n                        geojson.features.push({\n                          type: 'Feature',\n                          geometry: d.maneuver.location,\n                          properties: {\n                            id: 'waypoint'\n                          }\n                        });\n                      }\n                    });\n                  }\n                });\n              }\n\n              if (_this3._map.style && _this3._map.getSource('directions')) {\n                _this3._map.getSource('directions').setData(geojson);\n              }\n            });\n          }\n        }, {\n          key: '_clickHandler',\n          value: function _clickHandler() {\n            var timer = null;\n            var delay = 250;\n            return function (event) {\n              if (!timer) {\n                var singleClickHandler = this._onSingleClick.bind(this);\n\n                timer = setTimeout(function () {\n                  singleClickHandler(event);\n                  timer = null;\n                }, delay);\n              } else {\n                clearTimeout(timer);\n                timer = null;\n\n                this._map.zoomIn();\n              }\n            };\n          }\n        }, {\n          key: '_onSingleClick',\n          value: function _onSingleClick(e) {\n            var _this4 = this;\n\n            var _store$getState4 = store.getState(),\n                origin = _store$getState4.origin;\n\n            var coords = [e.lngLat.lng, e.lngLat.lat];\n\n            if (!origin.geometry) {\n              this.actions.setOriginFromCoordinates(coords);\n            } else {\n              var features = this._map.queryRenderedFeatures(e.point, {\n                layers: ['directions-origin-point', 'directions-destination-point', 'directions-waypoint-point', 'directions-route-line-alt']\n              });\n\n              if (features.length) {\n                // Remove any waypoints\n                features.forEach(function (f) {\n                  if (f.layer.id === 'directions-waypoint-point') {\n                    _this4.actions.removeWaypoint(f);\n                  }\n                });\n\n                if (features[0].properties.route === 'alternate') {\n                  var index = features[0].properties['route-index'];\n                  this.actions.setRouteIndex(index);\n                }\n              } else {\n                this.actions.setDestinationFromCoordinates(coords);\n\n                this._map.flyTo({\n                  center: coords\n                });\n              }\n            }\n          }\n        }, {\n          key: '_move',\n          value: function _move(e) {\n            var _this5 = this;\n\n            var _store$getState5 = store.getState(),\n                hoverMarker = _store$getState5.hoverMarker;\n\n            var features = this._map.queryRenderedFeatures(e.point, {\n              layers: ['directions-route-line-alt', 'directions-route-line', 'directions-origin-point', 'directions-destination-point', 'directions-hover-point']\n            });\n\n            this._map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n\n            if (features.length) {\n              this.isCursorOverPoint = features[0];\n\n              this._map.dragPan.disable(); // Add a possible waypoint marker when hovering over the active route line\n\n\n              features.forEach(function (feature) {\n                if (feature.layer.id === 'directions-route-line') {\n                  _this5.actions.hoverMarker([e.lngLat.lng, e.lngLat.lat]);\n                } else if (hoverMarker.geometry) {\n                  _this5.actions.hoverMarker(null);\n                }\n              });\n            } else if (this.isCursorOverPoint) {\n              this.isCursorOverPoint = false;\n\n              this._map.dragPan.enable();\n            }\n          }\n        }, {\n          key: '_onDragDown',\n          value: function _onDragDown() {\n            if (!this.isCursorOverPoint) return;\n            this.isDragging = this.isCursorOverPoint;\n            this._map.getCanvas().style.cursor = 'grab';\n\n            this._map.on('mousemove', this.onDragMove);\n\n            this._map.on('mouseup', this.onDragUp);\n\n            this._map.on('touchmove', this.onDragMove);\n\n            this._map.on('touchend', this.onDragUp);\n          }\n        }, {\n          key: '_onDragMove',\n          value: function _onDragMove(e) {\n            if (!this.isDragging) return;\n            var coords = [e.lngLat.lng, e.lngLat.lat];\n\n            switch (this.isDragging.layer.id) {\n              case 'directions-origin-point':\n                this.actions.createOrigin(coords);\n                break;\n\n              case 'directions-destination-point':\n                this.actions.createDestination(coords);\n                break;\n\n              case 'directions-hover-point':\n                this.actions.hoverMarker(coords);\n                break;\n            }\n          }\n        }, {\n          key: '_onDragUp',\n          value: function _onDragUp() {\n            if (!this.isDragging) return;\n\n            var _store$getState6 = store.getState(),\n                hoverMarker = _store$getState6.hoverMarker,\n                origin = _store$getState6.origin,\n                destination = _store$getState6.destination;\n\n            switch (this.isDragging.layer.id) {\n              case 'directions-origin-point':\n                this.actions.setOriginFromCoordinates(origin.geometry.coordinates);\n                break;\n\n              case 'directions-destination-point':\n                this.actions.setDestinationFromCoordinates(destination.geometry.coordinates);\n                break;\n\n              case 'directions-hover-point':\n                // Add waypoint if a sufficent amount of dragging has occurred.\n                if (hoverMarker.geometry && !_utils2.default.coordinateMatch(this.isDragging, hoverMarker)) {\n                  this.actions.addWaypoint(0, hoverMarker);\n                }\n\n                break;\n            }\n\n            this.isDragging = false;\n            this._map.getCanvas().style.cursor = '';\n\n            this._map.off('touchmove', this.onDragMove);\n\n            this._map.off('touchend', this.onDragUp);\n\n            this._map.off('mousemove', this.onDragMove);\n\n            this._map.off('mouseup', this.onDragUp);\n          } // API Methods\n          // ============================\n\n          /**\n           * Turn on or off interactivity\n           * @param {Boolean} state sets interactivity based on a state of `true` or `false`.\n           * @returns {MapboxDirections} this\n           */\n\n        }, {\n          key: 'interactive',\n          value: function interactive(state) {\n            if (state) {\n              this._map.on('touchstart', this.move);\n\n              this._map.on('touchstart', this.onDragDown);\n\n              this._map.on('mousedown', this.onDragDown);\n\n              this._map.on('mousemove', this.move);\n\n              this._map.on('click', this.onClick);\n            } else {\n              this._map.off('touchstart', this.move);\n\n              this._map.off('touchstart', this.onDragDown);\n\n              this._map.off('mousedown', this.onDragDown);\n\n              this._map.off('mousemove', this.move);\n\n              this._map.off('click', this.onClick);\n            }\n\n            return this;\n          }\n          /**\n           * Returns the origin of the current route.\n           * @returns {Object} origin\n           */\n\n        }, {\n          key: 'getOrigin',\n          value: function getOrigin() {\n            return store.getState().origin;\n          }\n          /**\n           * Sets origin. _Note:_ calling this method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n           * to have run.\n           * @param {Array<number>|String} query An array of coordinates [lng, lat] or location name as a string.\n           * @returns {MapboxDirections} this\n           */\n\n        }, {\n          key: 'setOrigin',\n          value: function setOrigin(query) {\n            if (typeof query === 'string') {\n              this.actions.queryOrigin(query);\n            } else {\n              this.actions.setOriginFromCoordinates(query);\n            }\n\n            return this;\n          }\n          /**\n           * Returns the destination of the current route.\n           * @returns {Object} destination\n           */\n\n        }, {\n          key: 'getDestination',\n          value: function getDestination() {\n            return store.getState().destination;\n          }\n          /**\n           * Sets destination. _Note:_ calling this method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n           * to have run.\n           * @param {Array<number>|String} query An array of coordinates [lng, lat] or location name as a string.\n           * @returns {MapboxDirections} this\n           */\n\n        }, {\n          key: 'setDestination',\n          value: function setDestination(query) {\n            if (typeof query === 'string') {\n              this.actions.queryDestination(query);\n            } else {\n              this.actions.setDestinationFromCoordinates(query);\n            }\n\n            return this;\n          }\n          /**\n           * Swap the origin and destination.\n           * @returns {MapboxDirections} this\n           */\n\n        }, {\n          key: 'reverse',\n          value: function reverse() {\n            this.actions.reverse();\n            return this;\n          }\n          /**\n           * Add a waypoint to the route. _Note:_ calling this method requires the\n           * [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load) to have run.\n           * @param {Number} index position waypoint should be placed in the waypoint array\n           * @param {Array<number>|Point} waypoint can be a GeoJSON Point Feature or [lng, lat] coordinates.\n           * @returns {MapboxDirections} this;\n           */\n\n        }, {\n          key: 'addWaypoint',\n          value: function addWaypoint(index, waypoint) {\n            if (!waypoint.type) waypoint = _utils2.default.createPoint(waypoint, {\n              id: 'waypoint'\n            });\n            this.actions.addWaypoint(index, waypoint);\n            return this;\n          }\n          /**\n           * Change the waypoint at a given index in the route. _Note:_ calling this\n           * method requires the [map load event](https://www.mapbox.com/mapbox-gl-js/api/#Map.load)\n           * to have run.\n           * @param {Number} index indexed position of the waypoint to update\n           * @param {Array<number>|Point} waypoint can be a GeoJSON Point Feature or [lng, lat] coordinates.\n           * @returns {MapboxDirections} this;\n           */\n\n        }, {\n          key: 'setWaypoint',\n          value: function setWaypoint(index, waypoint) {\n            if (!waypoint.type) waypoint = _utils2.default.createPoint(waypoint, {\n              id: 'waypoint'\n            });\n            this.actions.setWaypoint(index, waypoint);\n            return this;\n          }\n          /**\n           * Remove a waypoint from the route.\n           * @param {Number} index position in the waypoints array.\n           * @returns {MapboxDirections} this;\n           */\n\n        }, {\n          key: 'removeWaypoint',\n          value: function removeWaypoint(index) {\n            var _store$getState7 = store.getState(),\n                waypoints = _store$getState7.waypoints;\n\n            this.actions.removeWaypoint(waypoints[index]);\n            return this;\n          }\n          /**\n           * Fetch all current waypoints in a route.\n           * @returns {Array} waypoints\n           */\n\n        }, {\n          key: 'getWaypoints',\n          value: function getWaypoints() {\n            return store.getState().waypoints;\n          }\n          /**\n           * Removes all routes and waypoints from the map.\n           *\n           * @returns {MapboxDirections} this;\n           */\n\n        }, {\n          key: 'removeRoutes',\n          value: function removeRoutes() {\n            this.actions.clearOrigin();\n            this.actions.clearDestination();\n            return this;\n          }\n          /**\n           * Subscribe to events that happen within the plugin.\n           * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n           *\n           * - __clear__ `{ type: } Type is one of 'origin' or 'destination'`\n           * - __loading__ `{ type: } Type is one of 'origin' or 'destination'`\n           * - __profile__ `{ profile } Profile is one of 'driving', 'walking', or 'cycling'`\n           * - __origin__ `{ feature } Fired when origin is set`\n           * - __destination__ `{ feature } Fired when destination is set`\n           * - __route__ `{ route } Fired when a route is updated`\n           * - __error__ `{ error } Error as string\n           * @param {Function} fn function that's called when the event is emitted.\n           * @returns {MapboxDirections} this;\n           */\n\n        }, {\n          key: 'on',\n          value: function on(type, fn) {\n            this.actions.eventSubscribe(type, fn);\n            return this;\n          }\n        }]);\n\n        return MapboxDirections;\n      }();\n\n      exports.default = MapboxDirections;\n    }, {\n      \"./actions\": 38,\n      \"./controls/inputs\": 41,\n      \"./controls/instructions\": 42,\n      \"./directions_style\": 44,\n      \"./reducers\": 46,\n      \"./utils\": 47,\n      \"@mapbox/polyline\": 1,\n      \"redux\": 28,\n      \"redux-thunk\": 22\n    }],\n    44: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var style = [{\n        'id': 'directions-route-line-alt',\n        'type': 'line',\n        'source': 'directions',\n        'layout': {\n          'line-cap': 'round',\n          'line-join': 'round'\n        },\n        'paint': {\n          'line-color': '#bbb',\n          'line-width': 4\n        },\n        'filter': ['all', ['in', '$type', 'LineString'], ['in', 'route', 'alternate']]\n      }, {\n        'id': 'directions-route-line-casing',\n        'type': 'line',\n        'source': 'directions',\n        'layout': {\n          'line-cap': 'round',\n          'line-join': 'round'\n        },\n        'paint': {\n          'line-color': '#2d5f99',\n          'line-width': 12\n        },\n        'filter': ['all', ['in', '$type', 'LineString'], ['in', 'route', 'selected']]\n      }, {\n        'id': 'directions-route-line',\n        'type': 'line',\n        'source': 'directions',\n        'layout': {\n          'line-cap': 'butt',\n          'line-join': 'round'\n        },\n        'paint': {\n          'line-color': {\n            'property': 'congestion',\n            'type': 'categorical',\n            'default': '#4882c5',\n            'stops': [['unknown', '#4882c5'], ['low', '#4882c5'], ['moderate', '#f09a46'], ['heavy', '#e34341'], ['severe', '#8b2342']]\n          },\n          'line-width': 7\n        },\n        'filter': ['all', ['in', '$type', 'LineString'], ['in', 'route', 'selected']]\n      }, {\n        'id': 'directions-hover-point-casing',\n        'type': 'circle',\n        'source': 'directions',\n        'paint': {\n          'circle-radius': 8,\n          'circle-color': '#fff'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'id', 'hover']]\n      }, {\n        'id': 'directions-hover-point',\n        'type': 'circle',\n        'source': 'directions',\n        'paint': {\n          'circle-radius': 6,\n          'circle-color': '#3bb2d0'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'id', 'hover']]\n      }, {\n        'id': 'directions-waypoint-point-casing',\n        'type': 'circle',\n        'source': 'directions',\n        'paint': {\n          'circle-radius': 8,\n          'circle-color': '#fff'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'id', 'waypoint']]\n      }, {\n        'id': 'directions-waypoint-point',\n        'type': 'circle',\n        'source': 'directions',\n        'paint': {\n          'circle-radius': 6,\n          'circle-color': '#8a8bc9'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'id', 'waypoint']]\n      }, {\n        'id': 'directions-origin-point',\n        'type': 'circle',\n        'source': 'directions',\n        'paint': {\n          'circle-radius': 18,\n          'circle-color': '#3bb2d0'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'marker-symbol', 'A']]\n      }, {\n        'id': 'directions-origin-label',\n        'type': 'symbol',\n        'source': 'directions',\n        'layout': {\n          'text-field': 'A',\n          'text-font': ['Open Sans Bold', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        },\n        'paint': {\n          'text-color': '#fff'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'marker-symbol', 'A']]\n      }, {\n        'id': 'directions-destination-point',\n        'type': 'circle',\n        'source': 'directions',\n        'paint': {\n          'circle-radius': 18,\n          'circle-color': '#8a8bc9'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'marker-symbol', 'B']]\n      }, {\n        'id': 'directions-destination-label',\n        'type': 'symbol',\n        'source': 'directions',\n        'layout': {\n          'text-field': 'B',\n          'text-font': ['Open Sans Bold', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        },\n        'paint': {\n          'text-color': '#fff'\n        },\n        'filter': ['all', ['in', '$type', 'Point'], ['in', 'marker-symbol', 'B']]\n      }];\n      exports.default = style;\n    }, {}],\n    45: [function (require, module, exports) {\n      'use strict';\n\n      var _directions = require('./directions');\n\n      var _directions2 = _interopRequireDefault(_directions);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      module.exports = _directions2.default;\n    }, {\n      \"./directions\": 43\n    }],\n    46: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _action_types = require('../constants/action_types.js');\n\n      var types = _interopRequireWildcard(_action_types);\n\n      var _deepAssign = require('deep-assign');\n\n      var _deepAssign2 = _interopRequireDefault(_deepAssign);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n          return obj;\n        } else {\n          var newObj = {};\n\n          if (obj != null) {\n            for (var key in obj) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n          }\n\n          newObj.default = obj;\n          return newObj;\n        }\n      }\n\n      var initialState = {\n        // Options set on initialization\n        api: 'https://api.mapbox.com/directions/v5/',\n        profile: 'mapbox/driving-traffic',\n        alternatives: false,\n        congestion: false,\n        unit: 'imperial',\n        flyTo: true,\n        placeholderOrigin: 'Choose a starting place',\n        placeholderDestination: 'Choose destination',\n        zoom: 16,\n        language: 'en',\n        compile: null,\n        proximity: false,\n        styles: [],\n        // UI controls\n        controls: {\n          profileSwitcher: true,\n          inputs: true,\n          instructions: true\n        },\n        // Optional setting to pass options available to mapbox-gl-geocoder\n        geocoder: {},\n        interactive: true,\n        // Container for client registered events\n        events: {},\n        // Marker feature drawn on the map at any point.\n        origin: {},\n        destination: {},\n        hoverMarker: {},\n        waypoints: [],\n        // User input strings or result returned from geocoder\n        originQuery: null,\n        destinationQuery: null,\n        originQueryCoordinates: null,\n        destinationQueryCoordinates: null,\n        // Directions data\n        directions: [],\n        routeIndex: 0\n      };\n\n      function data() {\n        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n        var action = arguments[1];\n\n        switch (action.type) {\n          case types.SET_OPTIONS:\n            return (0, _deepAssign2.default)({}, state, action.options);\n\n          case types.DIRECTIONS_PROFILE:\n            return Object.assign({}, state, {\n              profile: action.profile\n            });\n\n          case types.ORIGIN:\n            return Object.assign({}, state, {\n              origin: action.origin,\n              hoverMarker: {}\n            });\n\n          case types.DESTINATION:\n            return Object.assign({}, state, {\n              destination: action.destination,\n              hoverMarker: {}\n            });\n\n          case types.HOVER_MARKER:\n            return Object.assign({}, state, {\n              hoverMarker: action.hoverMarker\n            });\n\n          case types.WAYPOINTS:\n            return Object.assign({}, state, {\n              waypoints: action.waypoints\n            });\n\n          case types.ORIGIN_QUERY:\n            return Object.assign({}, state, {\n              originQuery: action.query\n            });\n\n          case types.DESTINATION_QUERY:\n            return Object.assign({}, state, {\n              destinationQuery: action.query\n            });\n\n          case types.ORIGIN_FROM_COORDINATES:\n            return Object.assign({}, state, {\n              originQueryCoordinates: action.coordinates\n            });\n\n          case types.DESTINATION_FROM_COORDINATES:\n            return Object.assign({}, state, {\n              destinationQueryCoordinates: action.coordinates\n            });\n\n          case types.ORIGIN_CLEAR:\n            return Object.assign({}, state, {\n              origin: {},\n              originQuery: '',\n              waypoints: [],\n              directions: []\n            });\n\n          case types.DESTINATION_CLEAR:\n            return Object.assign({}, state, {\n              destination: {},\n              destinationQuery: '',\n              waypoints: [],\n              directions: []\n            });\n\n          case types.DIRECTIONS:\n            return Object.assign({}, state, {\n              directions: action.directions\n            });\n\n          case types.ROUTE_INDEX:\n            return Object.assign({}, state, {\n              routeIndex: action.routeIndex\n            });\n\n          case types.ERROR:\n            return Object.assign({}, state, {\n              error: action.error\n            });\n\n          default:\n            return state;\n        }\n      }\n\n      exports.default = data;\n    }, {\n      \"../constants/action_types.js\": 39,\n      \"deep-assign\": 2\n    }],\n    47: [function (require, module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      function validCoords(coords) {\n        return coords[0] >= -180 && coords[0] <= 180 && coords[1] >= -90 && coords[1] <= 90;\n      }\n\n      function coordinateMatch(a, b) {\n        a = a.geometry.coordinates;\n        b = b.geometry.coordinates;\n        return a.join() === b.join() || a[0].toFixed(3) === b[0].toFixed(3) && a[1].toFixed(3) === b[1].toFixed(3);\n      }\n\n      function wrap(n) {\n        var d = 180 - -180;\n        var w = ((n - -180) % d + d) % d + -180;\n        return w === -180 ? 180 : w;\n      }\n\n      function roundWithOriginalPrecision(input, original) {\n        var precision = 0;\n\n        if (Math.floor(original) !== original) {\n          precision = original.toString().split('.')[1].length;\n        }\n\n        return input.toFixed(Math.min(precision, 5));\n      }\n\n      function createPoint(coordinates, properties) {\n        return {\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: coordinates\n          },\n          properties: properties ? properties : {}\n        };\n      }\n\n      var format = {\n        duration: function duration(s) {\n          var m = Math.floor(s / 60),\n              h = Math.floor(m / 60);\n          s %= 60;\n          m %= 60;\n          if (h === 0 && m === 0) return s + 's';\n          if (h === 0) return m + 'min';\n          return h + 'h ' + m + 'min';\n        },\n        imperial: function imperial(m) {\n          var mi = m / 1609.344;\n          if (mi >= 100) return mi.toFixed(0) + 'mi';\n          if (mi >= 10) return mi.toFixed(1) + 'mi';\n          if (mi >= 0.1) return mi.toFixed(2) + 'mi';\n          return (mi * 5280).toFixed(0) + 'ft';\n        },\n        metric: function metric(m) {\n          if (m >= 100000) return (m / 1000).toFixed(0) + 'km';\n          if (m >= 10000) return (m / 1000).toFixed(1) + 'km';\n          if (m >= 100) return (m / 1000).toFixed(2) + 'km';\n          return m.toFixed(0) + 'm';\n        }\n      };\n      exports.default = {\n        format: format,\n        coordinateMatch: coordinateMatch,\n        createPoint: createPoint,\n        validCoords: validCoords,\n        wrap: wrap,\n        roundWithOriginalPrecision: roundWithOriginalPrecision\n      };\n    }, {}]\n  }, {}, [45])(45);\n});","map":null,"metadata":{},"sourceType":"script"}